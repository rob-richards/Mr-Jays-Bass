{***********************************************
West Africa - Ensemble
Main Page
Author: Native Instruments
Written by: Nikolas Jeroma, Adam Hanley
Modified: November 14, 2018
*************************************************}

on init
	
{ function new }
	
	declare const $MF_TAP_VELO_ATT := 40
	
	{midi drag label}
	declare ui_label $midi_drag_lbl (1,1)
	set_text($midi_drag_lbl,"")
	set_control_par(get_ui_id($midi_drag_lbl),$CONTROL_PAR_WIDTH,25)
	set_control_par(get_ui_id($midi_drag_lbl),$CONTROL_PAR_HEIGHT,17)
	set_control_par_str(get_ui_id($midi_drag_lbl),$CONTROL_PAR_PICTURE,"Patten-Drag-Midi-Btn")
	set_control_par(get_ui_id($midi_drag_lbl),$CONTROL_PAR_PICTURE_STATE,0)
	set_control_par(get_ui_id($midi_drag_lbl),$CONTROL_PAR_DND_BEHAVIOUR,1)
	set_control_help($midi_drag_lbl,"MIDI Drag: Click and drag a MIDI file of the current pattern into your host project. All parameters that affect pattern playback like <Swing>, <Feel>, or <Intensity> are applied to the MIDI file.")
	move_control_px($midi_drag_lbl,333,277+5)
	
	declare const $MF_MAX_NUM_OF_NOTES := 1000 {the maximum number of notes in the midi file}
	mf_set_buffer_size($MF_MAX_NUM_OF_NOTES)
	
	{midi file export}
	declare $cur_event
	declare $cur_pos
	declare $cur_pos_difference
	declare $cur_note
	declare $cur_velo
	declare $cur_dur
	declare $cur_track
	declare $create_mf_note
	declare $cur_beat
	declare $cur_flam
	declare $cur_articulation
	declare $cur_step_delay_1
	declare $cur_step_delay_2
	declare $cur_step_delay_3
	declare $cur_step_delay_4
	declare $cur_step_delay_5
	declare $cur_step_delay_6
	declare $cur_step_delay_7
	declare $cur_step_delay_8
	
	declare $cur_hand
	
	declare $mf_step_counter
	declare $mf_step_duration
	
	{event limiter}
	declare const $KNOB_ADJUSTMENT_TOLERANCE := 50 * 1000
	declare $intensity_sld_last_callback := -1
	declare $intensity_sld_last_value := -1
	
	declare $tap_vol_sld_last_callback := -1
	declare $tap_vol_sld_last_value := -1
	
	declare $swing_sld_last_callback := -1
	declare $swing_sld_last_value := -1
	
	declare $humanize_sld_last_callback := -1
	declare $humanize_sld_last_value := -1
	
	declare $step1_delay_sld_last_callback := -1
	declare $step1_delay_sld_last_value := -1
	
	declare $step2_delay_sld_last_callback := -1
	declare $step2_delay_sld_last_value := -1
	
	declare $step3_delay_sld_last_callback := -1
	declare $step3_delay_sld_last_value := -1
	
	declare $beat_sld_last_callback := -1
	declare $beat_sld_last_value := -1
	
	declare $preset_sld_last_callback := -1
	declare $preset_sld_last_value := -1
	
	declare $inst1_sld_last_callback := -1
	declare $inst1_sld_last_value := -1
	
	declare $inst2_sld_last_callback := -1
	declare $inst2_sld_last_value := -1
	
	
	
{function } {}
	
{ function constants }
	
	{GENERAL}
	
	message("")
	declare $count
	make_perfview
	set_script_title("Main")
	set_control_par_str($INST_WALLPAPER_ID, $CONTROL_PAR_PICTURE, "dswa_bg_percens")
	set_ui_height_px(350)
	
	set_key_pressed_support(1)
	
	{snapshot}
	declare $instr_loaded := 1 {1 if init callback has been loaded, 0 otherwise}
	set_snapshot_type(1)
	
	set_control_par_str($INST_ICON_ID,$CONTROL_PAR_PICTURE,"NID_instrument_icon")
	
	SET_CONDITION(NO_SYS_SCRIPT_PEDAL)
	
	declare const $MAX_RANDOMIZE_ABS_TIME := 18 {in milliseconds, scaled by humanize slider}
	
	declare const $FLAM_TIME_MAX := 52 {in milliseconds}
	declare const $FLAM_TIME_MIN := 40
	
	declare const $DJEMBE_TAP_VOL_MAX := 12000 {in millidecibel, range is scaled by djembe tap vol slider}
	declare const $DJEMBE_TAP_VOL_MIN := -12000
	
	declare const $MAX_TUNING := 520833
	declare const $MIN_TUNING := 472222
	
	declare const $MAX_SWING_AMOUNT := 5000 {5000 equals 50 percent of one step}
	
	{SEQUENCER CONSTANTS}
	
	declare const $NUM_OF_BEATS := 4 {i.e. 4 = 4/4 bar}
	declare const $TICKS_PER_BEAT := 24
	declare const $MAX_NUM_OF_STEPS := 16 {don't change, must be 16}
	
	declare const $NUM_OF_PRESETS := 12
	declare const $NUM_OF_PHRASES := 12
	
	declare const $PRESET_KEY_MIN := 36
	declare const $PRESET_KEY_MAX := 47
	
	declare const $PHRASE_RANGE_MIN := 48
	declare const $PHRASE_RANGE_MAX := 59
	
	declare const $SOLO_DJEMBE_RANGE_MIN := 60
	declare const $SOLO_DJEMBE_RANGE_MAX := 71
	
	declare const $DUNUN_RANGE_MIN := 72
	declare const $DUNUN_RANGE_MAX := 83
	
	declare const $DJEMBE_RANGE_MIN := 84
	declare const $DJEMBE_RANGE_MAX := 95
	
	declare const $NUM_OF_TRACKS := 8
	
	{Note Numbers}
	
	declare const $TRACK_1_NOTE := 72
	declare const $TRACK_2_NOTE := 69
	declare const $TRACK_3_NOTE := 68
	declare const $TRACK_4_NOTE := 66
	declare const $TRACK_5_NOTE := 65
	declare const $TRACK_6_NOTE := 63
	declare const $TRACK_7_NOTE := 62
	declare const $TRACK_8_NOTE := 60
	
	declare const $DUNUNBA_NOTE := 36
	declare const $DUNUNBA_MUTED_NOTE := 40
	
	declare const $BELL_LOW_NOTE := 36
	
	declare const $SANGBA_NOTE := 36
	declare const $SANGBA_MUTED_NOTE := 40
	
	declare const $BELL_MID_NOTE := 36
	
	declare const $KENKENI_NOTE := 36
	declare const $KENKENI_MUTED_NOTE := 40
	
	declare const $BELL_HIGH_NOTE := 36
	
	declare const $DJEMBE_BASS_NOTE := 36
	declare const $DJEMBE_OPEN_NOTE := 42
	declare const $DJEMBE_SLAP_NOTE := 48
	declare const $DJEMBE_TAP_NOTE := 54
	declare const $DJEMBE_FINGER_OPEN_NOTE := 60
	declare const $DJEMBE_FINGER_SLAP_NOTE := 66
	
	declare const $DUNUNBA_GRP_START := 0 {the dununba groups start at this group index}
	declare const $BELL_LOW_GRP_START := 4
	declare const $SANGBA_GRP_START := 7
	declare const $BELL_MID_GRP_START := 11
	declare const $KENKENI_GRP_START := 14
	declare const $BELL_HIGH_GRP_START := 18
	declare const $DJEMBE_2_GRP_START := 21
	declare const $DJEMBE_1_GRP_START := 28
	declare const $SOLO_DJEMBE_GRP_START := 35
	
	{NUMBERING OF TRACKS IS 1 TO 8, Track 0 is Lauflicht}
	
	declare const $DEFAULT_WIDTH := 20
	declare const $DEFAULT_HEIGHT := 20
	
	declare const $SEQ_WIDTH := 300
	
	declare const $DEFAULT_POS_X := 164
	declare %DEFAULT_DIST_X[2] := (39,26)
	declare %DEFAULT_X_OFFSET[28] := (...
	{12}	0,0,0,	0,0,0,	-3,-3,-3,	-3,-3,-3,	...
	{16}	0,0,0,0,	13,13,13,13,	22,22,22,22,	35,35,35,35)
	declare const $DEFAULT_POS_Y_TRACK_0 := 32
	declare const $DEFAULT_POS_Y_TRACK_1 := 57
	declare const $DEFAULT_POS_Y_TRACK_2 := 81
	declare const $DEFAULT_POS_Y_TRACK_3 := 106
	declare const $DEFAULT_POS_Y_TRACK_4 := 124
	declare const $DEFAULT_POS_Y_TRACK_5 := 150
	declare const $DEFAULT_POS_Y_TRACK_6 := 168
	declare const $DEFAULT_POS_Y_TRACK_7 := 195
	declare const $DEFAULT_POS_Y_TRACK_8 := 213
	
	declare const $track_1_idx := 0
	declare const $track_2_idx := 1
	declare const $track_3_idx := 2
	declare const $track_4_idx := 3
	declare const $track_5_idx := 4
	declare const $track_6_idx := 5
	declare const $track_7_idx := 6
	declare const $track_8_idx := 7
	
	declare !note_names[12]
	!note_names[0] := "C1"
	!note_names[1] := "Db1"
	!note_names[2] := "D1"
	!note_names[3] := "Eb1"
	!note_names[4] := "E1"
	!note_names[5] := "F1"
	!note_names[6] := "Gb1"
	!note_names[7] := "G1"
	!note_names[8] := "Ab1"
	!note_names[9] := "A1"
	!note_names[10] := "Bb1"
	!note_names[11] := "B1"
	
	declare %note_mapping[36] := (...
	{C2-B2} $DUNUNBA_NOTE,0,$DUNUNBA_MUTED_NOTE,0,$SANGBA_NOTE,$SANGBA_MUTED_NOTE,$BELL_LOW_NOTE,$KENKENI_NOTE,$BELL_MID_NOTE,$KENKENI_MUTED_NOTE,$BELL_HIGH_NOTE,0,...
	{C3-Gb3}$DJEMBE_BASS_NOTE,$DJEMBE_BASS_NOTE+3,$DJEMBE_OPEN_NOTE,$DJEMBE_OPEN_NOTE+3,$DJEMBE_SLAP_NOTE,$DJEMBE_SLAP_NOTE+3,...
	{G3-B3} $DJEMBE_BASS_NOTE,$DJEMBE_BASS_NOTE+3,$DJEMBE_OPEN_NOTE,$DJEMBE_OPEN_NOTE+3,$DJEMBE_SLAP_NOTE,$DJEMBE_SLAP_NOTE+3,...
			54,54+3,60,60+3,66,66+3,54,54+3,60,60+3,66,66+3)
			
	
	declare %solo_note_mapping[6] := (...
	$DJEMBE_BASS_NOTE,$DJEMBE_BASS_NOTE+3,$DJEMBE_OPEN_NOTE,$DJEMBE_OPEN_NOTE+3,$DJEMBE_SLAP_NOTE,$DJEMBE_SLAP_NOTE+3)
	
	declare %solo_flam_mapping[6] := (...
	$DJEMBE_SLAP_NOTE+3,$DJEMBE_SLAP_NOTE,$DJEMBE_OPEN_NOTE+3,$DJEMBE_OPEN_NOTE,$DJEMBE_SLAP_NOTE+3,$DJEMBE_SLAP_NOTE)
	
	declare $beat_grid
	$beat_grid := 3
	make_persistent($beat_grid)
	read_persistent_var($beat_grid)
	
	declare $ticks_per_step
	$ticks_per_step := $TICKS_PER_BEAT/$beat_grid
	make_persistent($ticks_per_step)
	
	declare $num_of_steps
	$num_of_steps := $beat_grid * $NUM_OF_BEATS
	make_persistent($num_of_steps)
	
	{SLOTS}
	
	declare const $RVB_1_SLOT_IDX := 0
	declare const $RVB_2_SLOT_IDX := 1
	
	declare const $RVB_1_MAX := 400000
	declare const $RVB_1_MIN := 250000
	
	declare const $RVB_2_MAX := 500000
	declare const $RVB_2_MIN := 250000
	
	declare const $BELL_VOL_SLOT_IDX := 6
	
{function } {}
	
{ function default_page }
	{y offset = 5}
	
	declare $gui_count
	declare const $FONT_ID := 18
	
	declare ui_button $edit_seq_btn
	set_control_par_str(get_ui_id($edit_seq_btn),$CONTROL_PAR_PICTURE,"dswa_btn_edit")
	set_control_par_str(get_ui_id($edit_seq_btn),$CONTROL_PAR_TEXT,"")
	set_control_par(get_ui_id($edit_seq_btn),$CONTROL_PAR_HEIGHT,39)
	set_control_par(get_ui_id($edit_seq_btn),$CONTROL_PAR_WIDTH,49)
	move_control_px($edit_seq_btn,315,299)
	
	declare ui_switch $play_btn
	set_control_par_str(get_ui_id($play_btn),$CONTROL_PAR_PICTURE,"dswa_btn_play")
	set_control_par_str(get_ui_id($play_btn),$CONTROL_PAR_TEXT,"")
	set_control_par(get_ui_id($play_btn),$CONTROL_PAR_HEIGHT,47)
	set_control_par(get_ui_id($play_btn),$CONTROL_PAR_WIDTH,43)
	move_control_px($play_btn,68,296)
	
	declare ui_button $solo_djembe_btn
	declare ui_button $djembe_1_btn
	declare ui_button $djembe_2_btn
	declare ui_button $kenkeni_btn
	declare ui_button $sangba_btn
	declare ui_button $dununba_btn
	
	declare ui_label $solo_djembe_lbl (1,1)
	declare ui_label $djembe_1_lbl (1,1)
	declare ui_label $djembe_2_lbl (1,1)
	declare ui_label $kenkeni_lbl (1,1)
	declare ui_label $sangba_lbl (1,1)
	declare ui_label $dununba_lbl (1,1)
	
	set_text($solo_djembe_btn,"")
	set_text($djembe_1_btn,"")
	set_text($djembe_2_btn,"")
	set_text($kenkeni_btn,"")
	set_text($sangba_btn,"")
	set_text($dununba_btn,"")
	
	{-- NEW TEMPO EDIT --}
	
	declare %tempo_check[2]
	
	declare $tempo_vedit := 12000
	make_persistent ($tempo_vedit)
	
	declare ui_button $tempo_up
	declare ui_button $tempo_down
	declare ui_slider $tempo_drag_course (10,400)
	declare ui_slider $tempo_drag_fine (0,99)
	
	declare ui_label $tempo_unit1 (1,1)
	declare ui_label $tempo_unit2 (1,1)
	declare ui_label $tempo_unit3 (1,1)
	declare ui_label $tempo_unit4 (1,1)
	declare ui_label $tempo_unit5 (1,1)
	
	declare %tempo_control_ids[9]
	%tempo_control_ids[0] := get_ui_id($tempo_up)
	%tempo_control_ids[1] := get_ui_id($tempo_down)
	%tempo_control_ids[2] := get_ui_id($tempo_drag_course)
	%tempo_control_ids[3] := get_ui_id($tempo_drag_fine)
	%tempo_control_ids[4] := get_ui_id($tempo_unit1)
	%tempo_control_ids[5] := get_ui_id($tempo_unit2)
	%tempo_control_ids[6] := get_ui_id($tempo_unit3)
	%tempo_control_ids[7] := get_ui_id($tempo_unit4)
	%tempo_control_ids[8] := get_ui_id($tempo_unit5)
	
	set_control_par_str(get_ui_id($tempo_up),$CONTROL_PAR_PICTURE,"dswa_arrow_up")
	set_control_par_str(get_ui_id($tempo_down),$CONTROL_PAR_PICTURE,"dswa_arrow_down")
	
	$gui_count := 0
	while($gui_count < 2)
		set_control_par_str(%tempo_control_ids[$gui_count],$CONTROL_PAR_TEXT,"")
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_HEIGHT,14)
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_WIDTH,14)
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_POS_Y,304 + ($gui_count*12))
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_POS_X,200)
		inc($gui_count)
	end while
	
	set_control_par_str(%tempo_control_ids[2],$CONTROL_PAR_PICTURE,"dswa_sl_overlay_3dig")
	set_control_par(%tempo_control_ids[2],$CONTROL_PAR_DEFAULT_VALUE,120)
	set_control_par_str(%tempo_control_ids[3],$CONTROL_PAR_PICTURE,"dswa_sl_overlay_2dig")
	
	$gui_count := 2
	while($gui_count < 4)
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_POS_X,122+(($gui_count-2)*48))
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_POS_Y,306)
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_MOUSE_BEHAVIOUR,-100)
		inc($gui_count)
	end while
	
	$gui_count := 4
	while($gui_count < 9)
		set_control_par_str(%tempo_control_ids[$gui_count],$CONTROL_PAR_PICTURE,"dswa_numbers")
		set_control_par_str(%tempo_control_ids[$gui_count],$CONTROL_PAR_TEXT,"")
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_POS_X,121 + (($gui_count-4)*14) + ((($gui_count-4)/3)*8))
		set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_POS_Y,307)
		inc($gui_count)
	end while
	
	declare ui_label $bpm_dot (1,1)
	set_text ($bpm_dot,"")
	set_control_par_str(get_ui_id($bpm_dot),$CONTROL_PAR_PICTURE,"dswa_bpm_dot")
	move_control_px($bpm_dot,166,321)
	
	declare ui_label $dimmed_arrows (1,1)
	set_text ($dimmed_arrows,"")
	set_control_par_str(get_ui_id($dimmed_arrows),$CONTROL_PAR_PICTURE,"dswa_arrows_dimmed")
	move_control_px($dimmed_arrows,203,307)
	
	declare ui_button $sync_btn
	$sync_btn := 1
	set_text ($sync_btn,"")
	set_control_par_str(get_ui_id($sync_btn),$CONTROL_PAR_PICTURE,"dswa_switch")
	set_control_par(get_ui_id($sync_btn),$CONTROL_PAR_HEIGHT,35)
	set_control_par(get_ui_id($sync_btn),$CONTROL_PAR_WIDTH,25)
	move_control_px($sync_btn,221,299)
	make_instr_persistent($sync_btn)
	
	declare $tempo_gui_helper1
	declare $tempo_gui_helper2
	
	{knobs}
	
	declare ui_slider $preset_knob (0,$PRESET_KEY_MAX-$PRESET_KEY_MIN)
	set_control_par_str(get_ui_id($preset_knob),$CONTROL_PAR_AUTOMATION_NAME,"Variation")
	move_control_px($preset_knob,265,292)
	set_control_par(get_ui_id($preset_knob),$CONTROL_PAR_MOUSE_BEHAVIOUR,-500)
	set_control_par_str(get_ui_id($preset_knob),$CONTROL_PAR_PICTURE,"dswa_poti_variation")
	make_instr_persistent($preset_knob)
	
	declare ui_slider $swing_sld (-100,100)
	$swing_sld := 50
	set_control_par(get_ui_id($swing_sld), $CONTROL_PAR_DEFAULT_VALUE,0)
	set_control_par_str(get_ui_id($swing_sld),$CONTROL_PAR_AUTOMATION_NAME,"Swing")
	make_persistent ($swing_sld)
	
	declare ui_slider $humanize_sld (0,100)
	$humanize_sld := 50
	set_control_par(get_ui_id($humanize_sld), $CONTROL_PAR_DEFAULT_VALUE,50)
	set_control_par_str(get_ui_id($humanize_sld),$CONTROL_PAR_AUTOMATION_NAME,"Feel")
	make_persistent ($humanize_sld)
	
	declare ui_slider $intensity_sld (1,127)
	$intensity_sld := 100
	set_control_par_str(get_ui_id($intensity_sld),$CONTROL_PAR_AUTOMATION_NAME,"Intensity")
	set_control_par(get_ui_id($intensity_sld), $CONTROL_PAR_DEFAULT_VALUE,100)
	make_persistent ($intensity_sld)
	
	declare ui_slider $reverb_sld (0,100)
	set_control_par(get_ui_id($reverb_sld), $CONTROL_PAR_DEFAULT_VALUE,50)
	set_control_par_str(get_ui_id($reverb_sld),$CONTROL_PAR_AUTOMATION_NAME,"Reverb")
	make_persistent ($reverb_sld)
	
	declare %main_knobs_id[5]
	%main_knobs_id[0] := get_ui_id($preset_knob)
	%main_knobs_id[1] := get_ui_id($swing_sld)
	%main_knobs_id[2] := get_ui_id($humanize_sld)
	%main_knobs_id[3] := get_ui_id($intensity_sld)
	%main_knobs_id[4] := get_ui_id($reverb_sld)
	
	set_control_help($preset_knob,"Variation: ")
	set_control_help($swing_sld,"Swing: ")
	set_control_help($humanize_sld,"Feel: ")
	set_control_help($intensity_sld,"Intensity: ")
	set_control_help($reverb_sld,"Reverb: ")
	
	$gui_count := 1
	while($gui_count < 5)
		set_control_par_str(%main_knobs_id[$gui_count],$CONTROL_PAR_PICTURE,"dswa_poti_normal")
		set_control_par(%main_knobs_id[$gui_count],$CONTROL_PAR_MOUSE_BEHAVIOUR,-500)
		set_control_par(%main_knobs_id[$gui_count],$CONTROL_PAR_POS_Y,293)
		inc($gui_count)
	end while
	
	declare %knob_grid_adjust[4] := (0,0,1,1)
	
	$gui_count := 1
	while($gui_count < 5)
		set_control_par(%main_knobs_id[$gui_count],$CONTROL_PAR_POS_X,383 + (($gui_count-1)*61) + %knob_grid_adjust[$gui_count-1])
		inc($gui_count)
	end while
	
	declare ui_button $trigger_btn
	$trigger_btn := 0
	make_instr_persistent($trigger_btn)
	read_persistent_var($trigger_btn)
	set_control_par_str(get_ui_id($trigger_btn),$CONTROL_PAR_PICTURE,"dswa_switch")
	set_control_par(get_ui_id($trigger_btn),$CONTROL_PAR_HEIGHT,35)
	set_control_par(get_ui_id($trigger_btn),$CONTROL_PAR_WIDTH,25)
	set_text($trigger_btn,"")
	move_control_px($trigger_btn,13,299)
	
	declare ui_label $keyboard (1,1)
	set_control_par_str(get_ui_id($keyboard),$CONTROL_PAR_PICTURE,"dswa_piano")
	set_control_par_str(get_ui_id($keyboard),$CONTROL_PAR_TEXT,"")
	set_control_par(get_ui_id($keyboard),$CONTROL_PAR_PICTURE_STATE,0)
	move_control_px($keyboard,126,194)
	
	declare $trigger_notes
	$trigger_notes := ($trigger_btn + 1) mod 2
	declare $trigger_host
	$trigger_host := $trigger_btn
	
{function } {}

{ function sequencer_page }
	
	{Edit Pattern Controls}
	
	declare ui_menu $edit_pattern_menu
	add_menu_item($edit_pattern_menu,"",0)
	add_menu_item($edit_pattern_menu,"Copy Pattern",1)
	add_menu_item($edit_pattern_menu,"Paste Pattern",2)
	add_menu_item($edit_pattern_menu,"Clear Pattern",3)
	
	declare ui_menu $edit_djembe_1_menu
	add_menu_item($edit_djembe_1_menu,"",0)
	add_menu_item($edit_djembe_1_menu,"Copy Pattern",1)
	add_menu_item($edit_djembe_1_menu,"Paste Pattern",2)
	add_menu_item($edit_djembe_1_menu,"Clear Pattern",3)
	add_menu_item($edit_djembe_1_menu,"Move Pattern Forward",4)
	add_menu_item($edit_djembe_1_menu,"Move Pattern Backward",5)
	
	declare ui_menu $edit_djembe_2_menu
	add_menu_item($edit_djembe_2_menu,"",0)
	add_menu_item($edit_djembe_2_menu,"Copy Pattern",1)
	add_menu_item($edit_djembe_2_menu,"Paste Pattern",2)
	add_menu_item($edit_djembe_2_menu,"Clear Pattern",3)
	add_menu_item($edit_djembe_2_menu,"Move Pattern Forward",4)
	add_menu_item($edit_djembe_2_menu,"Move Pattern Backward",5)
	
	declare ui_menu $edit_kenkeni_menu
	add_menu_item($edit_kenkeni_menu,"",0)
	add_menu_item($edit_kenkeni_menu,"Copy Pattern",1)
	add_menu_item($edit_kenkeni_menu,"Paste Pattern",2)
	add_menu_item($edit_kenkeni_menu,"Clear Pattern",3)
	add_menu_item($edit_kenkeni_menu,"Move Pattern Forward",4)
	add_menu_item($edit_kenkeni_menu,"Move Pattern Backward",5)
	
	declare ui_menu $edit_sangba_menu
	add_menu_item($edit_sangba_menu,"",0)
	add_menu_item($edit_sangba_menu,"Copy Pattern",1)
	add_menu_item($edit_sangba_menu,"Paste Pattern",2)
	add_menu_item($edit_sangba_menu,"Clear Pattern",3)
	add_menu_item($edit_sangba_menu,"Move Pattern Forward",4)
	add_menu_item($edit_sangba_menu,"Move Pattern Backward",5)
	
	declare ui_menu $edit_dununba_menu
	add_menu_item($edit_dununba_menu,"",0)
	add_menu_item($edit_dununba_menu,"Copy Pattern",1)
	add_menu_item($edit_dununba_menu,"Paste Pattern",2)
	add_menu_item($edit_dununba_menu,"Clear Pattern",3)
	add_menu_item($edit_dununba_menu,"Move Pattern Forward",4)
	add_menu_item($edit_dununba_menu,"Move Pattern Backward",5)
	
	declare ui_button $beat_grid_btn
	set_text($beat_grid_btn,"")
	make_persistent($beat_grid_btn)
	set_control_par_str(get_ui_id($beat_grid_btn),$CONTROL_PAR_PICTURE,"dswa_btn_12_16")
	set_control_par(get_ui_id($beat_grid_btn),$CONTROL_PAR_WIDTH,30)
	set_control_par(get_ui_id($beat_grid_btn),$CONTROL_PAR_HEIGHT,25)
	move_control_px ($beat_grid_btn,39,236)
	
	declare %edit_pattern_ids[7]
	%edit_pattern_ids[0] := get_ui_id($edit_pattern_menu)
	%edit_pattern_ids[1] := get_ui_id($edit_djembe_1_menu)
	%edit_pattern_ids[2] := get_ui_id($edit_djembe_2_menu)
	%edit_pattern_ids[3] := get_ui_id($edit_kenkeni_menu)
	%edit_pattern_ids[4] := get_ui_id($edit_sangba_menu)
	%edit_pattern_ids[5] := get_ui_id($edit_dununba_menu)
	%edit_pattern_ids[6] := get_ui_id($beat_grid_btn)
	
	move_control_px ($edit_pattern_menu,16,236)
	move_control_px ($edit_djembe_1_menu,16,$DEFAULT_POS_Y_TRACK_1-2)
	move_control_px ($edit_djembe_2_menu,16,$DEFAULT_POS_Y_TRACK_2-2)
	move_control_px ($edit_kenkeni_menu,16,$DEFAULT_POS_Y_TRACK_4-2)
	move_control_px ($edit_sangba_menu,16,$DEFAULT_POS_Y_TRACK_6-2)
	move_control_px ($edit_dununba_menu,16,$DEFAULT_POS_Y_TRACK_8-2)
	
	$count := 0
	while ($count < (num_elements(%edit_pattern_ids)-1))
		set_control_par(%edit_pattern_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par_str(%edit_pattern_ids[$count],$CONTROL_PAR_PICTURE,"dswa_arrow_seq")
		set_control_par(%edit_pattern_ids[$count],$CONTROL_PAR_TEXTPOS_Y,50)
		set_control_par(%edit_pattern_ids[$count],$CONTROL_PAR_POS_X,16)
		inc($count)
	end while
	
	
	{TRACK 0 (LAUFLICHT)}
	declare ui_label $note_bg (1,1)
	
	set_control_par_str(get_ui_id($note_bg),$CONTROL_PAR_PICTURE,"dswa_notes_12_16")
	set_control_par(get_ui_id($note_bg),$CONTROL_PAR_WIDTH,433)
	set_control_par(get_ui_id($note_bg),$CONTROL_PAR_HEIGHT,20)
	set_control_par_str(get_ui_id($note_bg),$CONTROL_PAR_TEXT,"")
	move_control_px($note_bg,168,25)
	
	
	declare ui_label $track_0_step0_label (1,1)
	declare ui_label $track_0_step1_label (1,1)
	declare ui_label $track_0_step2_label (1,1)
	declare ui_label $track_0_step3_label (1,1)
	declare ui_label $track_0_step4_label (1,1)
	declare ui_label $track_0_step5_label (1,1)
	declare ui_label $track_0_step6_label (1,1)
	declare ui_label $track_0_step7_label (1,1)
	declare ui_label $track_0_step8_label (1,1)
	declare ui_label $track_0_step9_label (1,1)
	declare ui_label $track_0_step10_label (1,1)
	declare ui_label $track_0_step11_label (1,1)
	declare ui_label $track_0_step12_label (1,1)
	declare ui_label $track_0_step13_label (1,1)
	declare ui_label $track_0_step14_label (1,1)
	declare ui_label $track_0_step15_label (1,1)
	
	declare %track_0_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_0_lbl_ids[0] :=  get_ui_id($track_0_step0_label)
	%track_0_lbl_ids[1] :=  get_ui_id($track_0_step1_label)
	%track_0_lbl_ids[2] :=  get_ui_id($track_0_step2_label)
	%track_0_lbl_ids[3] :=  get_ui_id($track_0_step3_label)
	%track_0_lbl_ids[4] :=  get_ui_id($track_0_step4_label)
	%track_0_lbl_ids[5] :=  get_ui_id($track_0_step5_label)
	%track_0_lbl_ids[6] :=  get_ui_id($track_0_step6_label)
	%track_0_lbl_ids[7] :=  get_ui_id($track_0_step7_label)
	%track_0_lbl_ids[8] :=  get_ui_id($track_0_step8_label)
	%track_0_lbl_ids[9] :=  get_ui_id($track_0_step9_label)
	%track_0_lbl_ids[10] := get_ui_id($track_0_step10_label)
	%track_0_lbl_ids[11] := get_ui_id($track_0_step11_label)
	%track_0_lbl_ids[12] := get_ui_id($track_0_step12_label)
	%track_0_lbl_ids[13] := get_ui_id($track_0_step13_label)
	%track_0_lbl_ids[14] := get_ui_id($track_0_step14_label)
	%track_0_lbl_ids[15] := get_ui_id($track_0_step15_label)
	
	declare %light_offset[28] := (...
	{12}	-2,-2,-3,	-2,-2,-3,	-3,-3,-4,	-3,-3,-4,	...
	{16}	-2,-2,-2,-3,	-2,-2,-2,-3,	-2,-2,-2,-3,	-2,-2,-2,-3)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_0_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_lauflicht_cell")
			{Width and Height}
			set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_0_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_0)
			set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		
		inc($count)
	end while
	{END TRACK 0 (LAUFLICHT)}
	
	{TRACK 1}
	declare ui_switch $track_1_step0_btn
	declare ui_switch $track_1_step1_btn
	declare ui_switch $track_1_step2_btn
	declare ui_switch $track_1_step3_btn
	declare ui_switch $track_1_step4_btn
	declare ui_switch $track_1_step5_btn
	declare ui_switch $track_1_step6_btn
	declare ui_switch $track_1_step7_btn
	declare ui_switch $track_1_step8_btn
	declare ui_switch $track_1_step9_btn
	declare ui_switch $track_1_step10_btn
	declare ui_switch $track_1_step11_btn
	declare ui_switch $track_1_step12_btn
	declare ui_switch $track_1_step13_btn
	declare ui_switch $track_1_step14_btn
	declare ui_switch $track_1_step15_btn
	
	declare ui_label $track_1_step0_label (1,1)
	declare ui_label $track_1_step1_label (1,1)
	declare ui_label $track_1_step2_label (1,1)
	declare ui_label $track_1_step3_label (1,1)
	declare ui_label $track_1_step4_label (1,1)
	declare ui_label $track_1_step5_label (1,1)
	declare ui_label $track_1_step6_label (1,1)
	declare ui_label $track_1_step7_label (1,1)
	declare ui_label $track_1_step8_label (1,1)
	declare ui_label $track_1_step9_label (1,1)
	declare ui_label $track_1_step10_label (1,1)
	declare ui_label $track_1_step11_label (1,1)
	declare ui_label $track_1_step12_label (1,1)
	declare ui_label $track_1_step13_label (1,1)
	declare ui_label $track_1_step14_label (1,1)
	declare ui_label $track_1_step15_label (1,1)
	
	declare %track_1_btn_ids[$MAX_NUM_OF_STEPS]
	%track_1_btn_ids[0] :=  get_ui_id($track_1_step0_btn)
	%track_1_btn_ids[1] :=  get_ui_id($track_1_step1_btn)
	%track_1_btn_ids[2] :=  get_ui_id($track_1_step2_btn)
	%track_1_btn_ids[3] :=  get_ui_id($track_1_step3_btn)
	%track_1_btn_ids[4] :=  get_ui_id($track_1_step4_btn)
	%track_1_btn_ids[5] :=  get_ui_id($track_1_step5_btn)
	%track_1_btn_ids[6] :=  get_ui_id($track_1_step6_btn)
	%track_1_btn_ids[7] :=  get_ui_id($track_1_step7_btn)
	%track_1_btn_ids[8] :=  get_ui_id($track_1_step8_btn)
	%track_1_btn_ids[9] :=  get_ui_id($track_1_step9_btn)
	%track_1_btn_ids[10] := get_ui_id($track_1_step10_btn)
	%track_1_btn_ids[11] := get_ui_id($track_1_step11_btn)
	%track_1_btn_ids[12] := get_ui_id($track_1_step12_btn)
	%track_1_btn_ids[13] := get_ui_id($track_1_step13_btn)
	%track_1_btn_ids[14] := get_ui_id($track_1_step14_btn)
	%track_1_btn_ids[15] := get_ui_id($track_1_step15_btn)
	
	declare %track_1_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_1_lbl_ids[0] :=  get_ui_id($track_1_step0_label)
	%track_1_lbl_ids[1] :=  get_ui_id($track_1_step1_label)
	%track_1_lbl_ids[2] :=  get_ui_id($track_1_step2_label)
	%track_1_lbl_ids[3] :=  get_ui_id($track_1_step3_label)
	%track_1_lbl_ids[4] :=  get_ui_id($track_1_step4_label)
	%track_1_lbl_ids[5] :=  get_ui_id($track_1_step5_label)
	%track_1_lbl_ids[6] :=  get_ui_id($track_1_step6_label)
	%track_1_lbl_ids[7] :=  get_ui_id($track_1_step7_label)
	%track_1_lbl_ids[8] :=  get_ui_id($track_1_step8_label)
	%track_1_lbl_ids[9] :=  get_ui_id($track_1_step9_label)
	%track_1_lbl_ids[10] := get_ui_id($track_1_step10_label)
	%track_1_lbl_ids[11] := get_ui_id($track_1_step11_label)
	%track_1_lbl_ids[12] := get_ui_id($track_1_step12_label)
	%track_1_lbl_ids[13] := get_ui_id($track_1_step13_label)
	%track_1_lbl_ids[14] := get_ui_id($track_1_step14_label)
	%track_1_lbl_ids[15] := get_ui_id($track_1_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_1_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_1_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_1_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_1)
			set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_1_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_1)
			set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 1}
	
	
	{TRACK 2}
	declare ui_switch $track_2_step0_btn
	declare ui_switch $track_2_step1_btn
	declare ui_switch $track_2_step2_btn
	declare ui_switch $track_2_step3_btn
	declare ui_switch $track_2_step4_btn
	declare ui_switch $track_2_step5_btn
	declare ui_switch $track_2_step6_btn
	declare ui_switch $track_2_step7_btn
	declare ui_switch $track_2_step8_btn
	declare ui_switch $track_2_step9_btn
	declare ui_switch $track_2_step10_btn
	declare ui_switch $track_2_step11_btn
	declare ui_switch $track_2_step12_btn
	declare ui_switch $track_2_step13_btn
	declare ui_switch $track_2_step14_btn
	declare ui_switch $track_2_step15_btn
	
	declare ui_label $track_2_step0_label (1,1)
	declare ui_label $track_2_step1_label (1,1)
	declare ui_label $track_2_step2_label (1,1)
	declare ui_label $track_2_step3_label (1,1)
	declare ui_label $track_2_step4_label (1,1)
	declare ui_label $track_2_step5_label (1,1)
	declare ui_label $track_2_step6_label (1,1)
	declare ui_label $track_2_step7_label (1,1)
	declare ui_label $track_2_step8_label (1,1)
	declare ui_label $track_2_step9_label (1,1)
	declare ui_label $track_2_step10_label (1,1)
	declare ui_label $track_2_step11_label (1,1)
	declare ui_label $track_2_step12_label (1,1)
	declare ui_label $track_2_step13_label (1,1)
	declare ui_label $track_2_step14_label (1,1)
	declare ui_label $track_2_step15_label (1,1)
	
	declare %track_2_btn_ids[$MAX_NUM_OF_STEPS]
	%track_2_btn_ids[0] :=  get_ui_id($track_2_step0_btn)
	%track_2_btn_ids[1] :=  get_ui_id($track_2_step1_btn)
	%track_2_btn_ids[2] :=  get_ui_id($track_2_step2_btn)
	%track_2_btn_ids[3] :=  get_ui_id($track_2_step3_btn)
	%track_2_btn_ids[4] :=  get_ui_id($track_2_step4_btn)
	%track_2_btn_ids[5] :=  get_ui_id($track_2_step5_btn)
	%track_2_btn_ids[6] :=  get_ui_id($track_2_step6_btn)
	%track_2_btn_ids[7] :=  get_ui_id($track_2_step7_btn)
	%track_2_btn_ids[8] :=  get_ui_id($track_2_step8_btn)
	%track_2_btn_ids[9] :=  get_ui_id($track_2_step9_btn)
	%track_2_btn_ids[10] := get_ui_id($track_2_step10_btn)
	%track_2_btn_ids[11] := get_ui_id($track_2_step11_btn)
	%track_2_btn_ids[12] := get_ui_id($track_2_step12_btn)
	%track_2_btn_ids[13] := get_ui_id($track_2_step13_btn)
	%track_2_btn_ids[14] := get_ui_id($track_2_step14_btn)
	%track_2_btn_ids[15] := get_ui_id($track_2_step15_btn)
	
	declare %track_2_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_2_lbl_ids[0] :=  get_ui_id($track_2_step0_label)
	%track_2_lbl_ids[1] :=  get_ui_id($track_2_step1_label)
	%track_2_lbl_ids[2] :=  get_ui_id($track_2_step2_label)
	%track_2_lbl_ids[3] :=  get_ui_id($track_2_step3_label)
	%track_2_lbl_ids[4] :=  get_ui_id($track_2_step4_label)
	%track_2_lbl_ids[5] :=  get_ui_id($track_2_step5_label)
	%track_2_lbl_ids[6] :=  get_ui_id($track_2_step6_label)
	%track_2_lbl_ids[7] :=  get_ui_id($track_2_step7_label)
	%track_2_lbl_ids[8] :=  get_ui_id($track_2_step8_label)
	%track_2_lbl_ids[9] :=  get_ui_id($track_2_step9_label)
	%track_2_lbl_ids[10] := get_ui_id($track_2_step10_label)
	%track_2_lbl_ids[11] := get_ui_id($track_2_step11_label)
	%track_2_lbl_ids[12] := get_ui_id($track_2_step12_label)
	%track_2_lbl_ids[13] := get_ui_id($track_2_step13_label)
	%track_2_lbl_ids[14] := get_ui_id($track_2_step14_label)
	%track_2_lbl_ids[15] := get_ui_id($track_2_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_2_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_2_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_2_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_2)
			set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_2_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_2)
			set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 2}
	
	{TRACK 3}
	declare ui_switch $track_3_step0_btn
	declare ui_switch $track_3_step1_btn
	declare ui_switch $track_3_step2_btn
	declare ui_switch $track_3_step3_btn
	declare ui_switch $track_3_step4_btn
	declare ui_switch $track_3_step5_btn
	declare ui_switch $track_3_step6_btn
	declare ui_switch $track_3_step7_btn
	declare ui_switch $track_3_step8_btn
	declare ui_switch $track_3_step9_btn
	declare ui_switch $track_3_step10_btn
	declare ui_switch $track_3_step11_btn
	declare ui_switch $track_3_step12_btn
	declare ui_switch $track_3_step13_btn
	declare ui_switch $track_3_step14_btn
	declare ui_switch $track_3_step15_btn
	
	declare ui_label $track_3_step0_label (1,1)
	declare ui_label $track_3_step1_label (1,1)
	declare ui_label $track_3_step2_label (1,1)
	declare ui_label $track_3_step3_label (1,1)
	declare ui_label $track_3_step4_label (1,1)
	declare ui_label $track_3_step5_label (1,1)
	declare ui_label $track_3_step6_label (1,1)
	declare ui_label $track_3_step7_label (1,1)
	declare ui_label $track_3_step8_label (1,1)
	declare ui_label $track_3_step9_label (1,1)
	declare ui_label $track_3_step10_label (1,1)
	declare ui_label $track_3_step11_label (1,1)
	declare ui_label $track_3_step12_label (1,1)
	declare ui_label $track_3_step13_label (1,1)
	declare ui_label $track_3_step14_label (1,1)
	declare ui_label $track_3_step15_label (1,1)
	
	declare %track_3_btn_ids[$MAX_NUM_OF_STEPS]
	%track_3_btn_ids[0] :=  get_ui_id($track_3_step0_btn)
	%track_3_btn_ids[1] :=  get_ui_id($track_3_step1_btn)
	%track_3_btn_ids[2] :=  get_ui_id($track_3_step2_btn)
	%track_3_btn_ids[3] :=  get_ui_id($track_3_step3_btn)
	%track_3_btn_ids[4] :=  get_ui_id($track_3_step4_btn)
	%track_3_btn_ids[5] :=  get_ui_id($track_3_step5_btn)
	%track_3_btn_ids[6] :=  get_ui_id($track_3_step6_btn)
	%track_3_btn_ids[7] :=  get_ui_id($track_3_step7_btn)
	%track_3_btn_ids[8] :=  get_ui_id($track_3_step8_btn)
	%track_3_btn_ids[9] :=  get_ui_id($track_3_step9_btn)
	%track_3_btn_ids[10] := get_ui_id($track_3_step10_btn)
	%track_3_btn_ids[11] := get_ui_id($track_3_step11_btn)
	%track_3_btn_ids[12] := get_ui_id($track_3_step12_btn)
	%track_3_btn_ids[13] := get_ui_id($track_3_step13_btn)
	%track_3_btn_ids[14] := get_ui_id($track_3_step14_btn)
	%track_3_btn_ids[15] := get_ui_id($track_3_step15_btn)
	
	declare %track_3_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_3_lbl_ids[0] :=  get_ui_id($track_3_step0_label)
	%track_3_lbl_ids[1] :=  get_ui_id($track_3_step1_label)
	%track_3_lbl_ids[2] :=  get_ui_id($track_3_step2_label)
	%track_3_lbl_ids[3] :=  get_ui_id($track_3_step3_label)
	%track_3_lbl_ids[4] :=  get_ui_id($track_3_step4_label)
	%track_3_lbl_ids[5] :=  get_ui_id($track_3_step5_label)
	%track_3_lbl_ids[6] :=  get_ui_id($track_3_step6_label)
	%track_3_lbl_ids[7] :=  get_ui_id($track_3_step7_label)
	%track_3_lbl_ids[8] :=  get_ui_id($track_3_step8_label)
	%track_3_lbl_ids[9] :=  get_ui_id($track_3_step9_label)
	%track_3_lbl_ids[10] := get_ui_id($track_3_step10_label)
	%track_3_lbl_ids[11] := get_ui_id($track_3_step11_label)
	%track_3_lbl_ids[12] := get_ui_id($track_3_step12_label)
	%track_3_lbl_ids[13] := get_ui_id($track_3_step13_label)
	%track_3_lbl_ids[14] := get_ui_id($track_3_step14_label)
	%track_3_lbl_ids[15] := get_ui_id($track_3_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_3_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_3_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_3)
			set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_3_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_3)
			set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 3}
	
	{TRACK 4}
	declare ui_switch $track_4_step0_btn
	declare ui_switch $track_4_step1_btn
	declare ui_switch $track_4_step2_btn
	declare ui_switch $track_4_step3_btn
	declare ui_switch $track_4_step4_btn
	declare ui_switch $track_4_step5_btn
	declare ui_switch $track_4_step6_btn
	declare ui_switch $track_4_step7_btn
	declare ui_switch $track_4_step8_btn
	declare ui_switch $track_4_step9_btn
	declare ui_switch $track_4_step10_btn
	declare ui_switch $track_4_step11_btn
	declare ui_switch $track_4_step12_btn
	declare ui_switch $track_4_step13_btn
	declare ui_switch $track_4_step14_btn
	declare ui_switch $track_4_step15_btn
	
	declare ui_label $track_4_step0_label (1,1)
	declare ui_label $track_4_step1_label (1,1)
	declare ui_label $track_4_step2_label (1,1)
	declare ui_label $track_4_step3_label (1,1)
	declare ui_label $track_4_step4_label (1,1)
	declare ui_label $track_4_step5_label (1,1)
	declare ui_label $track_4_step6_label (1,1)
	declare ui_label $track_4_step7_label (1,1)
	declare ui_label $track_4_step8_label (1,1)
	declare ui_label $track_4_step9_label (1,1)
	declare ui_label $track_4_step10_label (1,1)
	declare ui_label $track_4_step11_label (1,1)
	declare ui_label $track_4_step12_label (1,1)
	declare ui_label $track_4_step13_label (1,1)
	declare ui_label $track_4_step14_label (1,1)
	declare ui_label $track_4_step15_label (1,1)
	
	declare %track_4_btn_ids[$MAX_NUM_OF_STEPS]
	%track_4_btn_ids[0] :=  get_ui_id($track_4_step0_btn)
	%track_4_btn_ids[1] :=  get_ui_id($track_4_step1_btn)
	%track_4_btn_ids[2] :=  get_ui_id($track_4_step2_btn)
	%track_4_btn_ids[3] :=  get_ui_id($track_4_step3_btn)
	%track_4_btn_ids[4] :=  get_ui_id($track_4_step4_btn)
	%track_4_btn_ids[5] :=  get_ui_id($track_4_step5_btn)
	%track_4_btn_ids[6] :=  get_ui_id($track_4_step6_btn)
	%track_4_btn_ids[7] :=  get_ui_id($track_4_step7_btn)
	%track_4_btn_ids[8] :=  get_ui_id($track_4_step8_btn)
	%track_4_btn_ids[9] :=  get_ui_id($track_4_step9_btn)
	%track_4_btn_ids[10] := get_ui_id($track_4_step10_btn)
	%track_4_btn_ids[11] := get_ui_id($track_4_step11_btn)
	%track_4_btn_ids[12] := get_ui_id($track_4_step12_btn)
	%track_4_btn_ids[13] := get_ui_id($track_4_step13_btn)
	%track_4_btn_ids[14] := get_ui_id($track_4_step14_btn)
	%track_4_btn_ids[15] := get_ui_id($track_4_step15_btn)
	
	declare %track_4_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_4_lbl_ids[0] :=  get_ui_id($track_4_step0_label)
	%track_4_lbl_ids[1] :=  get_ui_id($track_4_step1_label)
	%track_4_lbl_ids[2] :=  get_ui_id($track_4_step2_label)
	%track_4_lbl_ids[3] :=  get_ui_id($track_4_step3_label)
	%track_4_lbl_ids[4] :=  get_ui_id($track_4_step4_label)
	%track_4_lbl_ids[5] :=  get_ui_id($track_4_step5_label)
	%track_4_lbl_ids[6] :=  get_ui_id($track_4_step6_label)
	%track_4_lbl_ids[7] :=  get_ui_id($track_4_step7_label)
	%track_4_lbl_ids[8] :=  get_ui_id($track_4_step8_label)
	%track_4_lbl_ids[9] :=  get_ui_id($track_4_step9_label)
	%track_4_lbl_ids[10] := get_ui_id($track_4_step10_label)
	%track_4_lbl_ids[11] := get_ui_id($track_4_step11_label)
	%track_4_lbl_ids[12] := get_ui_id($track_4_step12_label)
	%track_4_lbl_ids[13] := get_ui_id($track_4_step13_label)
	%track_4_lbl_ids[14] := get_ui_id($track_4_step14_label)
	%track_4_lbl_ids[15] := get_ui_id($track_4_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_4_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_4_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_4)
			set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_4_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_4)
			set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 4}
	
	{TRACK 5}
	declare ui_switch $track_5_step0_btn
	declare ui_switch $track_5_step1_btn
	declare ui_switch $track_5_step2_btn
	declare ui_switch $track_5_step3_btn
	declare ui_switch $track_5_step4_btn
	declare ui_switch $track_5_step5_btn
	declare ui_switch $track_5_step6_btn
	declare ui_switch $track_5_step7_btn
	declare ui_switch $track_5_step8_btn
	declare ui_switch $track_5_step9_btn
	declare ui_switch $track_5_step10_btn
	declare ui_switch $track_5_step11_btn
	declare ui_switch $track_5_step12_btn
	declare ui_switch $track_5_step13_btn
	declare ui_switch $track_5_step14_btn
	declare ui_switch $track_5_step15_btn
	
	declare ui_label $track_5_step0_label (1,1)
	declare ui_label $track_5_step1_label (1,1)
	declare ui_label $track_5_step2_label (1,1)
	declare ui_label $track_5_step3_label (1,1)
	declare ui_label $track_5_step4_label (1,1)
	declare ui_label $track_5_step5_label (1,1)
	declare ui_label $track_5_step6_label (1,1)
	declare ui_label $track_5_step7_label (1,1)
	declare ui_label $track_5_step8_label (1,1)
	declare ui_label $track_5_step9_label (1,1)
	declare ui_label $track_5_step10_label (1,1)
	declare ui_label $track_5_step11_label (1,1)
	declare ui_label $track_5_step12_label (1,1)
	declare ui_label $track_5_step13_label (1,1)
	declare ui_label $track_5_step14_label (1,1)
	declare ui_label $track_5_step15_label (1,1)
	
	declare %track_5_btn_ids[$MAX_NUM_OF_STEPS]
	%track_5_btn_ids[0] :=  get_ui_id($track_5_step0_btn)
	%track_5_btn_ids[1] :=  get_ui_id($track_5_step1_btn)
	%track_5_btn_ids[2] :=  get_ui_id($track_5_step2_btn)
	%track_5_btn_ids[3] :=  get_ui_id($track_5_step3_btn)
	%track_5_btn_ids[4] :=  get_ui_id($track_5_step4_btn)
	%track_5_btn_ids[5] :=  get_ui_id($track_5_step5_btn)
	%track_5_btn_ids[6] :=  get_ui_id($track_5_step6_btn)
	%track_5_btn_ids[7] :=  get_ui_id($track_5_step7_btn)
	%track_5_btn_ids[8] :=  get_ui_id($track_5_step8_btn)
	%track_5_btn_ids[9] :=  get_ui_id($track_5_step9_btn)
	%track_5_btn_ids[10] := get_ui_id($track_5_step10_btn)
	%track_5_btn_ids[11] := get_ui_id($track_5_step11_btn)
	%track_5_btn_ids[12] := get_ui_id($track_5_step12_btn)
	%track_5_btn_ids[13] := get_ui_id($track_5_step13_btn)
	%track_5_btn_ids[14] := get_ui_id($track_5_step14_btn)
	%track_5_btn_ids[15] := get_ui_id($track_5_step15_btn)
	
	declare %track_5_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_5_lbl_ids[0] :=  get_ui_id($track_5_step0_label)
	%track_5_lbl_ids[1] :=  get_ui_id($track_5_step1_label)
	%track_5_lbl_ids[2] :=  get_ui_id($track_5_step2_label)
	%track_5_lbl_ids[3] :=  get_ui_id($track_5_step3_label)
	%track_5_lbl_ids[4] :=  get_ui_id($track_5_step4_label)
	%track_5_lbl_ids[5] :=  get_ui_id($track_5_step5_label)
	%track_5_lbl_ids[6] :=  get_ui_id($track_5_step6_label)
	%track_5_lbl_ids[7] :=  get_ui_id($track_5_step7_label)
	%track_5_lbl_ids[8] :=  get_ui_id($track_5_step8_label)
	%track_5_lbl_ids[9] :=  get_ui_id($track_5_step9_label)
	%track_5_lbl_ids[10] := get_ui_id($track_5_step10_label)
	%track_5_lbl_ids[11] := get_ui_id($track_5_step11_label)
	%track_5_lbl_ids[12] := get_ui_id($track_5_step12_label)
	%track_5_lbl_ids[13] := get_ui_id($track_5_step13_label)
	%track_5_lbl_ids[14] := get_ui_id($track_5_step14_label)
	%track_5_lbl_ids[15] := get_ui_id($track_5_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_5_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_5_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_5_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_5)
			set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_5_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_5)
			set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 5}
	
	{TRACK 6}
	declare ui_switch $track_6_step0_btn
	declare ui_switch $track_6_step1_btn
	declare ui_switch $track_6_step2_btn
	declare ui_switch $track_6_step3_btn
	declare ui_switch $track_6_step4_btn
	declare ui_switch $track_6_step5_btn
	declare ui_switch $track_6_step6_btn
	declare ui_switch $track_6_step7_btn
	declare ui_switch $track_6_step8_btn
	declare ui_switch $track_6_step9_btn
	declare ui_switch $track_6_step10_btn
	declare ui_switch $track_6_step11_btn
	declare ui_switch $track_6_step12_btn
	declare ui_switch $track_6_step13_btn
	declare ui_switch $track_6_step14_btn
	declare ui_switch $track_6_step15_btn
	
	declare ui_label $track_6_step0_label (1,1)
	declare ui_label $track_6_step1_label (1,1)
	declare ui_label $track_6_step2_label (1,1)
	declare ui_label $track_6_step3_label (1,1)
	declare ui_label $track_6_step4_label (1,1)
	declare ui_label $track_6_step5_label (1,1)
	declare ui_label $track_6_step6_label (1,1)
	declare ui_label $track_6_step7_label (1,1)
	declare ui_label $track_6_step8_label (1,1)
	declare ui_label $track_6_step9_label (1,1)
	declare ui_label $track_6_step10_label (1,1)
	declare ui_label $track_6_step11_label (1,1)
	declare ui_label $track_6_step12_label (1,1)
	declare ui_label $track_6_step13_label (1,1)
	declare ui_label $track_6_step14_label (1,1)
	declare ui_label $track_6_step15_label (1,1)
	
	declare %track_6_btn_ids[$MAX_NUM_OF_STEPS]
	%track_6_btn_ids[0] :=  get_ui_id($track_6_step0_btn)
	%track_6_btn_ids[1] :=  get_ui_id($track_6_step1_btn)
	%track_6_btn_ids[2] :=  get_ui_id($track_6_step2_btn)
	%track_6_btn_ids[3] :=  get_ui_id($track_6_step3_btn)
	%track_6_btn_ids[4] :=  get_ui_id($track_6_step4_btn)
	%track_6_btn_ids[5] :=  get_ui_id($track_6_step5_btn)
	%track_6_btn_ids[6] :=  get_ui_id($track_6_step6_btn)
	%track_6_btn_ids[7] :=  get_ui_id($track_6_step7_btn)
	%track_6_btn_ids[8] :=  get_ui_id($track_6_step8_btn)
	%track_6_btn_ids[9] :=  get_ui_id($track_6_step9_btn)
	%track_6_btn_ids[10] := get_ui_id($track_6_step10_btn)
	%track_6_btn_ids[11] := get_ui_id($track_6_step11_btn)
	%track_6_btn_ids[12] := get_ui_id($track_6_step12_btn)
	%track_6_btn_ids[13] := get_ui_id($track_6_step13_btn)
	%track_6_btn_ids[14] := get_ui_id($track_6_step14_btn)
	%track_6_btn_ids[15] := get_ui_id($track_6_step15_btn)
	
	declare %track_6_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_6_lbl_ids[0] :=  get_ui_id($track_6_step0_label)
	%track_6_lbl_ids[1] :=  get_ui_id($track_6_step1_label)
	%track_6_lbl_ids[2] :=  get_ui_id($track_6_step2_label)
	%track_6_lbl_ids[3] :=  get_ui_id($track_6_step3_label)
	%track_6_lbl_ids[4] :=  get_ui_id($track_6_step4_label)
	%track_6_lbl_ids[5] :=  get_ui_id($track_6_step5_label)
	%track_6_lbl_ids[6] :=  get_ui_id($track_6_step6_label)
	%track_6_lbl_ids[7] :=  get_ui_id($track_6_step7_label)
	%track_6_lbl_ids[8] :=  get_ui_id($track_6_step8_label)
	%track_6_lbl_ids[9] :=  get_ui_id($track_6_step9_label)
	%track_6_lbl_ids[10] := get_ui_id($track_6_step10_label)
	%track_6_lbl_ids[11] := get_ui_id($track_6_step11_label)
	%track_6_lbl_ids[12] := get_ui_id($track_6_step12_label)
	%track_6_lbl_ids[13] := get_ui_id($track_6_step13_label)
	%track_6_lbl_ids[14] := get_ui_id($track_6_step14_label)
	%track_6_lbl_ids[15] := get_ui_id($track_6_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_6_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_6_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_6_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_6)
			set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_6_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_6)
			set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 6}
	
	{TRACK 7}
	declare ui_switch $track_7_step0_btn
	declare ui_switch $track_7_step1_btn
	declare ui_switch $track_7_step2_btn
	declare ui_switch $track_7_step3_btn
	declare ui_switch $track_7_step4_btn
	declare ui_switch $track_7_step5_btn
	declare ui_switch $track_7_step6_btn
	declare ui_switch $track_7_step7_btn
	declare ui_switch $track_7_step8_btn
	declare ui_switch $track_7_step9_btn
	declare ui_switch $track_7_step10_btn
	declare ui_switch $track_7_step11_btn
	declare ui_switch $track_7_step12_btn
	declare ui_switch $track_7_step13_btn
	declare ui_switch $track_7_step14_btn
	declare ui_switch $track_7_step15_btn
	
	declare ui_label $track_7_step0_label (1,1)
	declare ui_label $track_7_step1_label (1,1)
	declare ui_label $track_7_step2_label (1,1)
	declare ui_label $track_7_step3_label (1,1)
	declare ui_label $track_7_step4_label (1,1)
	declare ui_label $track_7_step5_label (1,1)
	declare ui_label $track_7_step6_label (1,1)
	declare ui_label $track_7_step7_label (1,1)
	declare ui_label $track_7_step8_label (1,1)
	declare ui_label $track_7_step9_label (1,1)
	declare ui_label $track_7_step10_label (1,1)
	declare ui_label $track_7_step11_label (1,1)
	declare ui_label $track_7_step12_label (1,1)
	declare ui_label $track_7_step13_label (1,1)
	declare ui_label $track_7_step14_label (1,1)
	declare ui_label $track_7_step15_label (1,1)
	
	declare %track_7_btn_ids[$MAX_NUM_OF_STEPS]
	%track_7_btn_ids[0] :=  get_ui_id($track_7_step0_btn)
	%track_7_btn_ids[1] :=  get_ui_id($track_7_step1_btn)
	%track_7_btn_ids[2] :=  get_ui_id($track_7_step2_btn)
	%track_7_btn_ids[3] :=  get_ui_id($track_7_step3_btn)
	%track_7_btn_ids[4] :=  get_ui_id($track_7_step4_btn)
	%track_7_btn_ids[5] :=  get_ui_id($track_7_step5_btn)
	%track_7_btn_ids[6] :=  get_ui_id($track_7_step6_btn)
	%track_7_btn_ids[7] :=  get_ui_id($track_7_step7_btn)
	%track_7_btn_ids[8] :=  get_ui_id($track_7_step8_btn)
	%track_7_btn_ids[9] :=  get_ui_id($track_7_step9_btn)
	%track_7_btn_ids[10] := get_ui_id($track_7_step10_btn)
	%track_7_btn_ids[11] := get_ui_id($track_7_step11_btn)
	%track_7_btn_ids[12] := get_ui_id($track_7_step12_btn)
	%track_7_btn_ids[13] := get_ui_id($track_7_step13_btn)
	%track_7_btn_ids[14] := get_ui_id($track_7_step14_btn)
	%track_7_btn_ids[15] := get_ui_id($track_7_step15_btn)
	
	declare %track_7_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_7_lbl_ids[0] :=  get_ui_id($track_7_step0_label)
	%track_7_lbl_ids[1] :=  get_ui_id($track_7_step1_label)
	%track_7_lbl_ids[2] :=  get_ui_id($track_7_step2_label)
	%track_7_lbl_ids[3] :=  get_ui_id($track_7_step3_label)
	%track_7_lbl_ids[4] :=  get_ui_id($track_7_step4_label)
	%track_7_lbl_ids[5] :=  get_ui_id($track_7_step5_label)
	%track_7_lbl_ids[6] :=  get_ui_id($track_7_step6_label)
	%track_7_lbl_ids[7] :=  get_ui_id($track_7_step7_label)
	%track_7_lbl_ids[8] :=  get_ui_id($track_7_step8_label)
	%track_7_lbl_ids[9] :=  get_ui_id($track_7_step9_label)
	%track_7_lbl_ids[10] := get_ui_id($track_7_step10_label)
	%track_7_lbl_ids[11] := get_ui_id($track_7_step11_label)
	%track_7_lbl_ids[12] := get_ui_id($track_7_step12_label)
	%track_7_lbl_ids[13] := get_ui_id($track_7_step13_label)
	%track_7_lbl_ids[14] := get_ui_id($track_7_step14_label)
	%track_7_lbl_ids[15] := get_ui_id($track_7_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_7_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_7_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_7_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_7)
			set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_7_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_7)
			set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 7}
	
	{TRACK 8}
	declare ui_switch $track_8_step0_btn
	declare ui_switch $track_8_step1_btn
	declare ui_switch $track_8_step2_btn
	declare ui_switch $track_8_step3_btn
	declare ui_switch $track_8_step4_btn
	declare ui_switch $track_8_step5_btn
	declare ui_switch $track_8_step6_btn
	declare ui_switch $track_8_step7_btn
	declare ui_switch $track_8_step8_btn
	declare ui_switch $track_8_step9_btn
	declare ui_switch $track_8_step10_btn
	declare ui_switch $track_8_step11_btn
	declare ui_switch $track_8_step12_btn
	declare ui_switch $track_8_step13_btn
	declare ui_switch $track_8_step14_btn
	declare ui_switch $track_8_step15_btn
	
	declare ui_label $track_8_step0_label (1,1)
	declare ui_label $track_8_step1_label (1,1)
	declare ui_label $track_8_step2_label (1,1)
	declare ui_label $track_8_step3_label (1,1)
	declare ui_label $track_8_step4_label (1,1)
	declare ui_label $track_8_step5_label (1,1)
	declare ui_label $track_8_step6_label (1,1)
	declare ui_label $track_8_step7_label (1,1)
	declare ui_label $track_8_step8_label (1,1)
	declare ui_label $track_8_step9_label (1,1)
	declare ui_label $track_8_step10_label (1,1)
	declare ui_label $track_8_step11_label (1,1)
	declare ui_label $track_8_step12_label (1,1)
	declare ui_label $track_8_step13_label (1,1)
	declare ui_label $track_8_step14_label (1,1)
	declare ui_label $track_8_step15_label (1,1)
	
	declare %track_8_btn_ids[$MAX_NUM_OF_STEPS]
	%track_8_btn_ids[0] :=  get_ui_id($track_8_step0_btn)
	%track_8_btn_ids[1] :=  get_ui_id($track_8_step1_btn)
	%track_8_btn_ids[2] :=  get_ui_id($track_8_step2_btn)
	%track_8_btn_ids[3] :=  get_ui_id($track_8_step3_btn)
	%track_8_btn_ids[4] :=  get_ui_id($track_8_step4_btn)
	%track_8_btn_ids[5] :=  get_ui_id($track_8_step5_btn)
	%track_8_btn_ids[6] :=  get_ui_id($track_8_step6_btn)
	%track_8_btn_ids[7] :=  get_ui_id($track_8_step7_btn)
	%track_8_btn_ids[8] :=  get_ui_id($track_8_step8_btn)
	%track_8_btn_ids[9] :=  get_ui_id($track_8_step9_btn)
	%track_8_btn_ids[10] := get_ui_id($track_8_step10_btn)
	%track_8_btn_ids[11] := get_ui_id($track_8_step11_btn)
	%track_8_btn_ids[12] := get_ui_id($track_8_step12_btn)
	%track_8_btn_ids[13] := get_ui_id($track_8_step13_btn)
	%track_8_btn_ids[14] := get_ui_id($track_8_step14_btn)
	%track_8_btn_ids[15] := get_ui_id($track_8_step15_btn)
	
	declare %track_8_lbl_ids[$MAX_NUM_OF_STEPS]
	%track_8_lbl_ids[0] :=  get_ui_id($track_8_step0_label)
	%track_8_lbl_ids[1] :=  get_ui_id($track_8_step1_label)
	%track_8_lbl_ids[2] :=  get_ui_id($track_8_step2_label)
	%track_8_lbl_ids[3] :=  get_ui_id($track_8_step3_label)
	%track_8_lbl_ids[4] :=  get_ui_id($track_8_step4_label)
	%track_8_lbl_ids[5] :=  get_ui_id($track_8_step5_label)
	%track_8_lbl_ids[6] :=  get_ui_id($track_8_step6_label)
	%track_8_lbl_ids[7] :=  get_ui_id($track_8_step7_label)
	%track_8_lbl_ids[8] :=  get_ui_id($track_8_step8_label)
	%track_8_lbl_ids[9] :=  get_ui_id($track_8_step9_label)
	%track_8_lbl_ids[10] := get_ui_id($track_8_step10_label)
	%track_8_lbl_ids[11] := get_ui_id($track_8_step11_label)
	%track_8_lbl_ids[12] := get_ui_id($track_8_step12_label)
	%track_8_lbl_ids[13] := get_ui_id($track_8_step13_label)
	%track_8_lbl_ids[14] := get_ui_id($track_8_step14_label)
	%track_8_lbl_ids[15] := get_ui_id($track_8_step15_label)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		
			set_control_par_str(%track_8_btn_ids[$count],$CONTROL_PAR_PICTURE,"dswa_seq_btn_overlay")
			set_control_par_str(%track_8_lbl_ids[$count],$CONTROL_PAR_PICTURE,"dswa_iconseq")
			{Width and Height}
			set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_8_btn_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_8)
			set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			{Width and Height}
			set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_WIDTH,$DEFAULT_WIDTH)
			set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_HEIGHT,$DEFAULT_HEIGHT)
			set_control_par_str(%track_8_lbl_ids[$count],$CONTROL_PAR_TEXT,"")
			{Position}
			set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_POS_Y,$DEFAULT_POS_Y_TRACK_8)
			set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			
			{disable automation}
			set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_ALLOW_AUTOMATION,0)
		
		inc($count)
	end while
	{END TRACK 8}
	
	declare %track_0_table[$MAX_NUM_OF_STEPS]
	
	declare %track_1_table[$MAX_NUM_OF_STEPS]
	declare %track_2_table[$MAX_NUM_OF_STEPS]
	declare %track_3_table[$MAX_NUM_OF_STEPS]
	declare %track_4_table[$MAX_NUM_OF_STEPS]
	declare %track_5_table[$MAX_NUM_OF_STEPS]
	declare %track_6_table[$MAX_NUM_OF_STEPS]
	declare %track_7_table[$MAX_NUM_OF_STEPS]
	declare %track_8_table[$MAX_NUM_OF_STEPS]
	make_persistent(%track_1_table)
	make_persistent(%track_2_table)
	make_persistent(%track_3_table)
	make_persistent(%track_4_table)
	make_persistent(%track_5_table)
	make_persistent(%track_6_table)
	make_persistent(%track_7_table)
	make_persistent(%track_8_table)
	read_persistent_var(%track_1_table)
	read_persistent_var(%track_2_table)
	read_persistent_var(%track_3_table)
	read_persistent_var(%track_4_table)
	read_persistent_var(%track_5_table)
	read_persistent_var(%track_6_table)
	read_persistent_var(%track_7_table)
	read_persistent_var(%track_8_table)
	
	declare %seq_icon_trans[4] := (0,3,1,2)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_1_table[$count]])
		set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_2_table[$count]])
		set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$count])
		set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$count]])
		set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_5_table[$count])
		set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_6_table[$count]])
		set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_7_table[$count])
		set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_8_table[$count]])
		inc($count)
	end while
	
	{other variables}
	
	declare $clicked_cell_row 
	declare $clicked_cell_step
	declare $cell_number
	
	{END CELL MATRIX}
	
	{function }  {}
	
{ function instrument_controls }
	
	declare ui_label $inst_cont_bg (1,1)
	set_text($inst_cont_bg,"")
	set_control_par_str(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE,"dswa_advanced_panel")
	set_control_par(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE_STATE,5)
	move_control_px($inst_cont_bg,101,148)
	
	declare ui_label $inst_groove_bg (1,1)
	set_text($inst_groove_bg,"")
	
	declare ui_button $inst_prop_close
	set_text($inst_prop_close,"")
	set_control_par_str(get_ui_id($inst_prop_close),$CONTROL_PAR_PICTURE,"dswa_close_btn_overlay")
	set_control_par(get_ui_id($inst_prop_close),$CONTROL_PAR_HEIGHT,21)
	set_control_par(get_ui_id($inst_prop_close),$CONTROL_PAR_WIDTH,21)
	move_control_px($inst_prop_close,107,155)
	
	declare ui_button $sangba_overlay
	set_text($sangba_overlay,"")
	set_control_par_str(get_ui_id($sangba_overlay),$CONTROL_PAR_PICTURE,"dswa_sangba_overlay2")
	set_control_par(get_ui_id($sangba_overlay),$CONTROL_PAR_HEIGHT,43)
	set_control_par(get_ui_id($sangba_overlay),$CONTROL_PAR_WIDTH,96)
	move_control_px($sangba_overlay,133,147)
	set_control_par(get_ui_id($sangba_overlay),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
	
	declare ui_slider $beat_knob (-$MAX_SWING_AMOUNT,$MAX_SWING_AMOUNT)
	declare ui_slider $step1_delay_sld (-$MAX_SWING_AMOUNT,$MAX_SWING_AMOUNT)
	declare ui_slider $step2_delay_sld (-$MAX_SWING_AMOUNT,$MAX_SWING_AMOUNT)
	declare ui_slider $step3_delay_sld (-$MAX_SWING_AMOUNT,$MAX_SWING_AMOUNT)
	
	declare ui_menu $dununba_menu
	add_menu_item ($dununba_menu,"Dununba 1",0)
	add_menu_item ($dununba_menu,"Dununba 2",1)
	add_menu_item ($dununba_menu,"Dununba 3",2)
	add_menu_item ($dununba_menu,"Dununba 4",3)
	
	declare ui_menu $bell_low_menu
	add_menu_item ($bell_low_menu,"Bell 1",0)
	add_menu_item ($bell_low_menu,"Bell 2",1)
	add_menu_item ($bell_low_menu,"Bell 3",2)
	
	declare ui_menu $sangba_menu
	add_menu_item ($sangba_menu,"Sangba 1",0)
	add_menu_item ($sangba_menu,"Sangba 2",1)
	add_menu_item ($sangba_menu,"Sangba 3",2)
	add_menu_item ($sangba_menu,"Sangba 4",3)
	
	declare ui_menu $bell_mid_menu
	add_menu_item ($bell_mid_menu,"Bell 1",0)
	add_menu_item ($bell_mid_menu,"Bell 2",1)
	add_menu_item ($bell_mid_menu,"Bell 3",2)
	
	declare ui_menu $kenkeni_menu
	add_menu_item ($kenkeni_menu,"Kenkeni 1",0)
	add_menu_item ($kenkeni_menu,"Kenkeni 2",1)
	add_menu_item ($kenkeni_menu,"Kenkeni 3",2)
	add_menu_item ($kenkeni_menu,"Kenkeni 4",3)
	
	declare ui_menu $bell_high_menu
	add_menu_item ($bell_high_menu,"Bell 1",0)
	add_menu_item ($bell_high_menu,"Bell 2",1)
	add_menu_item ($bell_high_menu,"Bell 3",2)
	
	declare ui_menu $djembe_1_menu
	add_menu_item ($djembe_1_menu,"Djembe 1",0)
	add_menu_item ($djembe_1_menu,"Djembe 2",1)
	add_menu_item ($djembe_1_menu,"Djembe 3",2)
	add_menu_item ($djembe_1_menu,"Djembe 4",3)
	add_menu_item ($djembe_1_menu,"Djembe 5",4)
	add_menu_item ($djembe_1_menu,"Djembe 6",5)
	add_menu_item ($djembe_1_menu,"Djembe 7",6)
	
	declare $last_djembe_1_menu
	declare $last_djembe_2_menu
	declare $last_solo_djembe_menu
	make_persistent($last_djembe_1_menu)
	make_persistent($last_djembe_2_menu)
	make_persistent($last_solo_djembe_menu)
	
	declare ui_menu $djembe_2_menu
	add_menu_item ($djembe_2_menu,"Djembe 1",0)
	add_menu_item ($djembe_2_menu,"Djembe 2",1)
	add_menu_item ($djembe_2_menu,"Djembe 3",2)
	add_menu_item ($djembe_2_menu,"Djembe 4",3)
	add_menu_item ($djembe_2_menu,"Djembe 5",4)
	add_menu_item ($djembe_2_menu,"Djembe 6",5)
	add_menu_item ($djembe_2_menu,"Djembe 7",6)
	
	declare ui_menu $solo_djembe_menu
	add_menu_item ($solo_djembe_menu,"Djembe 1",0)
	add_menu_item ($solo_djembe_menu,"Djembe 2",1)
	add_menu_item ($solo_djembe_menu,"Djembe 3",2)
	add_menu_item ($solo_djembe_menu,"Djembe 4",3)
	add_menu_item ($solo_djembe_menu,"Djembe 5",4)
	add_menu_item ($solo_djembe_menu,"Djembe 6",5)
	add_menu_item ($solo_djembe_menu,"Djembe 7",6)
	
	declare ui_slider $tuning_sld (-100,100)
	declare ui_slider $inst_sld (0,100)
	
	declare %inst_properties_ids[18]
	%inst_properties_ids[0] := get_ui_id($beat_knob)
	%inst_properties_ids[1] := get_ui_id($step1_delay_sld)
	%inst_properties_ids[2] := get_ui_id($step2_delay_sld)
	%inst_properties_ids[3] := get_ui_id($step3_delay_sld)
	%inst_properties_ids[4] := get_ui_id($dununba_menu)
	%inst_properties_ids[5] := get_ui_id($bell_low_menu)
	%inst_properties_ids[6] := get_ui_id($sangba_menu)
	%inst_properties_ids[7] := get_ui_id($bell_mid_menu)
	%inst_properties_ids[8] := get_ui_id($kenkeni_menu)
	%inst_properties_ids[9] := get_ui_id($bell_high_menu)
	%inst_properties_ids[10] := get_ui_id($djembe_1_menu)
	%inst_properties_ids[11] := get_ui_id($djembe_2_menu)
	%inst_properties_ids[12] := get_ui_id($solo_djembe_menu)
	%inst_properties_ids[13] := get_ui_id($tuning_sld)
	%inst_properties_ids[14] := get_ui_id($inst_sld)
	%inst_properties_ids[15] := get_ui_id($inst_cont_bg)
	%inst_properties_ids[16] := get_ui_id($inst_prop_close)
	%inst_properties_ids[17] := get_ui_id($inst_groove_bg)
	
	make_persistent($beat_knob)
	make_persistent($step1_delay_sld)
	make_persistent($step2_delay_sld)
	make_persistent($step3_delay_sld)
	make_persistent($tuning_sld)
	make_persistent($inst_sld)
	
	make_persistent($dununba_menu)
	make_persistent($bell_low_menu)
	make_persistent($kenkeni_menu)
	make_persistent($bell_mid_menu)
	make_persistent($sangba_menu)
	make_persistent($bell_high_menu)
	make_persistent($djembe_1_menu)
	make_persistent($djembe_2_menu)
	make_persistent($solo_djembe_menu)
	
{drum skinning}
	
	declare %selection_id[6]
	%selection_id[0] := get_ui_id($solo_djembe_btn)
	%selection_id[1] := get_ui_id($djembe_1_btn)
	%selection_id[2] := get_ui_id($djembe_2_btn)
	%selection_id[3] := get_ui_id($kenkeni_btn)
	%selection_id[4] := get_ui_id($sangba_btn)
	%selection_id[5] := get_ui_id($dununba_btn)
	
	declare %drum_picture_id[6]
	%drum_picture_id[0] := get_ui_id($solo_djembe_lbl)
	%drum_picture_id[1] := get_ui_id($djembe_1_lbl)
	%drum_picture_id[2] := get_ui_id($djembe_2_lbl)
	%drum_picture_id[3] := get_ui_id($kenkeni_lbl)
	%drum_picture_id[4] := get_ui_id($sangba_lbl)
	%drum_picture_id[5] := get_ui_id($dununba_lbl)
	
	set_control_par_str(get_ui_id($solo_djembe_lbl),$CONTROL_PAR_PICTURE,"dswa_ens_anim_djembe3")
	set_control_par_str(get_ui_id($djembe_1_lbl),$CONTROL_PAR_PICTURE,"dswa_ens_anim_djembe2")
	set_control_par_str(get_ui_id($djembe_2_lbl),$CONTROL_PAR_PICTURE,"dswa_ens_anim_djembe1")
	set_control_par_str(get_ui_id($kenkeni_lbl),$CONTROL_PAR_PICTURE,"dswa_ens_anim_dunun_sm")
	set_control_par_str(get_ui_id($sangba_lbl),$CONTROL_PAR_PICTURE,"dswa_ens_anim_dunun_med")
	set_control_par_str(get_ui_id($dununba_lbl),$CONTROL_PAR_PICTURE,"dswa_ens_anim_dunun_big")	
	
	move_control_px($solo_djembe_lbl,516,48)
	move_control_px($djembe_1_lbl,411,9)
	move_control_px($djembe_2_lbl,302,3)
	move_control_px($kenkeni_lbl,211,52)
	move_control_px($sangba_lbl,128,67)
	move_control_px($dununba_lbl,14,79)
	
	declare %djembe_reorder[7] := (2,1,3,4,5,6,0)
	declare %dunun_reorder[4] := (0,3,2,1)
	declare %menu_id_reorder[6] := (12,10,11,8,6,4)
	
	$count := 0
	while($count < 6)
		set_control_par_str(%drum_picture_id[$count],$CONTROL_PAR_TEXT,"")
		inc($count)
	end while
	
	set_control_par_str(get_ui_id($solo_djembe_btn),$CONTROL_PAR_PICTURE,"dswa_sel_djembe_solob")
	set_control_par_str(get_ui_id($djembe_1_btn),$CONTROL_PAR_PICTURE,"dswa_sel_djembe_1b")
	set_control_par_str(get_ui_id($djembe_2_btn),$CONTROL_PAR_PICTURE,"dswa_sel_djembe_2b")
	set_control_par_str(get_ui_id($kenkeni_btn),$CONTROL_PAR_PICTURE,"dswa_sel_kenkeni")
	set_control_par_str(get_ui_id($sangba_btn),$CONTROL_PAR_PICTURE,"dswa_sel_sangba")
	set_control_par_str(get_ui_id($dununba_btn),$CONTROL_PAR_PICTURE,"dswa_sel_dununba")
	
	set_control_par(get_ui_id($solo_djembe_btn),$CONTROL_PAR_WIDTH,105)
	set_control_par(get_ui_id($djembe_1_btn),$CONTROL_PAR_WIDTH,100)
	set_control_par(get_ui_id($djembe_2_btn),$CONTROL_PAR_WIDTH,100)
	
	move_control_px($solo_djembe_btn,508,87)
	set_control_par(get_ui_id($solo_djembe_btn),$CONTROL_PAR_HEIGHT,155)

	move_control_px($djembe_1_btn,406,37)
	set_control_par(get_ui_id($djembe_1_btn),$CONTROL_PAR_HEIGHT,135)
	
	move_control_px($djembe_2_btn,306,29)
	set_control_par(get_ui_id($djembe_2_btn),$CONTROL_PAR_HEIGHT,158)

	move_control_px($kenkeni_btn,203,47)
	set_control_par(get_ui_id($kenkeni_btn),$CONTROL_PAR_WIDTH,100)
	set_control_par(get_ui_id($kenkeni_btn),$CONTROL_PAR_HEIGHT,120)
	
	move_control_px($sangba_btn,121,60)
	set_control_par(get_ui_id($sangba_btn),$CONTROL_PAR_WIDTH,98)
	set_control_par(get_ui_id($sangba_btn),$CONTROL_PAR_HEIGHT,130)
	
	move_control_px($dununba_btn,5,73)
	set_control_par(get_ui_id($dununba_btn),$CONTROL_PAR_WIDTH,127)
	set_control_par(get_ui_id($dununba_btn),$CONTROL_PAR_HEIGHT,165)
	
	{drum skinning end}
	
	set_control_par(get_ui_id($tuning_sld),$CONTROL_PAR_DEFAULT_VALUE,0)
	set_control_par(get_ui_id($tuning_sld),$CONTROL_PAR_VALUE,0)
	
	set_control_par(get_ui_id($inst_sld),$CONTROL_PAR_DEFAULT_VALUE,50)
	set_control_par(get_ui_id($inst_sld),$CONTROL_PAR_VALUE,50)
	
	$count := 0
	while ($count < 4)
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_POS_Y,189)
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_DEFAULT_VALUE,0)
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_VALUE,0)
		inc($count)
	end while
	
	set_control_par(%inst_properties_ids[0],$CONTROL_PAR_POS_X,239)
	move_control_px($inst_groove_bg,238,189)
	read_persistent_var($beat_knob)
	
	declare %drop_y_pos_help[9] := (190,212,190,212,190,212,197,197,197)
	
	$count := 4
	while($count < 13)
		set_control_par_str(%inst_properties_ids[$count],$CONTROL_PAR_PICTURE,"dswa_drop_down_overlay")
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_TEXTPOS_Y,4)
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_FONT_TYPE,$FONT_ID)
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_POS_X,135)
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_POS_Y,%drop_y_pos_help[$count-4])
		inc($count)
	end while
	
	$gui_count := 13
	while($gui_count < 15)
		set_control_par_str(%inst_properties_ids[$gui_count],$CONTROL_PAR_PICTURE,"dswa_poti_normal")
		set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_MOUSE_BEHAVIOUR,-500)
		set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_X,383 + (($gui_count-13)*61))
		set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_Y,187)
		inc($gui_count)
	end while
	
	{function }  {}
	
{ function data }
	
	declare $step_delay_1
	declare $step_delay_2
	declare $step_delay_3
	declare $step_delay_4
	declare $step_delay_5
	declare $step_delay_6
	declare $step_delay_7
	declare $step_delay_8
	declare $solo_step_delay
	
	declare $base_velocity_1
	declare $base_velocity_2
	declare $base_velocity_3
	declare $base_velocity_4
	declare $base_velocity_5
	declare $base_velocity_6
	declare $base_velocity_7
	declare $base_velocity_8
	
	make_persistent($base_velocity_1)
	make_persistent($base_velocity_2)
	make_persistent($base_velocity_3)
	make_persistent($base_velocity_4)
	make_persistent($base_velocity_5)
	make_persistent($base_velocity_6)
	make_persistent($base_velocity_7)
	make_persistent($base_velocity_8)
	
	declare %edit_buffer_djembe[$MAX_NUM_OF_STEPS]
	declare %edit_buffer_bell[$MAX_NUM_OF_STEPS]
	declare %edit_buffer_dunun[$MAX_NUM_OF_STEPS]
	
	declare %edit_all_buffer_track_1[$MAX_NUM_OF_STEPS]
	declare %edit_all_buffer_track_2[$MAX_NUM_OF_STEPS]
	declare %edit_all_buffer_track_3[$MAX_NUM_OF_STEPS]
	declare %edit_all_buffer_track_4[$MAX_NUM_OF_STEPS]
	declare %edit_all_buffer_track_5[$MAX_NUM_OF_STEPS]
	declare %edit_all_buffer_track_6[$MAX_NUM_OF_STEPS]
	declare %edit_all_buffer_track_7[$MAX_NUM_OF_STEPS]
	declare %edit_all_buffer_track_8[$MAX_NUM_OF_STEPS]
	
	declare %presets_triplet_bell[12] := (...
	1,0,1,1,0,1,1,0,1,1,0,1)
	declare %presets_triplet_dunun[12] := (...
	1,0,1,1,0,0,1,0,1,1,0,0)
	declare %presets_sixteenth_bell[16]
	declare %presets_sixteenth_dunun[16]
	
	declare %track_1_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	declare %track_2_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	declare %track_3_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	declare %track_4_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	declare %track_5_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	declare %track_6_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	declare %track_7_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	declare %track_8_presets[$MAX_NUM_OF_STEPS * $NUM_OF_PRESETS]
	make_persistent(%track_1_presets)
	make_persistent(%track_2_presets)
	make_persistent(%track_3_presets)
	make_persistent(%track_4_presets)
	make_persistent(%track_5_presets)
	make_persistent(%track_6_presets)
	make_persistent(%track_7_presets)
	make_persistent(%track_8_presets)
	
	declare $track_1_beat_delay
	declare $track_2_beat_delay
	declare $track_3_beat_delay
	declare $track_4_beat_delay
	declare $track_5_beat_delay
	declare $track_6_beat_delay
	declare $track_7_beat_delay
	declare $track_8_beat_delay
	make_persistent($track_1_beat_delay)
	make_persistent($track_2_beat_delay)
	make_persistent($track_3_beat_delay)
	make_persistent($track_4_beat_delay)
	make_persistent($track_5_beat_delay)
	make_persistent($track_6_beat_delay)
	make_persistent($track_7_beat_delay)
	make_persistent($track_8_beat_delay)
	
	declare %djembe_1_tuning[7]
	declare %djembe_2_tuning[7]
	declare %kenkeni_tuning[4]
	declare %sangba_tuning[4]
	declare %dununba_tuning[4]
	declare %solo_djembe_tuning[7]
	
	make_persistent(%djembe_1_tuning)
	make_persistent(%djembe_2_tuning)
	make_persistent(%kenkeni_tuning)
	make_persistent(%sangba_tuning)
	make_persistent(%dununba_tuning)
	make_persistent(%solo_djembe_tuning)
	
	declare %bell_low_vol[3]
	declare %bell_mid_vol[3]
	declare %bell_high_vol[3]
	
	make_persistent(%bell_low_vol)
	make_persistent(%bell_mid_vol)
	make_persistent(%bell_high_vol)
	
	$count := 0
	while ($count < 3)
		%bell_low_vol[$count] := 50
		%bell_mid_vol[$count] := 50
		%bell_high_vol[$count] := 50
		inc ($count)
	end while
	
	declare %djembe_1_tap_vol[7]
	declare %djembe_2_tap_vol[7]
	
	make_persistent(%djembe_1_tap_vol)
	make_persistent(%djembe_2_tap_vol)
	
	declare %solo_djembe_decay[7]
	make_persistent(%solo_djembe_decay)
	
	$count := 0
	while ($count < 7)
		%djembe_1_tap_vol[$count] := 50
		%djembe_2_tap_vol[$count] := 50
		%solo_djembe_decay[$count] := 100
		inc ($count)
	end while
	
	
	declare %track_1_step_delay[4]
	declare %track_2_step_delay[4]
	declare %track_3_step_delay[4]
	declare %track_4_step_delay[4]
	declare %track_5_step_delay[4]
	declare %track_6_step_delay[4]
	declare %track_7_step_delay[4]
	declare %track_8_step_delay[4]
	make_persistent(%track_1_step_delay)
	make_persistent(%track_2_step_delay)
	make_persistent(%track_3_step_delay)
	make_persistent(%track_4_step_delay)
	make_persistent(%track_5_step_delay)
	make_persistent(%track_6_step_delay)
	make_persistent(%track_7_step_delay)
	make_persistent(%track_8_step_delay)
	
	declare %solo_djembe_step_delay[4]
	declare $solo_djembe_beat_delay
	make_persistent(%solo_djembe_step_delay)
	make_persistent($solo_djembe_beat_delay)
	
	declare %phrase_note_presets_16[16 * $NUM_OF_PHRASES] := (...
	{C}		5, 0, 2, 2,		0, 2, 0, 2,  	2, 0, 2, 0, 	2, 0, 0, 0,...
	{Db}	2, 2, 2, 3,		3, 3, 3, 3,  	2, 2, 2, 3, 	3, 3, 3, 3,...
	{D}		6, 0, 2, 2,		0, 2, 0, 2,  	2, 0, 3, 3, 	3, 0, 0, 0,...
	{Eb}	2, 2, 3, 2,		2, 3, 2, 2,  	3, 2, 2, 3, 	2, 2, 3, 3,...
	{E}		6, 0, 0, 2,		2, 0, 6, 0,  	0, 0, 2, 2, 	6, 0, 0, 0,...
	{F}		2, 0, 2, 2,		3, 0, 0, 0,  	2, 0, 2, 2, 	3, 0, 0, 0,...
	{Gb}	1, 1, 1, 1,		1, 1, 1, 1,  	1, 1, 1, 1, 	1, 1, 1, 1,...
	{G}		2, 2, 2, 2,		2, 2, 2, 2,  	2, 2, 2, 2, 	2, 2, 2, 2,...
	{Ab}	2, 2, 2, 2,		2, 2, 2, 2, 	2, 2, 2, 2, 	2, 2, 2, 2,...
	{A}		3, 2, 3, 0, 	3, 1, 3, 0,  	3, 2, 3, 0, 	3, 1, 3, 0,...
	{Bb}	3, 3, 3, 3,		3, 3, 3, 3,  	3, 3, 3, 3, 	3, 3, 3, 3,...
	{B}		1, 2, 2, 2,		3, 0, 1, 2,  	2, 2, 3, 0,  	1, 2, 3, 0)
	
	{0: Pause
	1: Bass
	2: Open
	3: Slap
	4: bass/slap
	5: open/open
	6: slap/slap}
	
	declare %phrase_roll_presets_16[16 * $NUM_OF_PHRASES] := (...
	{C}		0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{Db}	0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{D}		0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{Eb}	0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{E}		0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{F}		2,0,0,0, 0,0,0,0, 2,0,0,0, 0,0,0,0,...
	{Gb}	0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{G}		1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1,...
	{Ab}	0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{A}		1,0,0,0, 1,0,0,0, 1,0,0,0, 1,0,0,0,...
	{Bb}	0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,...
	{B}		0,1,1,0, 0,0,0,1, 1,0,0,0, 0,1,0,0)
	
	{0: 16th
	1: 32nd
	2: 3/2}
	
	declare %phrase_note_presets_12[12 * $NUM_OF_PHRASES] := (...
	{C}		2, 0, 0, 	2,	2, 0, 	2, 2, 0, 	2, 0, 0,...
	{Db}	2, 3, 3, 	3,	3, 2, 	2, 3, 3, 	3, 3, 2,...
	{D}		5, 0, 2, 	2,	0, 2, 	2, 0, 2, 	2, 0, 0,...
	{Eb}	2, 2, 3, 	3,	2, 2, 	3, 3, 2, 	2, 3, 3,...
	{E}		5, 0, 2, 	0,	5, 0, 	2, 0, 5, 	0, 2, 0,...
	{F}		2, 2, 2, 	3,	0, 0, 	2, 2, 2, 	3, 0, 0,...
	{Gb}	1, 1, 1, 	1,	1, 1, 	1, 1, 1, 	1, 1, 1,...
	{G}		2, 2, 2, 	2,	2, 2, 	2, 2, 2, 	2, 2, 2,...
	{Ab}	2, 2, 2, 	2,	2, 2, 	2, 2, 2, 	2, 2, 2,...
	{A}		2, 2, 0, 	3,	3, 0, 	2, 2, 0, 	1, 1, 0,...
	{Bb}	3, 3, 3, 	3,	3, 3, 	3, 3, 3, 	3, 3, 3,...
	{B}		1, 2, 2, 	3,	1, 2, 	2, 3, 1, 	2, 1, 3)
	
	{0: Pause
	1: Bass
	2: Open
	3: Slap
	4: bass/slap
	5: open/open
	6: slap/slap}
	
	declare %phrase_roll_presets_12[12 * $NUM_OF_PHRASES] := (...
	{C}		2,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{Db}	0,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{D}		0,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{Eb}	0,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{E}		0,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{F}		1,1,0,	0,0,0,	1,1,0,	0,0,0,...
	{Gb}	0,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{G}		1,1,1,	1,1,1,	1,1,1,	1,1,1,...
	{Ab}	0,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{A}		0,1,0,	0,1,0,	0,1,0,	0,1,0,...
	{Bb}	0,0,0,	0,0,0,	0,0,0,	0,0,0,...
	{B}		0,1,1,	0,0,1,	1,0,0,	1,0,0)
	
	{0: 12th
	1: 24nd
	2: 4/3}
	
	
{function } {}
	
{ function other_variables }
	
	declare $selected_instrument
	declare $edited_instrument
	declare $edit_menu_action
	
	declare $first
	declare $phrase_first
	
	declare $phrase_counter
	declare $phrase_velocity
	
	declare $tick_counter
	declare $step_counter
	declare $step_counter_previous
	declare $step_counter_next
	declare $grid_counter
	declare $grid_counter_next
	
	declare $seq_running
	declare $phrase_running
	
	declare $sync_position
	
	declare $step_duration
	
	{Mute and Solo stuff}
	declare %solo_state[5]
	declare $solo_key_counter
	
	declare $mute_count_dununba
	declare $mute_count_sangba
	declare $mute_count_kenkeni
	
	declare $mute_count_bell_low
	declare $mute_count_bell_mid
	declare $mute_count_bell_high
	
	declare $mute_count_djembe_1
	declare $mute_count_djembe_2
	
	declare $mute_count_solo_djembe
	
	declare $preset_key_counter
	declare $phrase_key_counter
	declare $phrase_hit_counter
	
	declare $djembe_1_tap_active
	declare $djembe_2_tap_active
	
	declare $new_id {must not be polyphonic}
	declare polyphonic $played_note_id
	
	declare $wait_time
	
	declare $played_velocity
	declare $played_note
	declare $played_instrument
	declare $played_track
	declare $played_articulation
	declare $played_hand {0 for left, 1 for right hand}
	declare $played_vol
	
	declare $played_phrase
	
	declare $original_velocity_phrase
	
	declare $latch_notes
	
	declare $randomize_abs_time
	
	{listener parameters}
	read_persistent_var($tempo_vedit)
	set_listener($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
	set_listener($NI_SIGNAL_TIMER_BEAT,$TICKS_PER_BEAT)
	set_listener($NI_SIGNAL_TRANSP_STOP,1)
	set_listener($NI_SIGNAL_TRANSP_START,1)
	
	
{function } {}

{ function key_color }
	
	$count := 0 
	while ($count < 128) 
  		set_key_color($count,$KEY_COLOR_INACTIVE)
  		set_key_type($count,$NI_KEY_TYPE_NONE)
  		inc($count)
  	end while
	
	$count := 36
	while ($count <= 107)
		
		select ($count)
		
		case $PRESET_KEY_MIN to $PRESET_KEY_MAX
			set_key_color($count,$KEY_COLOR_RED) {presets}
			set_key_type($count,$NI_KEY_TYPE_CONTROL)
		
		case $PHRASE_RANGE_MIN to $PHRASE_RANGE_MAX
			set_key_color($count,$KEY_COLOR_LIGHT_ORANGE) {solo djembe phrases}
		
		case $SOLO_DJEMBE_RANGE_MIN to $SOLO_DJEMBE_RANGE_MAX
			set_key_color($count,$KEY_COLOR_YELLOW) {solo djembe single}
			
		case $DUNUN_RANGE_MIN to $DUNUN_RANGE_MAX
			set_key_color($count,$KEY_COLOR_CYAN) {dunun}
		
		
		case $DJEMBE_RANGE_MIN to 89
			set_key_color($count,$KEY_COLOR_VIOLET) {djembe}
		
		case 90 to $DJEMBE_RANGE_MAX
			set_key_color($count,$KEY_COLOR_MAGENTA) {djembe}
		
		case 96 to 101
			set_key_color($count,$KEY_COLOR_VIOLET) {djembe 2 tap}
		
		case 102 to 107
			set_key_color($count,$KEY_COLOR_MAGENTA) {djembe 1 tap}
			
		end select
		
		inc($count)
	end while
	
	set_key_color(83,$KEY_COLOR_INACTIVE)
	
{function } {}

{ function keyranges }
		
	$count := 0
	while ($count < 128)
		remove_keyrange($count)
		inc($count)
	end while
	
	set_keyrange(36,47,"Patterns")
	set_keyrange(48,59,"Djembe Phrases")
	set_keyrange(60,71,"Djembe Hits")
	set_keyrange(72,82,"Dunun")
	set_keyrange(84,89,"Djembe 2")
	set_keyrange(90,95,"Djembe 1")
	
	set_keyrange(96,101,"Djembe 2 Add")
	set_keyrange(102,107,"Djembe 1 Add")

{function } {}

{ function key_names }
	
	$count := 0
    while ($count < 128)
		set_key_name($count,"")
        inc($count)
    end while
    
    $count := 0
    while ($count < 12)
   		set_key_name(36 + $count,"Pattern " & $count + 1)
   		inc($count)
   	end while
   	
   	$count := 0
    while ($count < 12)
   		set_key_name(48 + $count,"Solo Djembe Phrase " & $count + 1)
   		inc($count)
   	end while
    
    set_key_name(60,"Solo Djembe Bass L")
    set_key_name(61,"Solo Djembe Bass R")
    set_key_name(62,"Solo Djembe Open L")
    set_key_name(63,"Solo Djembe Open R")
    set_key_name(64,"Solo Djembe Slap L")
    set_key_name(65,"Solo Djembe Slap R")
    set_key_name(66,"Solo Djembe Flam 1")
    set_key_name(67,"Solo Djembe Flam 2")
    set_key_name(68,"Solo Djembe Flam 3")
    set_key_name(69,"Solo Djembe Flam 4")
    set_key_name(70,"Solo Djembe Flam 5")
    set_key_name(71,"Solo Djembe Flam 6")
    
	set_key_name(72,"Dununba Open")
	set_key_name(73,"Ensemble Low")
	set_key_name(74,"Dununba Muted")
	set_key_name(75,"Ensemble High")
	set_key_name(76,"Sangba Open")
	set_key_name(77,"Sangba Muted")
	set_key_name(78,"Bell Low")
	set_key_name(79,"Kenkeni Open")
	set_key_name(80,"Bell Mid")
	set_key_name(81,"Kenkeni Muted")
	set_key_name(82,"Bell High")
	set_key_name(83,"")
	
	set_key_name(84,"Djembe 2 Bass L")
    set_key_name(85,"Djembe 2 Bass R")
    set_key_name(86,"Djembe 2 Open L")
    set_key_name(87,"Djembe 2 Open R")
    set_key_name(88,"Djembe 2 Slap L")
    set_key_name(89,"Djembe 2 Slap R")
    
    set_key_name(90,"Djembe 1 Bass L")
    set_key_name(91,"Djembe 1 Bass R")
    set_key_name(92,"Djembe 1 Open L")
    set_key_name(93,"Djembe 1 Open R")
    set_key_name(94,"Djembe 1 Slap L")
    set_key_name(95,"Djembe 1 Slap R")
    
    {additions}
    set_key_name(96,"Djembe 2 Tap L")
    set_key_name(97,"Djembe 2 Tap R")
    set_key_name(98,"Djembe 2 Finger Open L")
    set_key_name(99,"Djembe 2 Finger Open R")
    set_key_name(100,"Djembe 2 Finger Slap L")
    set_key_name(101,"Djembe 2 Finger Slap R")
    
    set_key_name(102,"Djembe 1 Tap L")
    set_key_name(103,"Djembe 1 Tap R")
    set_key_name(104,"Djembe 1 Finger Open L")
    set_key_name(105,"Djembe 1 Finger Open R")
    set_key_name(106,"Djembe 1 Finger Slap L")
    set_key_name(107,"Djembe 1 Finger Slap R")
    

{function } {}

{ function control_help }
	
	set_control_help($solo_djembe_btn,"Solo Djembe Properties: toggles the visibility of the solo djembe properties window.")
	set_control_help($djembe_1_btn,"Djembe 1 Properties: toggles the visibility of the djembe 1 properties window.")
	set_control_help($djembe_2_btn,"Djembe 2 Properties: toggles the visibility of the djembe 2 properties window.")
	set_control_help($kenkeni_btn,"Kenkeni Properties: toggles the visibility of the kenkeni properties window.")
	set_control_help($sangba_btn,"Sangba Properties: toggles the visibility of the sangba properties window.")
	set_control_help($dununba_btn,"Dununba Properties: toggles the visibility of the dununba properties window.")
	
	set_control_help($tempo_up,"Increase Tempo: increases the pattern sequencer's internal tempo by 1 bpm (or 0.01 if you hold Shift while clicking).")
	set_control_help($tempo_down,"Decrease Tempo: decreases the pattern sequencer's internal tempo by 1 bpm (or 0.01 if you hold Shift while clicking).")
	set_control_help($tempo_drag_course,"Internal Tempo: click and drag here to increase or decrease the pattern sequencer's tempo.")
	set_control_help($tempo_drag_fine,"Internal Tempo: click and drag here to finely increase or decrease the pattern sequencer's tempo.")
	
	set_control_help($sync_btn,"Tempo Sync: on/off switch for synchronization of the pattern sequencer to the host tempo. This control will not be saved with snapshots.")
	set_control_help($trigger_btn,"Trigger: selects how the patterns are triggered. If set to Host, the pattern will begin playback when the host clock starts running; if set to Notes the pattern will playback when you play a MIDI note in the range C1-B1. This control will not be saved with snapshots.")
	set_control_help($play_btn,"Play Button: activates playback of the selected pattern, regardless of the Trigger selection. You can automate this control in your host in order to stop and start playback.")
	
	set_control_help($preset_knob,"Variation: selects the pattern for playback. This control will not be saved with snapshots.")
	set_control_help($swing_sld,"Swing: this controls the amount of deviation from the beat of the patterns. The style of the swing is set using the Groove controls in the instrument properties. If the swing knob is set to the center, no deviation from the beat is applied.")
	set_control_help($humanize_sld,"Feel: applies an intelligent randomization to the velocity and various other places to give the pattern playback a more human feel. When set fully to the left, the ensemble sounds very mechanical, when set fully to the right, the ensemble plays loosely.")
	set_control_help($intensity_sld,"Intensity: controls the main velocity of the selected pattern.")
	set_control_help($reverb_sld,"Reverb: controls both the reverb return level and the reverb size.")
	
	set_control_help($edit_pattern_menu,"Edit Pattern: copy, paste or clear pattern.")
	set_control_help($edit_djembe_1_menu,"Edit Djembe 1 Pattern")
	set_control_help($edit_djembe_2_menu,"Edit Djembe 2 Pattern")
	set_control_help($edit_kenkeni_menu,"Edit Kenkeni Pattern")
	set_control_help($edit_sangba_menu,"Edit Sangba Pattern")
	set_control_help($edit_dununba_menu,"Edit Dununba Pattern")
	
	set_control_help($beat_grid_btn,"Beat Grid: Set the number of steps in the sequence and the sequence rate (either 1/16 or 1/12).")
	
	set_control_help($inst_prop_close,"Close Instrument Properties")
	
	set_control_help($beat_knob,"Main Groove Offset")
	set_control_help($step1_delay_sld,"2nd Step Offset")
	set_control_help($step2_delay_sld,"3rd Step Offset")
	set_control_help($step3_delay_sld,"4th Step Offset")
		
	set_control_help($dununba_menu,"Dununba Select: Selects the sample set for the Dununba.")
	set_control_help($bell_low_menu,"Dununba Bell Select: Selects the sample set for the Dununba Bell.")
	set_control_help($sangba_menu,"Sangba Select: Selects the sample set for the Sangba.")
	set_control_help($bell_mid_menu,"Sangba Bell Select: Selects the sample set for the Sangba Bell.")
	set_control_help($kenkeni_menu,"Kenkeni Select: Selects the sample set for the Kenkeni.")
	set_control_help($bell_high_menu,"Kenkeni Bell Select: Selects the sample set for the Kenkeni Bell.")
	set_control_help($djembe_1_menu,"Djembe 1 Select: Selects the sample set for Djembe 1.")
	set_control_help($djembe_2_menu,"Djembe 2 Select: Selects the sample set for Djembe 2.")
	set_control_help($solo_djembe_menu,"Solo Djembe Select: Selects the sample set for the Solo Djembe.")
	
	set_control_help($tuning_sld,"Tune: Sets the instrument tuning.")
	set_control_help($inst_sld,"Instrument Specific Control: Please refer to manual.")
	
	set_control_help($edit_seq_btn,"Edit: Opens the pattern editor.")
	
{function } {}

{ function automation_ids }

	declare const $SET_IDS := 0
	if($SET_IDS = 1)
		set_control_par(get_ui_id($preset_knob),$CONTROL_PAR_AUTOMATION_ID,0)
		set_control_par(get_ui_id($swing_sld),$CONTROL_PAR_AUTOMATION_ID,1)
		set_control_par(get_ui_id($humanize_sld),$CONTROL_PAR_AUTOMATION_ID,2)
		set_control_par(get_ui_id($intensity_sld),$CONTROL_PAR_AUTOMATION_ID,3)
		set_control_par(get_ui_id($reverb_sld),$CONTROL_PAR_AUTOMATION_ID,4)
	end if
	
{function } {}

end on


function update_midi_file
	
	{delete all events}
	mf_remove_event($ALL_EVENTS)

	{create dummy event CAUTION}
	mf_insert_event(0,0,$MIDI_COMMAND_POLY_AT,12+$preset_knob,0)
	
	{get step duration}
	$mf_step_duration := 960/$beat_grid
	
	$mf_step_counter := 0
	while ($mf_step_counter < $num_of_steps)
		
		$create_mf_note := 1
		
		{get played hand}
		$cur_hand := $mf_step_counter mod 2
		
		{get swing delay time}
		$cur_step_delay_1 := ($mf_step_duration * (%track_1_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_1_beat_delay/100)/100)
		$cur_step_delay_2 := ($mf_step_duration * (%track_2_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_2_beat_delay/100)/100)
		$cur_step_delay_3 := ($mf_step_duration * (%track_3_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_3_beat_delay/100)/100)
		$cur_step_delay_4 := ($mf_step_duration * (%track_4_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_4_beat_delay/100)/100)
		$cur_step_delay_5 := ($mf_step_duration * (%track_5_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_5_beat_delay/100)/100)
		$cur_step_delay_6 := ($mf_step_duration * (%track_6_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_6_beat_delay/100)/100)
		$cur_step_delay_7 := ($mf_step_duration * (%track_7_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_7_beat_delay/100)/100)
		$cur_step_delay_8 := ($mf_step_duration * (%track_8_step_delay[$mf_step_counter mod $beat_grid]/100)/100) + ($mf_step_duration * ($track_8_beat_delay/100)/100)
	
		{scale swing time}
		$cur_step_delay_1 := $cur_step_delay_1 * ($swing_sld*100/100)/100
		$cur_step_delay_2 := $cur_step_delay_2 * ($swing_sld*100/100)/100
		$cur_step_delay_3 := $cur_step_delay_3 * ($swing_sld*100/100)/100
		$cur_step_delay_4 := $cur_step_delay_4 * ($swing_sld*100/100)/100
		$cur_step_delay_5 := $cur_step_delay_5 * ($swing_sld*100/100)/100
		$cur_step_delay_6 := $cur_step_delay_6 * ($swing_sld*100/100)/100
		$cur_step_delay_7 := $cur_step_delay_7 * ($swing_sld*100/100)/100
		$cur_step_delay_8 := $cur_step_delay_8 * ($swing_sld*100/100)/100
		
		{randomize times}
		$randomize_abs_time := $MAX_RANDOMIZE_ABS_TIME * ($humanize_sld*100/100)/100
		
		$cur_step_delay_1 := $cur_step_delay_1 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		$cur_step_delay_2 := $cur_step_delay_2 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		$cur_step_delay_3 := $cur_step_delay_3 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		$cur_step_delay_4 := $cur_step_delay_4 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		$cur_step_delay_5 := $cur_step_delay_5 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		$cur_step_delay_6 := $cur_step_delay_6 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		$cur_step_delay_7 := $cur_step_delay_7 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		$cur_step_delay_8 := $cur_step_delay_8 + ms_to_ticks(random(-$randomize_abs_time*1000,$randomize_abs_time*1000))
		
		
		{TRACK 1 DJEMBE 1}
		if (%track_1_table[$mf_step_counter] > 0  or ...
		   (%djembe_1_tap_vol[$djembe_1_menu] > 0 and $djembe_1_tap_active = 1))
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_1
			
			$cur_articulation := %track_1_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			if ($intensity_sld < 63) {change to finger open and finger slap}
				
				select ($cur_articulation)
					case 0
						$cur_note := 102 + $cur_hand {$DJEMBE_TAP_NOTE}
						$cur_velo := $base_velocity_1 + %djembe_1_tap_vol[$djembe_1_menu] - $MF_TAP_VELO_ATT
					case 1
						$cur_note := 104 + $cur_hand {$DJEMBE_FINGER_OPEN_NOTE}
						$cur_velo := $base_velocity_1 + 60
					case 2
						$cur_note := 106 + $cur_hand {$DJEMBE_FINGER_SLAP_NOTE}
						$cur_velo := $base_velocity_1 + 60
					case 3
						$cur_note := 90 + $cur_hand {$DJEMBE_BASS_NOTE}
						$cur_velo := $base_velocity_1
				end select
				
			else
				
				select ($cur_articulation)
					case 0
						$cur_note := 102 + $cur_hand {$DJEMBE_TAP_NOTE}
						$cur_velo := $base_velocity_1 + %djembe_1_tap_vol[$djembe_1_menu] - $MF_TAP_VELO_ATT
					case 1
						$cur_note := 92 + $cur_hand {$DJEMBE_OPEN_NOTE}
						$cur_velo := $base_velocity_1
					case 2
						$cur_note := 94 + $cur_hand {$DJEMBE_SLAP_NOTE}
						$cur_velo := $base_velocity_1
					case 3
						$cur_note := 90 + $cur_hand {$DJEMBE_BASS_NOTE}
						$cur_velo := $base_velocity_1
				end select
			end if
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		{TRACK 2 DJEMBE 2}
		if (%track_2_table[$mf_step_counter] > 0  or ...
		   (%djembe_2_tap_vol[$djembe_2_menu] > 0 and $djembe_2_tap_active = 1))
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_2
			
			$cur_articulation := %track_2_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			if ($intensity_sld < 63) {change to finger open and finger slap}
				
				select ($cur_articulation)
					case 0
						$cur_note := 96 + $cur_hand {$DJEMBE_TAP_NOTE}
						$cur_velo := $base_velocity_2 + %djembe_2_tap_vol[$djembe_2_menu] - $MF_TAP_VELO_ATT
					case 1
						$cur_note := 98 + $cur_hand {$DJEMBE_FINGER_OPEN_NOTE}
						$cur_velo := $base_velocity_2 + 60
					case 2
						$cur_note := 100 + $cur_hand {$DJEMBE_FINGER_SLAP_NOTE}
						$cur_velo := $base_velocity_2 + 60
					case 3
						$cur_note := 84 + $cur_hand {$DJEMBE_BASS_NOTE}
						$cur_velo := $base_velocity_2
				end select
				
			else
				
				select ($cur_articulation)
					case 0
						$cur_note := 96 + $cur_hand {$DJEMBE_TAP_NOTE}
						$cur_velo := $base_velocity_2 + %djembe_2_tap_vol[$djembe_2_menu] - $MF_TAP_VELO_ATT
					case 1
						$cur_note := 86 + $cur_hand {$DJEMBE_OPEN_NOTE}
						$cur_velo := $base_velocity_2
					case 2
						$cur_note := 88 + $cur_hand {$DJEMBE_SLAP_NOTE}
						$cur_velo := $base_velocity_2
					case 3
						$cur_note := 84 + $cur_hand {$DJEMBE_BASS_NOTE}
						$cur_velo := $base_velocity_2
				end select
			end if
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		{TRACK 3 BELL HIGH}
		if (%track_3_table[$mf_step_counter] > 0)
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_3
			
			$cur_articulation := %track_3_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			$cur_velo := $base_velocity_3
				
			select ($cur_articulation)
				
				case 1
					$cur_note := 82 {$BELL_HIGH_NOTE}
			end select
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		{TRACK 4 KENKENI}
		if (%track_4_table[$mf_step_counter] > 0)
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_4
			
			$cur_articulation := %track_4_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			$cur_velo := $base_velocity_4
				
			select ($cur_articulation)
				case 1
					$cur_note := 79 {$KENKENI_NOTE}
				case 2
					$cur_note := 81 {$KENKENI_MUTED_NOTE}
			end select
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		{TRACK 5 BELL MID}
		if (%track_5_table[$mf_step_counter] > 0)
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_5
			
			$cur_articulation := %track_5_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			$cur_velo := $base_velocity_5
				
			select ($cur_articulation)
				
				case 1
					$cur_note := 80 {$BELL_MID_NOTE}
			end select
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		{TRACK 6 SANGBA}
		if (%track_6_table[$mf_step_counter] > 0)
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_6
			
			$cur_articulation := %track_6_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			$cur_velo := $base_velocity_6
				
			select ($cur_articulation)
				case 1
					$cur_note := 76 {$SANGBA_NOTE}
				case 2
					$cur_note := 77 {$SANGBA_MUTED_NOTE}
			end select
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		{TRACK 7 BELL LOW}
		if (%track_7_table[$mf_step_counter] > 0)
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_7
			
			$cur_articulation := %track_7_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			$cur_velo := $base_velocity_7
				
			select ($cur_articulation)
				
				case 1
					$cur_note := 78 {$BELL_LOW_NOTE}
			end select
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		{TRACK 8 DUNUNBA}
		if (%track_8_table[$mf_step_counter] > 0)
			
			{POSITION}
			$cur_pos := $mf_step_counter * (960/$beat_grid)
			$cur_pos := $cur_pos + $cur_step_delay_8
			
			$cur_articulation := %track_8_table[$mf_step_counter]
			
			$played_hand := $step_counter_next mod 2
			
			$cur_velo := $base_velocity_8
				
			select ($cur_articulation)
				case 1
					$cur_note := 72 {$DUNUNBA_NOTE}
				case 2
					$cur_note := 74 {$DUNUNBA_MUTED_NOTE}
			end select
			
			{DURATION}
			$cur_dur := $mf_step_duration/2
			
			{randomize velocity}
			$cur_velo := $cur_velo + random(-$humanize_sld/5,$humanize_sld/5)
			
			{clip pos}
			if ($cur_pos < 0)
				$cur_pos := 0
			end if
			
			{clip velocity}
			if ($cur_velo > 127)
				$cur_velo := 127
			end if
			
			if ($cur_velo <= 0)
				$cur_velo := 1
			end if
			
			{clip duration}
			if ($cur_pos + $cur_dur > 960 * 4)
				$cur_dur := $cur_dur - (($cur_pos + $cur_dur) - (960 * 4)) - 1
			end if
			
			{create note}
			if ($create_mf_note = 1)
				$cur_event := mf_insert_event(0,$cur_pos,$MIDI_COMMAND_NOTE_ON,$cur_note,$cur_velo)
				mf_set_event_par($cur_event,$EVENT_PAR_NOTE_LENGTH,$cur_dur)
			end if
			
		end if
		
		inc($mf_step_counter)

	end while
	
	{set export area and name}
	select ($preset_knob)
		case 0
			mf_set_export_area("Variation 1",0,-1,0,0)
		case 1
			mf_set_export_area("Variation 2",0,-1,0,0)
		case 2
			mf_set_export_area("Variation 3",0,-1,0,0)
		case 3
			mf_set_export_area("Variation 4",0,-1,0,0)
		case 4
			mf_set_export_area("Variation 5",0,-1,0,0)
		case 5
			mf_set_export_area("Variation 6",0,-1,0,0)
		case 6
			mf_set_export_area("Variation 7",0,-1,0,0)
		case 7
			mf_set_export_area("Variation 8",0,-1,0,0)
		case 8
			mf_set_export_area("Variation 9",0,-1,0,0)
		case 9
			mf_set_export_area("Variation 10",0,-1,0,0)
		case 10
			mf_set_export_area("Variation 11",0,-1,0,0)
		case 11
			mf_set_export_area("Variation 12",0,-1,0,0)
	end select
	
	
end function {}

function show_instrument_properties
	
	$count := 0
	while ($count < num_elements(%inst_properties_ids))
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		inc($count)
	end while
	
	set_control_par(get_ui_id($keyboard),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
	set_control_par(get_ui_id($sangba_btn),$CONTROL_PAR_HEIGHT,105)
	hide_part ($sangba_overlay,$HIDE_WHOLE_CONTROL)
	
	{show instrument properties}
	hide_part ($beat_knob,$HIDE_PART_NOTHING)
	hide_part ($step1_delay_sld,$HIDE_PART_NOTHING)
	hide_part ($step2_delay_sld,$HIDE_PART_NOTHING)
	if ($beat_grid = 4)
		hide_part ($step3_delay_sld,$HIDE_PART_NOTHING)
	end if
	hide_part ($tuning_sld,$HIDE_PART_NOTHING)
	hide_part ($inst_sld,$HIDE_PART_NOTHING)
	{show menu}
	
	hide_part ($inst_cont_bg,$HIDE_PART_NOTHING)
	hide_part ($inst_prop_close,$HIDE_PART_NOTHING)
	hide_part ($inst_groove_bg,$HIDE_PART_NOTHING)
	
	select($selected_instrument)
		case 1 {djembe 1}
			hide_part ($djembe_1_menu,$HIDE_PART_NOTHING)
		case 2 {djembe 2}
			hide_part ($djembe_2_menu,$HIDE_PART_NOTHING)
		case 3 {kenkeni and bell}
			hide_part ($kenkeni_menu,$HIDE_PART_NOTHING)
			hide_part ($bell_high_menu,$HIDE_PART_NOTHING)
		case 4 {sangba and bell}
			hide_part ($sangba_menu,$HIDE_PART_NOTHING)
			hide_part ($bell_mid_menu,$HIDE_PART_NOTHING)
			hide_part ($sangba_overlay,$HIDE_PART_NOTHING)
		case 5 {dununba and bell}
			hide_part ($dununba_menu,$HIDE_PART_NOTHING)
			hide_part ($bell_low_menu,$HIDE_PART_NOTHING)
		case 6 {solo djembe}
			hide_part ($solo_djembe_menu,$HIDE_PART_NOTHING)
	end select
	
	if($beat_grid_btn = 1) {4}
		set_control_par_str(get_ui_id($beat_knob),$CONTROL_PAR_PICTURE,"dswa_groove_16_first")
		set_control_par_str(get_ui_id($step1_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_16_mid")
		set_control_par_str(get_ui_id($step2_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_16_mid")
		set_control_par_str(get_ui_id($step3_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_16_last")
		set_control_par_str(get_ui_id($inst_groove_bg),$CONTROL_PAR_PICTURE,"dswa_groove_16_bg")
	
		$gui_count := 1
		while ($gui_count < 4)
			set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_X,239 + ($gui_count*30) + (($beat_knob*9)/$MAX_SWING_AMOUNT))
			inc($gui_count)
		end while
	else {3}
		set_control_par_str(get_ui_id($beat_knob),$CONTROL_PAR_PICTURE,"dswa_groove_12_first")
		set_control_par_str(get_ui_id($step1_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_12_mid")
		set_control_par_str(get_ui_id($step2_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_12_last")
		set_control_par_str(get_ui_id($inst_groove_bg),$CONTROL_PAR_PICTURE,"dswa_groove_12_bg")
	
		$gui_count := 1
		while ($gui_count < 4)
			set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_X,239 + ($gui_count*38) + (($beat_knob*13)/$MAX_SWING_AMOUNT))
			inc($gui_count)
		end while
	end if
	
end function {}

function hide_instrument_properties
	
	$count := 0
	while ($count <  num_elements(%inst_properties_ids))
		set_control_par(%inst_properties_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		inc($count)
	end while
	
	hide_part ($sangba_overlay,$HIDE_WHOLE_CONTROL)
	set_control_par(get_ui_id($sangba_btn),$CONTROL_PAR_HEIGHT,130)
	set_control_par(get_ui_id($keyboard),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
	
end function {}

function show_sequencer
	
	call hide_instrument_properties
	
	{show cell matrix}
	$count := 0
	while ($count < $num_of_steps)
		set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)])
		set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)]-2)
		set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_POS_X,$DEFAULT_POS_X+(%DEFAULT_DIST_X[$beat_grid_btn]*$count)+%DEFAULT_X_OFFSET[$count + ($beat_grid_btn*12)] + %light_offset[$count + ($beat_grid_btn*12)])
		inc($count)
	end while
	
	$count := 0
	while ($count < num_elements(%edit_pattern_ids))
		set_control_par(%edit_pattern_ids[$count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		inc($count)
	end while
	
	set_control_par(get_ui_id($keyboard),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
	set_control_par(get_ui_id($note_bg),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
	set_control_par(get_ui_id($note_bg),$CONTROL_PAR_PICTURE_STATE,$beat_grid_btn)
	
	hide_part ($solo_djembe_btn,$HIDE_WHOLE_CONTROL)
	hide_part ($djembe_1_btn,$HIDE_WHOLE_CONTROL)
	hide_part ($djembe_2_btn,$HIDE_WHOLE_CONTROL)
	hide_part ($kenkeni_btn,$HIDE_WHOLE_CONTROL)
	hide_part ($sangba_btn,$HIDE_WHOLE_CONTROL)
	hide_part ($dununba_btn,$HIDE_WHOLE_CONTROL)
	
	hide_part ($solo_djembe_lbl,$HIDE_WHOLE_CONTROL)
	hide_part ($djembe_1_lbl,$HIDE_WHOLE_CONTROL)
	hide_part ($djembe_2_lbl,$HIDE_WHOLE_CONTROL)
	hide_part ($kenkeni_lbl,$HIDE_WHOLE_CONTROL)
	hide_part ($sangba_lbl,$HIDE_WHOLE_CONTROL)
	hide_part ($dununba_lbl,$HIDE_WHOLE_CONTROL)
	
	set_skin_offset(441*$edit_seq_btn)
	
end function {}

function hide_sequencer		
	
	{hide cell matrix}
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_1_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_2_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_3_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_4_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_5_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_6_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_7_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_8_btn_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		inc($count)
	end while
	
	set_control_par(get_ui_id($note_bg),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
	
	$count := 0
	while ($count < num_elements(%edit_pattern_ids))
		set_control_par(%edit_pattern_ids[$count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		inc($count)
	end while
	
	set_control_par(get_ui_id($keyboard),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
	
	if ($selected_instrument > 0)
		call show_instrument_properties
	end if
	
	hide_part ($solo_djembe_btn,$HIDE_PART_NOTHING)
	hide_part ($djembe_1_btn,$HIDE_PART_NOTHING)
	hide_part ($djembe_2_btn,$HIDE_PART_NOTHING)
	hide_part ($kenkeni_btn,$HIDE_PART_NOTHING)
	hide_part ($sangba_btn,$HIDE_PART_NOTHING)
	hide_part ($dununba_btn,$HIDE_PART_NOTHING)
	
	hide_part ($solo_djembe_lbl,$HIDE_PART_NOTHING)
	hide_part ($djembe_1_lbl,$HIDE_PART_NOTHING)
	hide_part ($djembe_2_lbl,$HIDE_PART_NOTHING)
	hide_part ($kenkeni_lbl,$HIDE_PART_NOTHING)
	hide_part ($sangba_lbl,$HIDE_PART_NOTHING)
	hide_part ($dununba_lbl,$HIDE_PART_NOTHING)
	
	set_skin_offset(441*$edit_seq_btn)
	
end function {}

function change_lauflicht
	if ($edit_seq_btn = 1)
		$count := 0
		while ($count < $num_of_steps)
			set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_0_table[$count])
			inc ($count)
		end while
	end if
end function {}

function clear_lauflicht
	
	$count := 0
	while ($count < $num_of_steps)
		%track_0_table[$count] := 0
		set_control_par(%track_0_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_0_table[$count])
		inc($count)
	end while
	
end function {}

function start_sequencer
	
	$play_btn := 1
	$seq_running := 1
	
	if ($sync_btn = 0 or ($sync_btn = 1 and $NI_TRANSPORT_RUNNING = 0))
		$sync_position := 0
		$step_counter := 0
		$tick_counter := -1
	else
		$sync_position := 1
	end if
	
	$first := 1
	
	$new_id := play_note(1,1,0,10)
	set_event_par($new_id,$EVENT_PAR_2,3)
	
end function {}

function stop_sequencer
	$play_btn := 0
	$seq_running := 0
	call clear_lauflicht
	
	$new_id := play_note(0,1,0,1000)
	set_event_par($new_id,$EVENT_PAR_2,3)
	
end function {}

function update_cell_grid

	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_1_table[$count]])
		set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_2_table[$count]])
		set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$count])
		set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$count]])
		set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_5_table[$count])
		set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_6_table[$count]])
		set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_7_table[$count])
		set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_8_table[$count]])
		inc($count)
	end while
	
	{get djembe 1 & 2 tap active state}
	
	$djembe_1_tap_active := 0
	$djembe_2_tap_active := 0
	
	$count := 0
	while ($count < $num_of_steps)
		if (%track_1_table[$count] > 0)
			$djembe_1_tap_active := 1
		end if
		
		if (%track_2_table[$count] > 0)
			$djembe_2_tap_active := 1
		end if
		
		inc($count)
	end while
	
end function {}

function update_beat_grid
	
	if ($beat_grid_btn = 1)
		
		$beat_grid := 4
		
		set_control_par_str(get_ui_id($beat_knob),$CONTROL_PAR_PICTURE,"dswa_groove_16_first")
		set_control_par_str(get_ui_id($step1_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_16_mid")
		set_control_par_str(get_ui_id($step2_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_16_mid")
		set_control_par_str(get_ui_id($step3_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_16_last")
		set_control_par_str(get_ui_id($inst_groove_bg),$CONTROL_PAR_PICTURE,"dswa_groove_16_bg")
	
		$gui_count := 1
		while ($gui_count < 4)
			set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_X,239 + ($gui_count*30) + (($beat_knob*9)/$MAX_SWING_AMOUNT))
			inc($gui_count)
		end while
	else
	
		$beat_grid := 3
		set_control_par_str(get_ui_id($beat_knob),$CONTROL_PAR_PICTURE,"dswa_groove_12_first")
		set_control_par_str(get_ui_id($step1_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_12_mid")
		set_control_par_str(get_ui_id($step2_delay_sld),$CONTROL_PAR_PICTURE,"dswa_groove_12_last")
		set_control_par_str(get_ui_id($inst_groove_bg),$CONTROL_PAR_PICTURE,"dswa_groove_12_bg")
	
		$gui_count := 1
		while ($gui_count < 4)
			set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_X,239 + ($gui_count*38) + (($beat_knob*13)/$MAX_SWING_AMOUNT))
			inc($gui_count)
		end while
	end if
	
	set_control_par(get_ui_id($note_bg),$CONTROL_PAR_PICTURE_STATE,$beat_grid_btn)
	
	$ticks_per_step := $TICKS_PER_BEAT/$beat_grid
	$num_of_steps := $beat_grid * $NUM_OF_BEATS

end function {}

function change_preset
	
	set_control_par_str(get_ui_id($preset_knob),$CONTROL_PAR_LABEL,$preset_knob+1)
	
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		%track_1_table[$count] := %track_1_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		%track_2_table[$count] := %track_2_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		%track_3_table[$count] := %track_3_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		%track_4_table[$count] := %track_4_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		%track_5_table[$count] := %track_5_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		%track_6_table[$count] := %track_6_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		%track_7_table[$count] := %track_7_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		%track_8_table[$count] := %track_8_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count]
		inc($count)
	end while
	
	call update_cell_grid
	
end function {}

function store_preset
	$count := 0
	while ($count < $MAX_NUM_OF_STEPS)
		%track_1_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_1_table[$count]
		%track_2_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_2_table[$count]
		%track_3_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_3_table[$count]
		%track_4_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_4_table[$count]
		%track_5_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_5_table[$count]
		%track_6_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_6_table[$count]
		%track_7_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_7_table[$count]
		%track_8_presets[($preset_knob * $MAX_NUM_OF_STEPS) + $count] := %track_8_table[$count]
		inc($count)
	end while
end function {}

function cell_click
	
	$clicked_cell_row := $cell_number / $MAX_NUM_OF_STEPS {zero based}
	$clicked_cell_step := $cell_number mod $MAX_NUM_OF_STEPS
	
	{message("Row: " & $clicked_cell_row+1 & " | Step: " & $clicked_cell_step)}

	select ($clicked_cell_row)
		
		case 0 {TRACK 1}
			if (get_control_par(%track_1_btn_ids[$clicked_cell_step],$CONTROL_PAR_KEY_ALT) = 1)
				
				{ALT Key pressed}
				select (%track_1_table[$clicked_cell_step])
					case 0
						%track_1_table[$clicked_cell_step] := 2
					case 1
						%track_1_table[$clicked_cell_step] := 2
					case 2
						%track_1_table[$clicked_cell_step] := 1
					case 3
						%track_1_table[$clicked_cell_step] := 2
				end select
			else	
				if (get_control_par(%track_1_btn_ids[$clicked_cell_step],$CONTROL_PAR_KEY_CONTROL) = 1)
					
					{Control Key pressed}
					select (%track_1_table[$clicked_cell_step])
						case 0
							%track_1_table[$clicked_cell_step] := 3
						case 1
							%track_1_table[$clicked_cell_step] := 3
						case 2
							%track_1_table[$clicked_cell_step] := 3
						case 3
							%track_1_table[$clicked_cell_step] := 1
					end select
				else
					{Normal Key pressed}
					if (%track_1_table[$clicked_cell_step] > 0)
						%track_1_table[$clicked_cell_step] := 0
					else
						%track_1_table[$clicked_cell_step] := 1
					end if
				end if
			end if
			
			set_control_par(%track_1_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_1_table[$clicked_cell_step]])
			set_control_par(%track_1_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
		
		case 1 {TRACK 2}
			if (get_control_par(%track_2_btn_ids[$clicked_cell_step],$CONTROL_PAR_KEY_ALT) = 1)
				
				{ALT Key pressed}
				select (%track_2_table[$clicked_cell_step])
					case 0
						%track_2_table[$clicked_cell_step] := 2
					case 1
						%track_2_table[$clicked_cell_step] := 2
					case 2
						%track_2_table[$clicked_cell_step] := 1
					case 3
						%track_2_table[$clicked_cell_step] := 2
				end select
			else	
				if (get_control_par(%track_2_btn_ids[$clicked_cell_step],$CONTROL_PAR_KEY_CONTROL) = 1)
					
					{Control Key pressed}
					select (%track_2_table[$clicked_cell_step])
						case 0
							%track_2_table[$clicked_cell_step] := 3
						case 1
							%track_2_table[$clicked_cell_step] := 3
						case 2
							%track_2_table[$clicked_cell_step] := 3
						case 3
							%track_2_table[$clicked_cell_step] := 1
					end select
				else
					{Normal Key pressed}
					if (%track_2_table[$clicked_cell_step] > 0)
						%track_2_table[$clicked_cell_step] := 0
					else
						%track_2_table[$clicked_cell_step] := 1
					end if
				end if
			end if
			
			set_control_par(%track_2_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_2_table[$clicked_cell_step]])
			set_control_par(%track_2_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
		
		case 2 {TRACK 3}
			if (%track_3_table[$clicked_cell_step] > 0)
				%track_3_table[$clicked_cell_step] := 0
			else
				%track_3_table[$clicked_cell_step] := 1
			end if
			set_control_par(%track_3_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$clicked_cell_step])
			set_control_par(%track_3_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
			
		case 3 {TRACK 4}
			if (get_control_par(%track_4_btn_ids[$clicked_cell_step],$CONTROL_PAR_KEY_ALT) = 1)
				select (%track_4_table[$clicked_cell_step])
					case 0
						%track_4_table[$clicked_cell_step] := 2
					case 1
						%track_4_table[$clicked_cell_step] := 2
					case 2
						%track_4_table[$clicked_cell_step] := 1
				end select
			else
				if (%track_4_table[$clicked_cell_step] > 0)
					%track_4_table[$clicked_cell_step] := 0
				else
					%track_4_table[$clicked_cell_step] := 1
				end if
			end if
			set_control_par(%track_4_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$clicked_cell_step]])
			set_control_par(%track_4_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
			
		case 4 {TRACK 5}
			if (%track_5_table[$clicked_cell_step] > 0)
				%track_5_table[$clicked_cell_step] := 0
			else
				%track_5_table[$clicked_cell_step] := 1
			end if
			set_control_par(%track_5_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%track_5_table[$clicked_cell_step])
			set_control_par(%track_5_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
		
		case 5 {TRACK 6}
			if (get_control_par(%track_6_btn_ids[$clicked_cell_step],$CONTROL_PAR_KEY_ALT) = 1)
				select (%track_6_table[$clicked_cell_step])
					case 0
						%track_6_table[$clicked_cell_step] := 2
					case 1
						%track_6_table[$clicked_cell_step] := 2
					case 2
						%track_6_table[$clicked_cell_step] := 1
				end select
			else
				if (%track_6_table[$clicked_cell_step] > 0)
					%track_6_table[$clicked_cell_step] := 0
				else
					%track_6_table[$clicked_cell_step] := 1
				end if
			end if
			set_control_par(%track_6_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_6_table[$clicked_cell_step]])
			set_control_par(%track_6_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
			
		case 6 {TRACK 7}
			if (%track_7_table[$clicked_cell_step] > 0)
				%track_7_table[$clicked_cell_step] := 0
			else
				%track_7_table[$clicked_cell_step] := 1
			end if
			set_control_par(%track_7_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%track_7_table[$clicked_cell_step])
			set_control_par(%track_7_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
		
		case 7 {TRACK 8}
			if (get_control_par(%track_8_btn_ids[$clicked_cell_step],$CONTROL_PAR_KEY_ALT) = 1)
				select (%track_8_table[$clicked_cell_step])
					case 0
						%track_8_table[$clicked_cell_step] := 2
					case 1
						%track_8_table[$clicked_cell_step] := 2
					case 2
						%track_8_table[$clicked_cell_step] := 1
				end select
			else
				if (%track_8_table[$clicked_cell_step] > 0)
					%track_8_table[$clicked_cell_step] := 0
				else
					%track_8_table[$clicked_cell_step] := 1
				end if
			end if
			set_control_par(%track_8_lbl_ids[$clicked_cell_step],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_8_table[$clicked_cell_step]])
			set_control_par(%track_8_btn_ids[$clicked_cell_step],$CONTROL_PAR_VALUE,0)
	end select
	
	{get djembe 1 & 2 tap active state}
	
	$djembe_1_tap_active := 0
	$djembe_2_tap_active := 0
	
	$count := 0
	while ($count < $num_of_steps)
		if (%track_1_table[$count] > 0)
			$djembe_1_tap_active := 1
		end if
		
		if (%track_2_table[$count] > 0)
			$djembe_2_tap_active := 1
		end if
		
		inc($count)
	end while
	
	call store_preset
	
	call update_midi_file
	
end function {}

function edit_instrument
	{reset menu to first entry}
	$count := 1
	while ($count < (num_elements(%edit_pattern_ids)-1))
		set_control_par(%edit_pattern_ids[$count],$CONTROL_PAR_VALUE,0)
		inc($count)
	end while
	
	select ($edit_menu_action)
	
	case 1{copy}
		select ($edited_instrument)
			case 1 {Djembe 1}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%edit_buffer_djembe[$count] := %track_1_table[$count]
					inc($count)
				end while
			case 2 {Djembe 2}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%edit_buffer_djembe[$count] := %track_2_table[$count]
					inc($count)
				end while
			case 3 {Kenkeni}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%edit_buffer_bell[$count] := %track_3_table[$count]
					%edit_buffer_dunun[$count] := %track_4_table[$count]
					inc($count)
				end while
			case 4 {Sangba}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%edit_buffer_bell[$count] := %track_5_table[$count]
					%edit_buffer_dunun[$count] := %track_6_table[$count]
					inc($count)
				end while
			case 5 {Dununba}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%edit_buffer_bell[$count] := %track_7_table[$count]
					%edit_buffer_dunun[$count] := %track_8_table[$count]
					inc($count)
				end while
		end select
	
	case 2 {paste}
		select ($edited_instrument)
			case 1 {Djembe 1}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_1_table[$count] := %edit_buffer_djembe[$count]
					set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_1_table[$count]])
					inc($count)
				end while
			case 2 {Djembe 2}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_2_table[$count] := %edit_buffer_djembe[$count]
					set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_2_table[$count]])
					inc($count)
				end while
			case 3 {Kenkeni}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_3_table[$count] := %edit_buffer_bell[$count]
					%track_4_table[$count] := %edit_buffer_dunun[$count]
					set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$count])
					set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$count]])
					inc($count)
				end while
			case 4 {Sangba}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_5_table[$count] := %edit_buffer_bell[$count]
					%track_6_table[$count] := %edit_buffer_dunun[$count]
					set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_5_table[$count])
					set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_6_table[$count]])
					inc($count)
				end while
			case 5 {Dununba}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_7_table[$count] := %edit_buffer_bell[$count]
					%track_8_table[$count] := %edit_buffer_dunun[$count]
					set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_7_table[$count])
					set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_8_table[$count]])
					inc($count)
				end while
		end select
	
	case 3 {clear}
		select ($edited_instrument)
			case 1 {Djembe 1}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_1_table[$count] := 0
					set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_1_table[$count]])
					inc($count)
				end while
			case 2 {Djembe 2}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_2_table[$count] := 0
					set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_2_table[$count]])
					inc($count)
				end while
			case 3 {Kenkeni}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_3_table[$count] := 0
					%track_4_table[$count] := 0
					set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$count])
					set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$count]])
					inc($count)
				end while
			case 4 {Sangba}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_5_table[$count] := 0
					%track_6_table[$count] := 0
					set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_5_table[$count])
					set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_6_table[$count]])
					inc($count)
				end while
			case 5 {Dununba}
				$count := 0
				while ($count < $MAX_NUM_OF_STEPS)
					%track_7_table[$count] := 0
					%track_8_table[$count] := 0
					set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_7_table[$count])
					set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_8_table[$count]])
					inc($count)
				end while
		end select
	
	case 4 {move forward}
		select ($edited_instrument)
			case 1 {Djembe 1}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_djembe[$count] := %track_1_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_1_table[$count] := %edit_buffer_djembe[($count+$num_of_steps-1) mod $num_of_steps]
					set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_1_table[$count]])
					inc($count)
				end while
			case 2 {Djembe 2}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_djembe[$count] := %track_2_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_2_table[$count] := %edit_buffer_djembe[($count+$num_of_steps-1) mod $num_of_steps]
					set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_2_table[$count]])
					inc($count)
				end while
			case 3 {Kenkeni}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_bell[$count] := %track_3_table[$count]
					%edit_buffer_dunun[$count] := %track_4_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_3_table[$count] := %edit_buffer_bell[($count+$num_of_steps-1) mod $num_of_steps]
					%track_4_table[$count] := %edit_buffer_dunun[($count+$num_of_steps-1) mod $num_of_steps]
					set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$count])
					set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$count]])
					inc($count)
				end while
			case 4 {Sangba}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_bell[$count] := %track_5_table[$count]
					%edit_buffer_dunun[$count] := %track_6_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_5_table[$count] := %edit_buffer_bell[($count+$num_of_steps-1) mod $num_of_steps]
					%track_6_table[$count] := %edit_buffer_dunun[($count+$num_of_steps-1) mod $num_of_steps]
					set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_5_table[$count])
					set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_6_table[$count]])
					inc($count)
				end while
			case 5 {Dununba}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_bell[$count] := %track_7_table[$count]
					%edit_buffer_dunun[$count] := %track_8_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_7_table[$count] := %edit_buffer_bell[($count+$num_of_steps-1) mod $num_of_steps]
					%track_8_table[$count] := %edit_buffer_dunun[($count+$num_of_steps-1) mod $num_of_steps]
					set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_7_table[$count])
					set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_8_table[$count]])
					inc($count)
				end while
		end select
	
	case 5 {move backward}
		select ($edited_instrument)
			case 1 {Djembe 1}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_djembe[$count] := %track_1_table[$count]
					inc($count)
				end while
				$count := 0
				while ($count < $num_of_steps)
					%track_1_table[$count] := %edit_buffer_djembe[($count+$num_of_steps+1) mod $num_of_steps]
					set_control_par(%track_1_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_1_table[$count]])
					inc($count)
				end while
			case 2 {Djembe 2}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_djembe[$count] := %track_2_table[$count]
					inc($count)
				end while
				$count := 0
				while ($count < $num_of_steps)
					%track_2_table[$count] := %edit_buffer_djembe[($count+$num_of_steps+1) mod $num_of_steps]
					set_control_par(%track_2_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_2_table[$count]])
					inc($count)
				end while
			case 3 {Kenkeni}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_bell[$count] := %track_3_table[$count]
					%edit_buffer_dunun[$count] := %track_4_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_3_table[$count] := %edit_buffer_bell[($count+$num_of_steps+1) mod $num_of_steps]
					%track_4_table[$count] := %edit_buffer_dunun[($count+$num_of_steps+1) mod $num_of_steps]
					set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$count])
					set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$count]])
					inc($count)
				end while
			case 4 {Sangba}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_bell[$count] := %track_5_table[$count]
					%edit_buffer_dunun[$count] := %track_6_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_5_table[$count] := %edit_buffer_bell[($count+$num_of_steps+1) mod $num_of_steps]
					%track_6_table[$count] := %edit_buffer_dunun[($count+$num_of_steps+1) mod $num_of_steps]
					set_control_par(%track_5_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_5_table[$count])
					set_control_par(%track_6_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_6_table[$count]])
					inc($count)
				end while
			case 5 {Dununba}
				$count := 0
				while ($count < $num_of_steps)
					%edit_buffer_bell[$count] := %track_7_table[$count]
					%edit_buffer_dunun[$count] := %track_8_table[$count]
					inc($count)
				end while
				
				$count := 0
				while ($count < $num_of_steps)
					%track_7_table[$count] := %edit_buffer_bell[($count+$num_of_steps+1) mod $num_of_steps]
					%track_8_table[$count] := %edit_buffer_dunun[($count+$num_of_steps+1) mod $num_of_steps]
					set_control_par(%track_7_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_7_table[$count])
					set_control_par(%track_8_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_8_table[$count]])
					inc($count)
				end while
		end select
		
		case 6 {input pattern}
			select ($edited_instrument)
				case 3 {Kenkeni}
				$count := 0
				while ($count < $num_of_steps)
					if ($beat_grid = 3)
						%track_3_table[$count] := %presets_triplet_bell[$count]
						%track_4_table[$count] := %presets_triplet_dunun[$count]
					else
						%track_3_table[$count] := %presets_sixteenth_bell[$count]
						%track_4_table[$count] := %presets_sixteenth_dunun[$count]
					end if
					set_control_par(%track_3_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%track_3_table[$count])
					set_control_par(%track_4_lbl_ids[$count],$CONTROL_PAR_PICTURE_STATE,%seq_icon_trans[%track_4_table[$count]])
					inc($count)
				end while
			end select	
	end select
	
	call store_preset
	
end function {}

function select_instrument
	
	$solo_djembe_btn := 0
	$djembe_1_btn := 0
	$djembe_2_btn := 0
	$kenkeni_btn := 0
	$sangba_btn := 0
	$dununba_btn := 0
	
	select ($selected_instrument)
		case 1 {djembe 1}
			$djembe_1_btn := 1
			
			$beat_knob := $track_1_beat_delay
			$step1_delay_sld := %track_1_step_delay[1]
			$step2_delay_sld := %track_1_step_delay[2]
			$step3_delay_sld := %track_1_step_delay[3]
			
			$inst_sld := %djembe_1_tap_vol[$djembe_1_menu]
			$tuning_sld := %djembe_1_tuning[$djembe_1_menu]
			set_control_par(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE_STATE,4)
			
		case 2 {djembe 2}
			$djembe_2_btn := 1
			
			$beat_knob := $track_2_beat_delay
			$step1_delay_sld := %track_2_step_delay[1]
			$step2_delay_sld := %track_2_step_delay[2]
			$step3_delay_sld := %track_2_step_delay[3]
			
			$inst_sld := %djembe_2_tap_vol[$djembe_2_menu]
			$tuning_sld := %djembe_2_tuning[$djembe_2_menu]
			set_control_par(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE_STATE,3)
		
		case 3 {kenkeni and bell}
			$kenkeni_btn := 1
			
			$beat_knob := $track_3_beat_delay
			$step1_delay_sld := %track_3_step_delay[1]
			$step2_delay_sld := %track_3_step_delay[2]
			$step3_delay_sld := %track_3_step_delay[3]
			
			$beat_knob := $track_4_beat_delay
			$step1_delay_sld := %track_4_step_delay[1]
			$step2_delay_sld := %track_4_step_delay[2]
			$step3_delay_sld := %track_4_step_delay[3]
			
			$tuning_sld := %kenkeni_tuning[$kenkeni_menu]
			$inst_sld := %bell_high_vol[$bell_high_menu]
			set_control_par(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE_STATE,2)
		
		case 4 {sangba and bell}
			$sangba_btn := 1
			
			$beat_knob := $track_5_beat_delay
			$step1_delay_sld := %track_5_step_delay[1]
			$step2_delay_sld := %track_5_step_delay[2]
			$step3_delay_sld := %track_5_step_delay[3]
			
			$beat_knob := $track_6_beat_delay
			$step1_delay_sld := %track_6_step_delay[1]
			$step2_delay_sld := %track_6_step_delay[2]
			$step3_delay_sld := %track_6_step_delay[3]
			
			$tuning_sld := %sangba_tuning[$sangba_menu]
			$inst_sld := %bell_mid_vol[$bell_mid_menu]
			set_control_par(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE_STATE,1)
		
		case 5 {dununba and bell}
			$dununba_btn := 1
			
			$beat_knob := $track_7_beat_delay
			$step1_delay_sld := %track_7_step_delay[1]
			$step2_delay_sld := %track_7_step_delay[2]
			$step3_delay_sld := %track_7_step_delay[3]
			
			$beat_knob := $track_8_beat_delay
			$step1_delay_sld := %track_8_step_delay[1]
			$step2_delay_sld := %track_8_step_delay[2]
			$step3_delay_sld := %track_8_step_delay[3]
			
			$tuning_sld := %dununba_tuning[$dununba_menu]
			$inst_sld := %bell_low_vol[$bell_low_menu]
			set_control_par(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE_STATE,0)
		
		case 6 {solo djembe}
			$solo_djembe_btn := 1
			$beat_knob := $solo_djembe_beat_delay
			$step1_delay_sld := %solo_djembe_step_delay[1]
			$step2_delay_sld := %solo_djembe_step_delay[2]
			$step3_delay_sld := %solo_djembe_step_delay[3]
			
			$tuning_sld := %solo_djembe_tuning[$solo_djembe_menu]
			set_control_par(get_ui_id($inst_cont_bg),$CONTROL_PAR_PICTURE_STATE,5)
			
	end select
		
	call show_instrument_properties
	
end function {}

function store_delay_settings
	
	select($selected_instrument)
	
		case 1 {djembe 1}
			$track_1_beat_delay := $beat_knob
			%track_1_step_delay[1] := $step1_delay_sld
			%track_1_step_delay[2] := $step2_delay_sld
			%track_1_step_delay[3] := $step3_delay_sld
			
			%djembe_1_tuning[$djembe_1_menu] := $tuning_sld
			%djembe_1_tap_vol[$djembe_1_menu] := $inst_sld
			
		case 2 {djembe 2}
			$track_2_beat_delay := $beat_knob
			%track_2_step_delay[1] := $step1_delay_sld
			%track_2_step_delay[2] := $step2_delay_sld
			%track_2_step_delay[3] := $step3_delay_sld
			
			%djembe_2_tuning[$djembe_2_menu] := $tuning_sld
			%djembe_2_tap_vol[$djembe_2_menu] := $inst_sld
			
		case 3 {kenkeni}
			$track_3_beat_delay := $beat_knob
			%track_3_step_delay[1] := $step1_delay_sld
			%track_3_step_delay[2] := $step2_delay_sld
			%track_3_step_delay[3] := $step3_delay_sld
			$track_4_beat_delay := $beat_knob
			%track_4_step_delay[1] := $step1_delay_sld
			%track_4_step_delay[2] := $step2_delay_sld
			%track_4_step_delay[3] := $step3_delay_sld
			
			%kenkeni_tuning[$kenkeni_menu] := $tuning_sld
			%bell_high_vol[$bell_high_menu] := $inst_sld
			
		case 4 {sangba}
			$track_5_beat_delay := $beat_knob
			%track_5_step_delay[1] := $step1_delay_sld
			%track_5_step_delay[2] := $step2_delay_sld
			%track_5_step_delay[3] := $step3_delay_sld
			$track_6_beat_delay := $beat_knob
			%track_6_step_delay[1] := $step1_delay_sld
			%track_6_step_delay[2] := $step2_delay_sld
			%track_6_step_delay[3] := $step3_delay_sld
			
			%sangba_tuning[$sangba_menu] := $tuning_sld
			%bell_mid_vol[$bell_mid_menu] := $inst_sld
			
		case 5 {dununba}
			$track_7_beat_delay := $beat_knob
			%track_7_step_delay[1] := $step1_delay_sld
			%track_7_step_delay[2] := $step2_delay_sld
			%track_7_step_delay[3] := $step3_delay_sld
			$track_8_beat_delay:= $beat_knob
			%track_8_step_delay[1] := $step1_delay_sld
			%track_8_step_delay[2] := $step2_delay_sld
			%track_8_step_delay[3] := $step3_delay_sld
			
			%dununba_tuning[$dununba_menu] := $tuning_sld
			%bell_low_vol[$bell_low_menu] := $inst_sld
			
		case 6 {solo djembe}
			$solo_djembe_beat_delay := $beat_knob
			%solo_djembe_step_delay[1] := $step1_delay_sld
			%solo_djembe_step_delay[2] := $step2_delay_sld
			%solo_djembe_step_delay[3] := $step3_delay_sld
			
			%solo_djembe_tuning[$solo_djembe_menu] := $tuning_sld
			%solo_djembe_decay[$solo_djembe_menu] := $inst_sld
	end select

end function {}

function create_phrase_note
	
	{get played hand and note}
	$played_hand := $phrase_hit_counter mod 2
	
	select ($played_articulation)
		case 1
			$played_note := $DJEMBE_BASS_NOTE  + ($played_hand*3)
		case 2
			$played_note := $DJEMBE_OPEN_NOTE  + ($played_hand*3)
		case 3
			$played_note := $DJEMBE_SLAP_NOTE  + ($played_hand*3) 
	end select
	
	{get played group}
	$played_instrument := $SOLO_DJEMBE_GRP_START + $solo_djembe_menu
	
	{get played velocity}
	$played_velocity := $phrase_velocity
	$played_velocity := $played_velocity + random(-$humanize_sld/5,$humanize_sld/5)
	
	if ($played_velocity > 127)
		$played_velocity := 127
	end if
	
	if ($played_velocity <= 0)
		$played_velocity := 1
	end if
	
	{randomize sample}
	if ($humanize_sld > 10)
		$played_note := $played_note + random(0,2)
	end if
	
	$new_id := play_note($played_note,$played_velocity,0,$step_duration)
	set_event_par($new_id,$EVENT_PAR_0,$wait_time)
	set_event_par($new_id,$EVENT_PAR_1,$played_instrument)
	set_event_par($new_id,$EVENT_PAR_2,2)
	inc($phrase_hit_counter)
	
end function {}

function create_seq_note
	
	select ($played_track)
		
		case 1 {DJEMBE 1}
			
			if ($intensity_sld < 63) {change to finger open and finger slap}
				
				
				
				select ($played_articulation)
					case 0
						$played_note := $DJEMBE_TAP_NOTE  + ($played_hand*3)
						$played_velocity := $base_velocity_1
						$played_vol := (%djembe_1_tap_vol[$djembe_1_menu] * ($DJEMBE_TAP_VOL_MAX - $DJEMBE_TAP_VOL_MIN) / 100) + $DJEMBE_TAP_VOL_MIN
					case 1
						$played_note := $DJEMBE_FINGER_OPEN_NOTE  + ($played_hand*3)
						$played_velocity := $base_velocity_1 + 60
					case 2
						$played_note := $DJEMBE_FINGER_SLAP_NOTE  + ($played_hand*3)
						$played_velocity := $base_velocity_1 + 60
					case 3
						$played_note := $DJEMBE_BASS_NOTE  + ($played_hand*3)
						$played_velocity := $base_velocity_1
				end select
				
			else
				
				$played_velocity := $base_velocity_1
				
				select ($played_articulation)
					case 0
						$played_note := $DJEMBE_TAP_NOTE  + ($played_hand*3)
						$played_vol := (%djembe_1_tap_vol[$djembe_1_menu] * ($DJEMBE_TAP_VOL_MAX - $DJEMBE_TAP_VOL_MIN) / 100) + $DJEMBE_TAP_VOL_MIN
					case 1
						$played_note := $DJEMBE_OPEN_NOTE  + ($played_hand*3)
					case 2
						$played_note := $DJEMBE_SLAP_NOTE  + ($played_hand*3)
					case 3
						$played_note := $DJEMBE_BASS_NOTE  + ($played_hand*3) 
				end select
			
			end if
			
			$played_instrument := $DJEMBE_1_GRP_START + $djembe_1_menu
		
		case 2 {DJEMBE 2}
			
			
			if ($intensity_sld < 63) {change to finger open and finger slap}
				
				
			
				select ($played_articulation)
					case 0
						$played_note := $DJEMBE_TAP_NOTE  + ($played_hand*3)
						$played_vol := (%djembe_2_tap_vol[$djembe_2_menu] * ($DJEMBE_TAP_VOL_MAX - $DJEMBE_TAP_VOL_MIN) / 100) + $DJEMBE_TAP_VOL_MIN
						$played_velocity := $base_velocity_2
					case 1
						$played_note := $DJEMBE_FINGER_OPEN_NOTE  + ($played_hand*3)
						$played_velocity := $base_velocity_2 + 60
					case 2
						$played_note := $DJEMBE_FINGER_SLAP_NOTE  + ($played_hand*3)
						$played_velocity := $base_velocity_2 + 60
					case 3
						$played_note := $DJEMBE_BASS_NOTE  + ($played_hand*3)
						$played_velocity := $base_velocity_2
				end select
				
			else
				
				$played_velocity := $base_velocity_2
				
				select ($played_articulation)
					case 0
						$played_note := $DJEMBE_TAP_NOTE  + ($played_hand*3)
						$played_vol := (%djembe_2_tap_vol[$djembe_2_menu] * ($DJEMBE_TAP_VOL_MAX - $DJEMBE_TAP_VOL_MIN) / 100) + $DJEMBE_TAP_VOL_MIN
					case 1
						$played_note := $DJEMBE_OPEN_NOTE  + ($played_hand*3)
					case 2
						$played_note := $DJEMBE_SLAP_NOTE  + ($played_hand*3)
					case 3
						$played_note := $DJEMBE_BASS_NOTE  + ($played_hand*3) 
				end select
			
			end if
			
			$played_instrument := $DJEMBE_2_GRP_START + $djembe_2_menu
		
		case 3 {BELL HIGH}
			
			$played_velocity := $base_velocity_3
			$played_note :=  $BELL_HIGH_NOTE
			$played_instrument := $BELL_HIGH_GRP_START + $bell_high_menu
		
		case 4 {KENKENI}
		
			$played_velocity := $base_velocity_4
			select ($played_articulation)
				case 1
					$played_note := $KENKENI_NOTE
				case 2
					$played_note := $KENKENI_MUTED_NOTE
			end select
			$played_instrument := $KENKENI_GRP_START + $kenkeni_menu
			
		case 5 {BELL MID}
			$played_velocity := $base_velocity_5
			$played_note :=  $BELL_MID_NOTE
			$played_instrument := $BELL_MID_GRP_START + $bell_mid_menu
		
		case 6 {SANGBA}
			
			$played_velocity := $base_velocity_6
			select ($played_articulation)
				case 1
					$played_note := $SANGBA_NOTE
				case 2
					$played_note := $SANGBA_MUTED_NOTE
			end select
			$played_instrument := $SANGBA_GRP_START + $sangba_menu
		
		case 7 {BELL LOW}
			
			$played_velocity := $base_velocity_7
			$played_note :=  $BELL_LOW_NOTE
			$played_instrument := $BELL_LOW_GRP_START + $bell_low_menu
		
		case 8 {DUNUNBA}
			
			$played_velocity := $base_velocity_8
			select ($played_articulation)
				case 1
					$played_note := $DUNUNBA_NOTE
				case 2
					$played_note := $DUNUNBA_MUTED_NOTE
			end select
			$played_instrument := $DUNUNBA_GRP_START + $dununba_menu
			
			 
			
	end select
	
	{set volume to zero for everything except djembe taps}
	if ($played_track > 2 or $played_articulation > 0)
		$played_vol := 0
	end if
	
	
	{randomize velocity}
	$played_velocity := $played_velocity + random(-$humanize_sld/5,$humanize_sld/5)
	
	if ($played_velocity > 127)
		$played_velocity := 127
	end if
	
	if ($played_velocity <= 0)
		$played_velocity := 1
	end if
	
	{randomize sample}
	if ($humanize_sld > 10)
		if ($played_track > 2)
			$played_note := $played_note + random(0,3)
		else
			$played_note := $played_note + random(0,2)
		end if
		{dunun and bell have four variations, djembe three}
	end if
	
	$new_id := play_note($played_note,$played_velocity,0,$step_duration)
	change_vol($new_id,$played_vol,0)
	set_event_par($new_id,$EVENT_PAR_0,$wait_time)
	set_event_par($new_id,$EVENT_PAR_1,$played_instrument)
	set_event_par($new_id,$EVENT_PAR_2,3)
	
end function {}

function tick_received_phrase
	
	{we have reached a step}
	if ($tick_counter = 0)
		
		$solo_step_delay := ($step_duration * (%solo_djembe_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($solo_djembe_beat_delay/100)/100) 
		$solo_step_delay := $solo_step_delay * ($swing_sld*100/100)/100
		
		{randomize times}
		
		$randomize_abs_time := $MAX_RANDOMIZE_ABS_TIME * ($humanize_sld*100/100)/100
		$solo_step_delay := $solo_step_delay + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		
		{SOLO DJEMBE PHRASES}
		if ($phrase_running = 1)
			
			if ($phrase_first = 1)
				
				{get wait time}
				if ($solo_step_delay < 0)
					$wait_time := 0
				else
					$wait_time := $solo_step_delay
				end if
				
				{get played articulation and play note}
				if ($beat_grid = 4)
					$played_articulation := %phrase_note_presets_16[$phrase_counter + (16 * $played_phrase)]
				else
					$played_articulation := %phrase_note_presets_12[$phrase_counter + (12 * $played_phrase)]
				end if
				
				if ($played_articulation > 0)
					if (in_range($played_articulation,1,3))
						call create_phrase_note
					else {create flam}
						select ($played_articulation)
							
							case 4
								$played_articulation := 1
								$wait_time := 0
								call create_phrase_note
								
								$played_articulation := 3
								$wait_time := random($FLAM_TIME_MIN * 1000,$FLAM_TIME_MAX * 1000)
								call create_phrase_note
							
							case 5
								$played_articulation := 2
								$wait_time := 0
								call create_phrase_note
								
								$played_articulation := 2
								$wait_time := random($FLAM_TIME_MIN * 1000,$FLAM_TIME_MAX * 1000)
								call create_phrase_note
							
							case 6
								$played_articulation := 3
								$wait_time := 0
								call create_phrase_note
								
								$played_articulation := 3
								$wait_time := random($FLAM_TIME_MIN * 1000,$FLAM_TIME_MAX * 1000)
								call create_phrase_note
						end select
					end if	
				end if
				
				{create rolls and special effects}
				if ($beat_grid = 4)
					if (%phrase_roll_presets_16[$phrase_counter + (16 * $played_phrase)] = 1) {32nd note}
						$wait_time := $wait_time + $step_duration/2
						call create_phrase_note
					end if
					
					if (%phrase_roll_presets_16[$phrase_counter + (16 * $played_phrase)] = 2) {3 against 2}
						$wait_time := $wait_time + (($step_duration*2)/3)
						call create_phrase_note
						$wait_time := $wait_time + (($step_duration*2)/3)
						call create_phrase_note
					end if
				
				else
					if (%phrase_roll_presets_12[$phrase_counter + (12 * $played_phrase)] = 1) {24th note}
						$wait_time := $wait_time + $step_duration/2
						call create_phrase_note
					end if
					
					if (%phrase_roll_presets_12[$phrase_counter + (12 * $played_phrase)] = 2) {4 against 3}
						$wait_time := $wait_time + (($step_duration*3)/4)
						call create_phrase_note
						$wait_time := $wait_time + (($step_duration*3)/4)
						call create_phrase_note
						$wait_time := $wait_time + (($step_duration*3)/4)
						call create_phrase_note
					end if
				end if
				
				{advance counter}
				inc($phrase_counter)
				
				
				$phrase_first := 0
				
			end if
			
			{get wait time}
			$wait_time := $step_duration + $solo_step_delay
			
			{get played articulation}
			if ($beat_grid = 4)
				$played_articulation := %phrase_note_presets_16[$phrase_counter + (16 * $played_phrase)]
			else
				$played_articulation := %phrase_note_presets_12[$phrase_counter + (12 * $played_phrase)]
			end if
			
			{play note}
			if ($played_articulation > 0)
			
				if (in_range($played_articulation,1,3))
					call create_phrase_note
				else 
					
					{create flam}
					select ($played_articulation)
							
						case 4
							$played_articulation := 1
							call create_phrase_note
							
							$played_articulation := 3
							$wait_time := $wait_time + random($FLAM_TIME_MIN * 1000,$FLAM_TIME_MAX * 1000)
							call create_phrase_note
						
						case 5
							$played_articulation := 2
							call create_phrase_note
							
							$played_articulation := 2
							$wait_time := $wait_time + random($FLAM_TIME_MIN * 1000,$FLAM_TIME_MAX * 1000)
							call create_phrase_note
						
						case 6
							$played_articulation := 3
							call create_phrase_note
							
							$played_articulation := 3
							$wait_time := $wait_time + random($FLAM_TIME_MIN * 1000,$FLAM_TIME_MAX * 1000)
							call create_phrase_note
					end select
				end if	
			end if
			
			{create rolls and special effects}
			if ($beat_grid = 4)
				if (%phrase_roll_presets_16[$phrase_counter + (16 * $played_phrase)] = 1) {32nd note}
					$wait_time := $wait_time + $step_duration/2
					call create_phrase_note
				end if
				
				if (%phrase_roll_presets_16[$phrase_counter + (16 * $played_phrase)] = 2) {3 against 2}
					$wait_time := $wait_time + (($step_duration*2)/3)
					call create_phrase_note
					$wait_time := $wait_time + (($step_duration*2)/3)
					call create_phrase_note
				end if
			
			else
				if (%phrase_roll_presets_12[$phrase_counter + (12 * $played_phrase)] = 1) {24th note}
					$wait_time := $wait_time + $step_duration/2
					call create_phrase_note
				end if
				
				if (%phrase_roll_presets_12[$phrase_counter + (12 * $played_phrase)] = 2) {4 against 3}
					$wait_time := $wait_time + (($step_duration*3)/4)
					call create_phrase_note
					$wait_time := $wait_time + (($step_duration*3)/4)
					call create_phrase_note
					$wait_time := $wait_time + (($step_duration*3)/4)
					call create_phrase_note
				end if
			end if
			
			{advance counter}
			inc($phrase_counter)
			
			{reset counter}
			if ($phrase_counter = 16 and $beat_grid = 4)
				$phrase_counter := 0
			end if
			if ($phrase_counter = 12  and $beat_grid = 3)
				$phrase_counter := 0
			end if
			
		end if
		
		
	end if
		
end function {}

function tick_received
	
	{get step counter}
	if ($sync_btn = 0 or $sync_position = 0)
		{advance counter}
		inc($tick_counter)
		if ($tick_counter >= $ticks_per_step)
			inc($step_counter)
			if ($step_counter >= $num_of_steps)
				$step_counter := 0
			end if
			$tick_counter := 0
		end if
	else
		{Host Tempo}
		if ($sync_position = 1)
			if ($NI_SONG_POSITION < 0)
				exit
			else
				$tick_counter := ($NI_SONG_POSITION/40) mod $ticks_per_step
				$step_counter := ($NI_SONG_POSITION/(960/$beat_grid)) mod $num_of_steps
			end if
		end if
	end if
	
	{get previous and next step counter and grid counter}
	$step_counter_previous := ($step_counter+$num_of_steps-1) mod $num_of_steps
	$step_counter_next := ($step_counter+$num_of_steps+1) mod $num_of_steps
	$grid_counter := $step_counter mod $beat_grid
	$grid_counter_next := $step_counter_next mod $beat_grid
	
	{lauflicht display}
	if ($grid_counter = 0)
		%track_0_table[$step_counter] := 2
	else
		%track_0_table[$step_counter] := 1
	end if
	%track_0_table[$step_counter_previous] := 0
	call change_lauflicht
	
	{we have reached a step}
	if ($tick_counter = 0)
	
		if ($sync_btn = 1)
			$step_duration := $DURATION_QUARTER/$beat_grid
		else
			$step_duration := ((60000000/($tempo_vedit/100))/$beat_grid)
		end if
		
		{get delay time for NEXT step}
		$step_delay_1 := ($step_duration * (%track_1_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_1_beat_delay/100)/100)
		$step_delay_2 := ($step_duration * (%track_2_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_2_beat_delay/100)/100)	
		$step_delay_3 := ($step_duration * (%track_3_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_3_beat_delay/100)/100) 	
		$step_delay_4 := ($step_duration * (%track_4_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_4_beat_delay/100)/100) 	
		$step_delay_5 := ($step_duration * (%track_5_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_5_beat_delay/100)/100) 	
		$step_delay_6 := ($step_duration * (%track_6_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_6_beat_delay/100)/100) 	
		$step_delay_7 := ($step_duration * (%track_7_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_7_beat_delay/100)/100) 	
		$step_delay_8 := ($step_duration * (%track_8_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($track_8_beat_delay/100)/100) 
		
		$solo_step_delay := ($step_duration * (%solo_djembe_step_delay[$grid_counter_next]/100)/100) + ($step_duration * ($solo_djembe_beat_delay/100)/100) 
		
		{scale swing time}
		$step_delay_1 := $step_delay_1 * ($swing_sld*100/100)/100
		$step_delay_2 := $step_delay_2 * ($swing_sld*100/100)/100
		$step_delay_3 := $step_delay_3 * ($swing_sld*100/100)/100
		$step_delay_4 := $step_delay_4 * ($swing_sld*100/100)/100
		$step_delay_5 := $step_delay_5 * ($swing_sld*100/100)/100
		$step_delay_6 := $step_delay_6 * ($swing_sld*100/100)/100
		$step_delay_7 := $step_delay_7 * ($swing_sld*100/100)/100
		$step_delay_8 := $step_delay_8 * ($swing_sld*100/100)/100
		
		$solo_step_delay := $solo_step_delay * ($swing_sld*100/100)/100
		
		{randomize times}
		
		$randomize_abs_time := $MAX_RANDOMIZE_ABS_TIME * ($humanize_sld*100/100)/100
		
		$step_delay_1 := $step_delay_1 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	
		$step_delay_2 := $step_delay_2 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		$step_delay_3 := $step_delay_3 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		$step_delay_4 := $step_delay_4 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		$step_delay_5 := $step_delay_5 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		$step_delay_6 := $step_delay_6 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		$step_delay_7 := $step_delay_7 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		$step_delay_8 := $step_delay_8 + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		
		$solo_step_delay := $solo_step_delay + random(-$randomize_abs_time*1000,$randomize_abs_time*1000)	 
		
		{TRACK 1 DJEMBE 1}
		if ((%track_1_table[$step_counter_next] > 0 or (%djembe_1_tap_vol[$djembe_1_menu] > 0 and $djembe_1_tap_active = 1)) and ($solo_key_counter = 0 or %solo_state[0] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_1
			$played_articulation := %track_1_table[$step_counter_next]
			$played_hand := $step_counter_next mod 2
			$played_track := 1
			call create_seq_note
		end if
		{TRACK 2 DJEMBE 2}
		if ((%track_2_table[$step_counter_next] > 0  or (%djembe_2_tap_vol[$djembe_2_menu] > 0 and $djembe_2_tap_active = 1)) and ($solo_key_counter = 0 or %solo_state[1] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_2
			$played_articulation := %track_2_table[$step_counter_next]
			$played_hand := $step_counter_next mod 2
			$played_track := 2
			call create_seq_note
		end if
		{TRACK 3 Bell HIGH}
		if (%track_3_table[$step_counter_next] > 0 and ($solo_key_counter = 0 or %solo_state[2] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_3
			$played_track := 3
			call create_seq_note
		end if
		{TRACK 4 KENKENI}
		if (%track_4_table[$step_counter_next] > 0 and ($solo_key_counter = 0 or %solo_state[2] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_4
			$played_articulation := %track_4_table[$step_counter_next]
			$played_track := 4
			call create_seq_note
		end if
		{TRACK 5 BELL MID}
		if (%track_5_table[$step_counter_next] > 0 and ($solo_key_counter = 0 or %solo_state[3] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_5
			$played_track := 5
			call create_seq_note
		end if
		{TRACK 6 SANGBA}
		if (%track_6_table[$step_counter_next] > 0 and ($solo_key_counter = 0 or %solo_state[3] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_6
			$played_articulation := %track_6_table[$step_counter_next]
			$played_track := 6
			call create_seq_note
		end if
		{TRACK 7 BELL LOW}
		if (%track_7_table[$step_counter_next] > 0 and ($solo_key_counter = 0 or %solo_state[4] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_7
			$played_track := 7
			call create_seq_note
		end if
		{TRACK 8 DUNUNBA}
		if (%track_8_table[$step_counter_next] > 0 and ($solo_key_counter = 0 or %solo_state[4] = 1) and $seq_running = 1) 
			$wait_time := $step_duration + $step_delay_8
			$played_articulation := %track_8_table[$step_counter_next]
			$played_track := 8
			call create_seq_note
		end if
		
		{SOLO DJEMBE PHRASES}
		call tick_received_phrase
			
		
		if ($first = 1) {the first triggered step must not have a negative wait time}
		
			{find out delay time for current step}
			$step_delay_1 := ($step_duration * (%track_1_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_1_beat_delay/100)/100)
			$step_delay_2 := ($step_duration * (%track_2_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_2_beat_delay/100)/100)
			$step_delay_3 := ($step_duration * (%track_3_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_3_beat_delay/100)/100)
			$step_delay_4 := ($step_duration * (%track_4_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_4_beat_delay/100)/100)
			$step_delay_5 := ($step_duration * (%track_5_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_5_beat_delay/100)/100)
			$step_delay_6 := ($step_duration * (%track_6_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_6_beat_delay/100)/100)
			$step_delay_7 := ($step_duration * (%track_7_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_7_beat_delay/100)/100)
			$step_delay_8 := ($step_duration * (%track_8_step_delay[$grid_counter]/100)/100) + ($step_duration * ($track_8_beat_delay/100)/100)
			
			$step_delay_1 := $step_delay_1 * ($swing_sld*100/100)/100
			$step_delay_2 := $step_delay_2 * ($swing_sld*100/100)/100
			$step_delay_3 := $step_delay_3 * ($swing_sld*100/100)/100
			$step_delay_4 := $step_delay_4 * ($swing_sld*100/100)/100
			$step_delay_5 := $step_delay_5 * ($swing_sld*100/100)/100
			$step_delay_6 := $step_delay_6 * ($swing_sld*100/100)/100
			$step_delay_7 := $step_delay_7 * ($swing_sld*100/100)/100
			$step_delay_8 := $step_delay_8 * ($swing_sld*100/100)/100
			
			$randomize_abs_time := $MAX_RANDOMIZE_ABS_TIME * ($humanize_sld*100/100)/100
			
			{TRACK 1 DJEMBE 1}
			if ((%track_1_table[$step_counter] > 0  or (%djembe_1_tap_vol[$djembe_1_menu] > 0 and $djembe_1_tap_active = 1)) and ($solo_key_counter = 0 or %solo_state[0] = 1) and $seq_running = 1)
				if ($step_delay_1 < 0)
					$step_delay_1 := 0
				end if
				$wait_time := $step_delay_1  + random(0,$randomize_abs_time*1000)
				$played_articulation := %track_1_table[$step_counter]
				$played_hand := $step_counter mod 2
				$played_track := 1
				call create_seq_note
			end if
			{TRACK 2 DJEMBE 2}
			if ((%track_2_table[$step_counter] > 0  or (%djembe_2_tap_vol[$djembe_2_menu] > 0 and $djembe_2_tap_active = 1)) and ($solo_key_counter = 0 or %solo_state[1] = 1) and $seq_running = 1)
				if ($step_delay_2 < 0)
					$step_delay_2 := 0
				end if
				$wait_time := $step_delay_2  + random(0,$randomize_abs_time*1000)
				$played_articulation := %track_2_table[$step_counter]
				$played_hand := $step_counter mod 2
				$played_track := 2
				call create_seq_note
			end if
			{TRACK 3 BELL HIGH}
			if (%track_3_table[$step_counter] > 0 and ($solo_key_counter = 0 or %solo_state[2] = 1) and $seq_running = 1)
				if ($step_delay_3 < 0)
					$step_delay_3 := 0
				end if
				$wait_time := $step_delay_3  + random(0,$randomize_abs_time*1000)
				$played_track := 3
				call create_seq_note
			end if
			{TRACK 4 KENKENI}
			if (%track_4_table[$step_counter] > 0 and ($solo_key_counter = 0 or %solo_state[2] = 1) and $seq_running = 1)
				if ($step_delay_4 < 0)
					$step_delay_4 := 0
				end if
				$wait_time := $step_delay_4  + random(0,$randomize_abs_time*1000)
				$played_articulation := %track_4_table[$step_counter]
				$played_track := 4
				call create_seq_note
			end if
			{TRACK 5 BELL MID}
			if (%track_5_table[$step_counter] > 0 and ($solo_key_counter = 0 or %solo_state[3] = 1) and $seq_running = 1)
				if ($step_delay_8 < 0)
					$step_delay_8 := 0
				end if
				$wait_time := $step_delay_5  + random(0,$randomize_abs_time*1000)
				$played_track := 5
				call create_seq_note
			end if
			{TRACK 6 SANGBA}
			if (%track_6_table[$step_counter] > 0 and ($solo_key_counter = 0 or %solo_state[3] = 1) and $seq_running = 1)
				if ($step_delay_6 < 0)
					$step_delay_6 := 0
				end if
				$wait_time := $step_delay_6  + random(0,$randomize_abs_time*1000)
				$played_articulation := %track_6_table[$step_counter]
				$played_track := 6
				call create_seq_note
			end if
			{TRACK 7 BELL LOW}
			if (%track_7_table[$step_counter] > 0 and ($solo_key_counter = 0 or %solo_state[4] = 1) and $seq_running = 1)
				if ($step_delay_7 < 0)
					$step_delay_7 := 0
				end if
				$wait_time := $step_delay_7  + random(0,$randomize_abs_time*1000)	
				$played_track := 7
				call create_seq_note
			end if
			{TRACK 8 DUNUNBA}
			if (%track_8_table[$step_counter] > 0 and ($solo_key_counter = 0 or %solo_state[4] = 1) and $seq_running = 1)
				if ($step_delay_8 < 0)
					$step_delay_8 := 0
				end if
				$wait_time := $step_delay_8  + random(0,$randomize_abs_time*1000)
				$played_articulation := %track_8_table[$step_counter]
				$played_track := 8
				call create_seq_note
			end if
		
			$first := 0
		
		end if
		
	end if
		
end function {}

{ function ui_callbacks_instrument_selection }

on ui_control ($djembe_1_btn)
	if ($djembe_1_btn = 1)
		$selected_instrument := 1
		call select_instrument
	else
		$selected_instrument := 0
		call hide_instrument_properties
	end if
end on
on ui_control ($djembe_2_btn)
	if ($djembe_2_btn = 1)
		$selected_instrument := 2
		call select_instrument
	else
		$selected_instrument := 0
		call hide_instrument_properties
	end if
end on
on ui_control ($kenkeni_btn)
	if ($kenkeni_btn = 1)
		$selected_instrument := 3
		call select_instrument
	else
		$selected_instrument := 0
		call hide_instrument_properties
	end if
end on
on ui_control ($sangba_btn)
	if ($sangba_btn = 1)
		$selected_instrument := 4
		call select_instrument
	else
		$selected_instrument := 0
		call hide_instrument_properties
	end if
end on
on ui_control ($dununba_btn)
	if ($dununba_btn = 1)
		$selected_instrument := 5
		call select_instrument
	else
		$selected_instrument := 0
		call hide_instrument_properties
	end if
end on
on ui_control ($solo_djembe_btn)
	if ($solo_djembe_btn = 1)
		$selected_instrument := 6
		call select_instrument
	else
		$selected_instrument := 0
		call hide_instrument_properties
	end if
end on

on ui_control ($inst_prop_close)
	$djembe_1_btn := 0
	$djembe_2_btn := 0
	$solo_djembe_btn := 0
	$kenkeni_btn := 0
	$sangba_btn := 0
	$dununba_btn := 0
	$selected_instrument := 0
	call hide_instrument_properties
end on

{function } {}

{ function ui_callbacks_edit_menus }

on ui_control ($edit_djembe_1_menu)
	$edited_instrument := 1
	$edit_menu_action := $edit_djembe_1_menu
	call edit_instrument
	call update_midi_file
end on
on ui_control ($edit_djembe_2_menu)
	$edited_instrument := 2
	$edit_menu_action := $edit_djembe_2_menu
	call edit_instrument
	call update_midi_file
end on
on ui_control ($edit_kenkeni_menu)
	$edit_menu_action := $edit_kenkeni_menu
	$edited_instrument := 3
	call edit_instrument
	call update_midi_file
end on
on ui_control ($edit_sangba_menu)
	$edit_menu_action := $edit_sangba_menu
	$edited_instrument := 4
	call edit_instrument
	call update_midi_file
end on
on ui_control ($edit_dununba_menu)
	$edit_menu_action := $edit_dununba_menu
	$edited_instrument := 5
	call edit_instrument
	call update_midi_file
end on

on ui_control ($edit_pattern_menu)
	
	select ($edit_pattern_menu)
		case 1{copy}
			$count := 0
			while ($count < $MAX_NUM_OF_STEPS)
				%edit_all_buffer_track_1[$count] := %track_1_table[$count]
				%edit_all_buffer_track_2[$count] := %track_2_table[$count]
				%edit_all_buffer_track_3[$count] := %track_3_table[$count]
				%edit_all_buffer_track_4[$count] := %track_4_table[$count]
				%edit_all_buffer_track_5[$count] := %track_5_table[$count]
				%edit_all_buffer_track_6[$count] := %track_6_table[$count]
				%edit_all_buffer_track_7[$count] := %track_7_table[$count]
				%edit_all_buffer_track_8[$count] := %track_8_table[$count]
				inc($count)
			end while
		
		case 2 {paste}
			$count := 0
			while ($count < $MAX_NUM_OF_STEPS)
				%track_1_table[$count] := %edit_all_buffer_track_1[$count]
				%track_2_table[$count] := %edit_all_buffer_track_2[$count]
				%track_3_table[$count] := %edit_all_buffer_track_3[$count]
				%track_4_table[$count] := %edit_all_buffer_track_4[$count]
				%track_5_table[$count] := %edit_all_buffer_track_5[$count]
				%track_6_table[$count] := %edit_all_buffer_track_6[$count]
				%track_7_table[$count] := %edit_all_buffer_track_7[$count]
				%track_8_table[$count] := %edit_all_buffer_track_8[$count]
				inc($count)
			end while
		
		case 3 {clear}
			$count := 0
			while ($count < $MAX_NUM_OF_STEPS)
				%track_1_table[$count] := 0
				%track_2_table[$count] := 0
				%track_3_table[$count] := 0
				%track_4_table[$count] := 0
				%track_5_table[$count] := 0
				%track_6_table[$count] := 0
				%track_7_table[$count] := 0
				%track_8_table[$count] := 0
				inc($count)
			end while
		
	end select
	
	$edit_pattern_menu := 0
	call update_cell_grid
	call store_preset
	call update_midi_file
end on

{function } {}

{ function ui_callbacks_various }

on ui_control ($swing_sld)
	set_control_par_str(get_ui_id($swing_sld),$CONTROL_PAR_LABEL,$swing_sld & " %")
	{event limiter for update midi file}
	$swing_sld_last_callback := $NI_CALLBACK_ID
	
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	
	if ($NI_CALLBACK_ID = $swing_sld_last_callback and $swing_sld # $swing_sld_last_value)
			  
		call update_midi_file
		
		$swing_sld_last_value := $swing_sld
		  
	end if
end on

on ui_control ($humanize_sld)
	set_control_par_str(get_ui_id($humanize_sld),$CONTROL_PAR_LABEL,$humanize_sld & " %")
	{event limiter for update midi file}
	$humanize_sld_last_callback := $NI_CALLBACK_ID
	
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	
	if ($NI_CALLBACK_ID = $humanize_sld_last_callback and $humanize_sld # $humanize_sld_last_value)
			  
		call update_midi_file
		
		$humanize_sld_last_value := $humanize_sld
		  
	end if
end on

on ui_control ($reverb_sld)
	if ($reverb_sld <= 50)
		{adjust rvb return of ambience}
		set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN,($reverb_sld * ($RVB_1_MAX - $RVB_1_MIN) / 50) + $RVB_1_MIN,-1,$RVB_1_SLOT_IDX,0)
		set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN,0,-1,$RVB_2_SLOT_IDX,$RVB_2_MIN)
	else
		{adjust rvb return of hall}
		set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN,(($reverb_sld - 51) * ($RVB_1_MIN - $RVB_1_MAX) / (80 - 51)) + $RVB_1_MAX,-1,$RVB_1_SLOT_IDX,0)
		set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN,(($reverb_sld - 51) * ($RVB_2_MAX - $RVB_2_MIN) / (100 - 51)) + $RVB_2_MIN,-1,$RVB_2_SLOT_IDX,0)
	end if
	
	if ($reverb_sld = 0)
		set_engine_par($ENGINE_PAR_SEND_EFFECT_BYPASS,1,-1,$RVB_1_SLOT_IDX,0)
		set_engine_par($ENGINE_PAR_SEND_EFFECT_BYPASS,1,-1,$RVB_2_SLOT_IDX,0)
	else
		set_engine_par($ENGINE_PAR_SEND_EFFECT_BYPASS,0,-1,$RVB_1_SLOT_IDX,0)
		set_engine_par($ENGINE_PAR_SEND_EFFECT_BYPASS,0,-1,$RVB_2_SLOT_IDX,0)
	end if
	
	set_control_par_str(get_ui_id($reverb_sld),$CONTROL_PAR_LABEL,$reverb_sld & " %")
	
end on

on ui_control ($edit_seq_btn)
	if ($edit_seq_btn = 1)
		call show_sequencer
	else
		call hide_sequencer
		call clear_lauflicht
	end if
	
end on

on ui_control ($beat_knob)
	call store_delay_settings
	if($beat_grid_btn = 1) {4}	
		$gui_count := 1
		while ($gui_count < 4)
			set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_X,239 + ($gui_count*30) + (($beat_knob*9)/$MAX_SWING_AMOUNT))
			inc($gui_count)
		end while
	else {3}
		$gui_count := 1
		while ($gui_count < 4)
			set_control_par(%inst_properties_ids[$gui_count],$CONTROL_PAR_POS_X,239 + ($gui_count*38) + (($beat_knob*13)/$MAX_SWING_AMOUNT))
			inc($gui_count)
		end while
	end if
	
	{event limiter for update midi file}
	$beat_sld_last_callback := $NI_CALLBACK_ID
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	if ($NI_CALLBACK_ID = $beat_sld_last_callback and $beat_knob # $beat_sld_last_value)
		call update_midi_file
		$beat_sld_last_value := $beat_knob
	end if
	
end on

on ui_control ($tuning_sld)
	call store_delay_settings
	
	select($selected_instrument)
		case 1 {djembe 1}
			
			if ($tuning_sld < 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - (-100)) * (500000 - $MIN_TUNING) / (-1 - (-100))) + $MIN_TUNING,$DJEMBE_1_GRP_START+$djembe_1_menu,-1,-1)
			end if
	
			if ($tuning_sld > 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - 1) * ($MAX_TUNING - 500000) / (100 - 1)) + 500000,$DJEMBE_1_GRP_START+$djembe_1_menu,-1,-1)
			end if
	
			if ($tuning_sld = 0)
				set_engine_par($ENGINE_PAR_TUNE,500000,$DJEMBE_1_GRP_START+$djembe_1_menu,-1,-1)
			end if
			
		case 2 {djembe 2}
			
			if ($tuning_sld < 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - (-100)) * (500000 - $MIN_TUNING) / (-1 - (-100))) + $MIN_TUNING,$DJEMBE_2_GRP_START+$djembe_2_menu,-1,-1)
			end if
	
			if ($tuning_sld > 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - 1) * ($MAX_TUNING - 500000) / (100 - 1)) + 500000,$DJEMBE_2_GRP_START+$djembe_2_menu,-1,-1)
			end if
	
			if ($tuning_sld = 0)
				set_engine_par($ENGINE_PAR_TUNE,500000,$DJEMBE_2_GRP_START+$djembe_2_menu,-1,-1)
			end if
			
		case 3 {kenkeni and bell}
			
			if ($tuning_sld < 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - (-100)) * (500000 - $MIN_TUNING) / (-1 - (-100))) + $MIN_TUNING,$KENKENI_GRP_START+$kenkeni_menu,-1,-1)
			end if
	
			if ($tuning_sld > 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - 1) * ($MAX_TUNING - 500000) / (100 - 1)) + 500000,$KENKENI_GRP_START+$kenkeni_menu,-1,-1)
			end if
	
			if ($tuning_sld = 0)
				set_engine_par($ENGINE_PAR_TUNE,500000,$KENKENI_GRP_START+$kenkeni_menu,-1,-1)
			end if
			
		case 4 {sangba and bell}
			
			if ($tuning_sld < 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - (-100)) * (500000 - $MIN_TUNING) / (-1 - (-100))) + $MIN_TUNING,$SANGBA_GRP_START+$sangba_menu,-1,-1)
			end if
	
			if ($tuning_sld > 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - 1) * ($MAX_TUNING - 500000) / (100 - 1)) + 500000,$SANGBA_GRP_START+$sangba_menu,-1,-1)
			end if
	
			if ($tuning_sld = 0)
				set_engine_par($ENGINE_PAR_TUNE,500000,$SANGBA_GRP_START+$sangba_menu,-1,-1)
			end if
			
		case 5 {dununba and bell}
			
			if ($tuning_sld < 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - (-100)) * (500000 - $MIN_TUNING) / (-1 - (-100))) + $MIN_TUNING,$DUNUNBA_GRP_START+$dununba_menu,-1,-1)
			end if
	
			if ($tuning_sld > 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - 1) * ($MAX_TUNING - 500000) / (100 - 1)) + 500000,$DUNUNBA_GRP_START+$dununba_menu,-1,-1)
			end if
	
			if ($tuning_sld = 0)
				set_engine_par($ENGINE_PAR_TUNE,500000,$DUNUNBA_GRP_START+$dununba_menu,-1,-1)
			end if
			
		case 6 {solo djembe}
			
			if ($tuning_sld < 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - (-100)) * (500000 - $MIN_TUNING) / (-1 - (-100))) + $MIN_TUNING,$SOLO_DJEMBE_GRP_START+$solo_djembe_menu,-1,-1)
			end if
	
			if ($tuning_sld > 0)
				set_engine_par($ENGINE_PAR_TUNE,(($tuning_sld - 1) * ($MAX_TUNING - 500000) / (100 - 1)) + 500000,$SOLO_DJEMBE_GRP_START+$solo_djembe_menu,-1,-1)
			end if
	
			if ($tuning_sld = 0)
				set_engine_par($ENGINE_PAR_TUNE,500000,$SOLO_DJEMBE_GRP_START+$solo_djembe_menu,-1,-1)
			end if
			
	end select
	
end on

on ui_control ($inst_sld)
	call store_delay_settings
	
	select($selected_instrument)
		
		case 1
		
			{event limiter for update midi file}
			$inst1_sld_last_callback := $NI_CALLBACK_ID
			wait($KNOB_ADJUSTMENT_TOLERANCE)
			if ($NI_CALLBACK_ID = $inst1_sld_last_callback and $inst_sld # $inst1_sld_last_value)
				call update_midi_file
				$inst1_sld_last_value := $inst_sld
			end if
			
		case 2
		
			{event limiter for update midi file}
			$inst2_sld_last_callback := $NI_CALLBACK_ID
			wait($KNOB_ADJUSTMENT_TOLERANCE)
			if ($NI_CALLBACK_ID = $inst2_sld_last_callback and $inst_sld # $inst2_sld_last_value)
				call update_midi_file
				$inst2_sld_last_value := $inst_sld
			end if
		
		case 3 {kenkeni and bell}
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_HIGH_GRP_START,$BELL_VOL_SLOT_IDX,-1)
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_HIGH_GRP_START + 1,$BELL_VOL_SLOT_IDX,-1)
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_HIGH_GRP_START + 2,$BELL_VOL_SLOT_IDX,-1)
		case 4 {sangba and bell}
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_MID_GRP_START,$BELL_VOL_SLOT_IDX,-1)
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_MID_GRP_START + 1,$BELL_VOL_SLOT_IDX,-1)
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_MID_GRP_START + 2,$BELL_VOL_SLOT_IDX,-1)
		case 5 {dununba and bell}
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_LOW_GRP_START,$BELL_VOL_SLOT_IDX,-1)
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_LOW_GRP_START + 1,$BELL_VOL_SLOT_IDX,-1)
			set_engine_par($ENGINE_PAR_INSERT_EFFECT_OUTPUT_GAIN,($inst_sld * (396480) / 100),$BELL_LOW_GRP_START + 2,$BELL_VOL_SLOT_IDX,-1)
		case 6 {solo djembe}
			set_engine_par($ENGINE_PAR_HOLD,($inst_sld * (750000 - 250000) / 100) + 250000,$SOLO_DJEMBE_GRP_START+$solo_djembe_menu,find_mod($SOLO_DJEMBE_GRP_START+$solo_djembe_menu,"ENV_AHDSR"),-1)
			
	end select
end on

on ui_control ($step1_delay_sld)
	call store_delay_settings
	{event limiter for update midi file}
	$step1_delay_sld_last_callback := $NI_CALLBACK_ID
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	if ($NI_CALLBACK_ID = $step1_delay_sld_last_callback and $step1_delay_sld # $step1_delay_sld_last_value)
		call update_midi_file
		$step1_delay_sld_last_value := $step1_delay_sld
	end if
end on

on ui_control ($step2_delay_sld)
	call store_delay_settings
	{event limiter for update midi file}
	$step2_delay_sld_last_callback := $NI_CALLBACK_ID
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	if ($NI_CALLBACK_ID = $step2_delay_sld_last_callback and $step2_delay_sld # $step2_delay_sld_last_value)
		call update_midi_file
		$step2_delay_sld_last_value := $step2_delay_sld
	end if
end on

on ui_control ($step3_delay_sld)
	call store_delay_settings
	{event limiter for update midi file}
	$step3_delay_sld_last_callback := $NI_CALLBACK_ID
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	if ($NI_CALLBACK_ID = $step3_delay_sld_last_callback and $step3_delay_sld # $step3_delay_sld_last_value)
		call update_midi_file
		$step3_delay_sld_last_value := $step3_delay_sld
	end if
end on

on ui_control ($trigger_btn)
	$trigger_notes := ($trigger_btn + 1) mod 2
	$trigger_host := $trigger_btn
end on

on ui_control ($preset_knob)
	call change_preset
	{event limiter for update midi file}
	$preset_sld_last_callback := $NI_CALLBACK_ID
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	if ($NI_CALLBACK_ID = $preset_sld_last_callback and $preset_knob # $preset_sld_last_value)
		call update_midi_file
		$preset_sld_last_value := $preset_knob
	end if
end on

on ui_control ($sync_btn)
	if ($sync_btn = 1) {host tempo}
		%tempo_check[0] := 0
		hide_part ($dimmed_arrows, $HIDE_PART_NOTHING)
		$gui_count := 0
		while($gui_count < 4)
			set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			inc($gui_count)
		end while
	else {own tempo}
		hide_part ($dimmed_arrows, $HIDE_WHOLE_CONTROL)
		$gui_count := 0
		while($gui_count < 4)
			set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
			inc($gui_count)
		end while
		if($tempo_drag_course > 99)
			set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_course/100)
			set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
		else
			set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
		end if
		set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course/10)-(($tempo_drag_course/100)*10))
		set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course)-(($tempo_drag_course/10)*10))
		set_control_par(get_ui_id($tempo_unit4),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine/10)
		set_control_par(get_ui_id($tempo_unit5),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine mod 10)
	end if
	
	{if sequence is running and and tempo sync is changed}
	if ($seq_running = 1 and $NI_TRANSPORT_RUNNING = 1)
		
		if ($sync_btn = 1)
			$sync_position := 1
		else
			$sync_position := 0
		end if	
		
		call clear_lauflicht
	end if
end on

on ui_control ($play_btn)
	if ($play_btn = 1)
		call start_sequencer
	else
		call stop_sequencer
	end if
end on

on ui_control ($tempo_drag_course)
	$tempo_vedit := ($tempo_drag_course*100) + $tempo_drag_fine
	if ($sync_btn = 0)
		change_listener_par($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
	end if
	{GUI}
	if($tempo_drag_course > 99)
		set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_course/100)
		set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
	else
		set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
	end if
	set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course/10)-(($tempo_drag_course/100)*10))
	set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course)-(($tempo_drag_course/10)*10))
end on

on ui_control ($tempo_drag_fine)
	$tempo_vedit := ($tempo_drag_course*100) + $tempo_drag_fine
	if ($sync_btn = 0)
		change_listener_par($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
	end if
	{GUI}
	set_control_par(get_ui_id($tempo_unit4),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine/10)
	set_control_par(get_ui_id($tempo_unit5),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine mod 10)
end on

on ui_control ($tempo_up)
	if(get_control_par(get_ui_id($tempo_up),$CONTROL_PAR_KEY_SHIFT) = 0)
		if($tempo_drag_course # 400)
			$tempo_drag_course := $tempo_drag_course + 1
			$tempo_vedit := ($tempo_drag_course*100) + $tempo_drag_fine
			if ($sync_btn = 0)
				change_listener_par($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
			end if
			{GUI}
			if($tempo_drag_course > 99)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_course/100)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
			else
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
			end if
			set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course/10)-(($tempo_drag_course/100)*10))
			set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course)-(($tempo_drag_course/10)*10))
		end if
	else
		if($tempo_drag_fine = 99)
			$tempo_drag_fine := 0
			$tempo_drag_course := $tempo_drag_course + 1
			{GUI}
			if($tempo_drag_course > 99)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_course/100)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
			else
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
			end if
			set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course/10)-(($tempo_drag_course/100)*10))
			set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course)-(($tempo_drag_course/10)*10))	
		else
			$tempo_drag_fine := $tempo_drag_fine + 1
		end if
		$tempo_vedit := ($tempo_drag_course*100) + $tempo_drag_fine
		if ($sync_btn = 0)
			change_listener_par($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
		end if
		{GUI}
		set_control_par(get_ui_id($tempo_unit4),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine/10)
		set_control_par(get_ui_id($tempo_unit5),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine mod 10)
	end if
end on

on ui_control ($tempo_down)
	if(get_control_par(get_ui_id($tempo_down),$CONTROL_PAR_KEY_SHIFT) = 0)
		if($tempo_drag_course # 10)
			$tempo_drag_course := $tempo_drag_course - 1
			$tempo_vedit := ($tempo_drag_course*100) + $tempo_drag_fine
			if ($sync_btn = 0)
				change_listener_par($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
			end if
			{GUI}
			if($tempo_drag_course > 99)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_course/100)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
			else
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
			end if
			set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course/10)-(($tempo_drag_course/100)*10))
			set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course)-(($tempo_drag_course/10)*10))
		end if
	else
		if($tempo_drag_fine = 0)
			$tempo_drag_fine := 99
			$tempo_drag_course := $tempo_drag_course - 1
			{GUI}
			if($tempo_drag_course > 99)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_course/100)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
			else
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
			end if
			set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course/10)-(($tempo_drag_course/100)*10))
			set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course)-(($tempo_drag_course/10)*10))	
		else
			$tempo_drag_fine := $tempo_drag_fine - 1
		end if
		$tempo_vedit := ($tempo_drag_course*100) + $tempo_drag_fine
		if ($sync_btn = 0)
			change_listener_par($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
		end if
		{GUI}
		set_control_par(get_ui_id($tempo_unit4),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine/10)
		set_control_par(get_ui_id($tempo_unit5),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine mod 10)
	end if
end on

on ui_control ($solo_djembe_menu)
	$tuning_sld := %solo_djembe_tuning[$solo_djembe_menu]
	$inst_sld := %solo_djembe_decay[$solo_djembe_menu]
	set_control_par(%drum_picture_id[0],$CONTROL_PAR_PICTURE_STATE,%djembe_reorder[$solo_djembe_menu])
	pgs_set_key_val(PIC_STATE,3,%djembe_reorder[$solo_djembe_menu])
end on

on ui_control ($djembe_1_menu)
	$tuning_sld := %djembe_1_tuning[$djembe_1_menu]
	$inst_sld := %djembe_1_tap_vol[$djembe_1_menu]
	set_control_par(%drum_picture_id[1],$CONTROL_PAR_PICTURE_STATE,%djembe_reorder[$djembe_1_menu])
	if($djembe_1_menu = 6)
		pgs_set_key_val(PIC_STATE,2,0)
	else
		pgs_set_key_val(PIC_STATE,2,1)
	end if
end on

on ui_control ($djembe_2_menu)
	$tuning_sld := %djembe_2_tuning[$djembe_2_menu]
	$inst_sld := %djembe_2_tap_vol[$djembe_2_menu]
	set_control_par(%drum_picture_id[2],$CONTROL_PAR_PICTURE_STATE,%djembe_reorder[$djembe_2_menu])
	if($djembe_2_menu = 6)
		pgs_set_key_val(PIC_STATE,1,0)
	else
		pgs_set_key_val(PIC_STATE,1,1)
	end if
end on

on ui_control ($kenkeni_menu)
	$tuning_sld := %kenkeni_tuning[$kenkeni_menu]
	set_control_par(%drum_picture_id[3],$CONTROL_PAR_PICTURE_STATE,%dunun_reorder[$kenkeni_menu])
end on

on ui_control ($sangba_menu)
	$tuning_sld := %sangba_tuning[$sangba_menu]
	set_control_par(%drum_picture_id[4],$CONTROL_PAR_PICTURE_STATE,%dunun_reorder[$sangba_menu])
end on

on ui_control ($dununba_menu)
	$tuning_sld := %dununba_tuning[$dununba_menu]
	set_control_par(%drum_picture_id[5],$CONTROL_PAR_PICTURE_STATE,%dunun_reorder[$dununba_menu])
	pgs_set_key_val(PIC_STATE,0,%dunun_reorder[$dununba_menu])
end on

on ui_control ($bell_high_menu)
	$inst_sld := %bell_high_vol[$bell_high_menu]
end on

on ui_control ($bell_mid_menu)
	$inst_sld := %bell_mid_vol[$bell_mid_menu]
end on

on ui_control ($bell_low_menu)
	$inst_sld := %bell_low_vol[$bell_low_menu]
end on

on ui_control ($intensity_sld)
	$base_velocity_1 := $intensity_sld
	$base_velocity_2 := $intensity_sld
	$base_velocity_3 := $intensity_sld
	$base_velocity_4 := $intensity_sld
	$base_velocity_5 := $intensity_sld
	$base_velocity_6 := $intensity_sld
	$base_velocity_7 := $intensity_sld
	$base_velocity_8 := $intensity_sld
	set_control_par_str(get_ui_id($intensity_sld),$CONTROL_PAR_LABEL,(($intensity_sld - 1) * 100 / (127 - 1)) & " %")
	
	{event limiter for update midi file}
	$intensity_sld_last_callback := $NI_CALLBACK_ID
	
	wait($KNOB_ADJUSTMENT_TOLERANCE)
	
	if ($NI_CALLBACK_ID = $intensity_sld_last_callback and $intensity_sld # $intensity_sld_last_value)
			  
		call update_midi_file
		
		$intensity_sld_last_value := $intensity_sld
		  
	end if
	
end on

on ui_control ($beat_grid_btn)
	
	call update_beat_grid
	call hide_sequencer
	call show_sequencer
	call update_midi_file
	
end on

on controller
	if ($CC_NUM = 64)
		if (%CC[64] > 64)
			$latch_notes := 1
		else
			call stop_sequencer
			$latch_notes := 0
			
		end if
	end if
	
	if($CC_NUM = $VCC_PITCH_BEND)
		if (%CC[$VCC_PITCH_BEND] > 0)
			$phrase_velocity := ((%CC[$VCC_PITCH_BEND] - 1) * (127 - $original_velocity_phrase) / (8191 - 1)) + $original_velocity_phrase
		else
			$phrase_velocity := ((%CC[$VCC_PITCH_BEND]) * (1 - $original_velocity_phrase) / (-8192)) + $original_velocity_phrase		
		end if
	end if
	
	
	if($CC_NUM = $VCC_MONO_AT)
		$phrase_velocity := ((%CC[$VCC_MONO_AT]) * (127 - $original_velocity_phrase) / (127)) + $original_velocity_phrase
	end if
	
end on

{function } {}

{ function on_listener }

on listener
	
	{START}
	if ($NI_SIGNAL_TYPE = $NI_SIGNAL_TRANSP_START and $trigger_notes = 0)
		call start_sequencer
	end if
	
	{STOP}
	if ($NI_SIGNAL_TYPE = $NI_SIGNAL_TRANSP_STOP and $trigger_notes = 0)
		call stop_sequencer
	end if
	
	{Own Tempo}
	if ($NI_SIGNAL_TYPE = $NI_SIGNAL_TIMER_MS and $sync_btn = 0 and ($seq_running = 1 or $phrase_running = 1))
		call tick_received
	end if
	
	{Host Tempo}
	if ($NI_SIGNAL_TYPE = $NI_SIGNAL_TIMER_BEAT and $sync_btn = 1 and ($seq_running = 1 or $phrase_running = 1))
		call tick_received
	end if
	
	{display host tempo}
	if ($NI_SIGNAL_TYPE = $NI_SIGNAL_TIMER_BEAT and $sync_btn = 1)
		%tempo_check[1] := $DURATION_QUARTER
		if(%tempo_check[0] # %tempo_check[1])
			
			$tempo_gui_helper1 := ms_to_ticks(62502)
			$tempo_gui_helper2 := ms_to_ticks(6250200) mod 100
			
			if (in_range($tempo_gui_helper1,157,400))
				dec($tempo_gui_helper2)
			end if
			
			if ($tempo_gui_helper2 >= 50)
				dec($tempo_gui_helper1)
			end if
			
			if($tempo_gui_helper1 > 99)
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_gui_helper1/100)
			else
				set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
			end if
			
			set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_gui_helper1/10)-(($tempo_gui_helper1/100)*10))
			set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_gui_helper1)-(($tempo_gui_helper1/10)*10))
			set_control_par(get_ui_id($tempo_unit4),$CONTROL_PAR_PICTURE_STATE,$tempo_gui_helper2/10)
			set_control_par(get_ui_id($tempo_unit5),$CONTROL_PAR_PICTURE_STATE,$tempo_gui_helper2 mod 10)
			
		end if
		%tempo_check[0] := %tempo_check[1]
	end if
	
end on

{function } {}

{ function on_note }

on note
	ignore_event($EVENT_ID)
	
	set_key_pressed($EVENT_NOTE,1)
	
	{Preset Keys}
	if (in_range($EVENT_NOTE,$PRESET_KEY_MIN,$PRESET_KEY_MAX))
		
		inc($preset_key_counter)
		$preset_knob := $EVENT_NOTE - $PRESET_KEY_MIN
		
		call change_preset
		call update_midi_file
		
		if ($trigger_notes = 1 and $seq_running = 0)
			call start_sequencer
			call tick_received
		end if
	end if
	
	{Solo Keys
	if ($EVENT_NOTE = 49 or $EVENT_NOTE = 51 or $EVENT_NOTE = 54 or $EVENT_NOTE = 56 or $EVENT_NOTE = 58)
		
		inc($solo_key_counter)
	
		select ($EVENT_NOTE)
			case 49
				%solo_state[0] := 1
			case 51
				%solo_state[1] := 1
			case 54
				%solo_state[2] := 1
			case 56
				%solo_state[3] := 1
			case 58
				%solo_state[4] := 1
		end select
	end if}
	
	
	{Dunun and Bells}
	if (in_range($EVENT_NOTE,$DUNUN_RANGE_MIN,$DUNUN_RANGE_MAX) and $EVENT_NOTE # 73 and $EVENT_NOTE # 75 and $EVENT_NOTE # 83)
		
		select ($EVENT_NOTE)
			case 72
				$played_instrument := $DUNUNBA_GRP_START + $dununba_menu
				inc($mute_count_dununba)
			case 74
				$played_instrument := $DUNUNBA_GRP_START + $dununba_menu
				inc($mute_count_dununba)
			case 76
				$played_instrument := $SANGBA_GRP_START + $sangba_menu
				inc($mute_count_sangba)
			case 77
				$played_instrument := $SANGBA_GRP_START + $sangba_menu
				inc($mute_count_sangba)
			case 78
				$played_instrument := $BELL_LOW_GRP_START + $bell_low_menu
				inc($mute_count_bell_low)
			case 79
				$played_instrument := $KENKENI_GRP_START + $kenkeni_menu
				inc($mute_count_kenkeni)
			case 80
				$played_instrument := $BELL_MID_GRP_START + $bell_mid_menu
				inc($mute_count_bell_mid)
			case 81
				$played_instrument := $KENKENI_GRP_START + $kenkeni_menu
				inc($mute_count_kenkeni)
			case 82
				$played_instrument := $BELL_HIGH_GRP_START + $bell_high_menu
				inc($mute_count_bell_high)
		end select
		
		$played_note := %note_mapping[$EVENT_NOTE - $DUNUN_RANGE_MIN]
		
		{randomize sample}
		if ($humanize_sld > 10)
			$played_note := $played_note + random(0,3)
		end if
		
		$played_velocity := $EVENT_VELOCITY
		
		$played_note_id := play_note($played_note,$played_velocity,0,-1)
		set_event_par($played_note_id,$EVENT_PAR_1,$played_instrument)
		set_event_par($played_note_id,$EVENT_PAR_2,1)
		set_event_par($played_note_id,$EVENT_PAR_3,2)
	end if
	
	{Djembe 1 and Djembe 2}
	if (in_range($EVENT_NOTE,$DJEMBE_RANGE_MIN,107))
		
		if (in_range($EVENT_NOTE,90,95) or in_range($EVENT_NOTE,102,107))
			$played_instrument := $DJEMBE_1_GRP_START + $djembe_1_menu
			inc($mute_count_djembe_1)
		else
			$played_instrument := $DJEMBE_2_GRP_START + $djembe_2_menu
			inc($mute_count_djembe_2)
		end if
		
		$played_note := %note_mapping[$EVENT_NOTE-72]
		
		{randomize sample}
		if ($humanize_sld > 10)
			$played_note := $played_note + random(0,2)
		end if
		
		$played_velocity := $EVENT_VELOCITY
		
		$played_note_id := play_note($played_note,$played_velocity,0,-1)
		set_event_par($played_note_id,$EVENT_PAR_1,$played_instrument)
		set_event_par($played_note_id,$EVENT_PAR_2,1)
		set_event_par($played_note_id,$EVENT_PAR_3,2)
	end if
	
	
	{Ensemble Hits: Db4 and Eb4}
	if ($EVENT_NOTE = 73 or $EVENT_NOTE = 75)
		
		$count := 0
		while ($count < 8)
			select ($count)
				case 0
					$played_instrument := $DUNUNBA_GRP_START + $dununba_menu
					if ($EVENT_NOTE = 73)
						$played_note := $DUNUNBA_NOTE
					else
						$played_note := $DUNUNBA_MUTED_NOTE
					end if
				case 1
					$played_instrument := $BELL_LOW_GRP_START + $bell_low_menu
					$played_note := $BELL_LOW_NOTE
				case 2
					$played_instrument := $SANGBA_GRP_START + $sangba_menu
					if ($EVENT_NOTE = 73)
						$played_note := $SANGBA_NOTE
					else
						$played_note := $SANGBA_MUTED_NOTE
					end if
				case 3
					$played_instrument := $BELL_MID_GRP_START + $bell_mid_menu
					$played_note := $BELL_MID_NOTE
				case 4
					$played_instrument := $KENKENI_GRP_START + $kenkeni_menu
					if ($EVENT_NOTE = 73)
						$played_note := $KENKENI_NOTE
					else
						$played_note := $KENKENI_MUTED_NOTE
					end if
				case 5
					$played_instrument := $BELL_HIGH_GRP_START + $bell_high_menu
						$played_note := $BELL_HIGH_NOTE
				case 6
					$played_instrument := $DJEMBE_2_GRP_START + $djembe_2_menu
					if ($EVENT_NOTE = 73)
						$played_note := $DJEMBE_BASS_NOTE
					else
						$played_note := $DJEMBE_SLAP_NOTE
					end if
				case 7
					$played_instrument := $DJEMBE_1_GRP_START + $djembe_1_menu
					if ($EVENT_NOTE = 73)
						$played_note := $DJEMBE_BASS_NOTE
					else
						$played_note := $DJEMBE_SLAP_NOTE
					end if
			end select
			
			$randomize_abs_time := $MAX_RANDOMIZE_ABS_TIME
			$wait_time := random(0,$randomize_abs_time*3000)	
			
			{get velocity}
			$played_velocity := $EVENT_VELOCITY
			$played_velocity := $played_velocity + random(-$humanize_sld/5,$humanize_sld/5)
			
			if ($played_velocity > 127)
				$played_velocity := 127
			end if
			
			if ($played_velocity <= 0)
				$played_velocity := 1
			end if
	
			{randomize sample}
			if ($humanize_sld > 10)
				if ($count  < 6)
					$played_note := $played_note + random(0,2)
				else
					$played_note := $played_note + random(0,3)
				end if
			end if
			
			
			$played_note_id := play_note($played_note,$played_velocity,0,-1)
			set_event_par($played_note_id,$EVENT_PAR_0,$wait_time)
			set_event_par($played_note_id,$EVENT_PAR_1,$played_instrument)
			set_event_par($played_note_id,$EVENT_PAR_2,1)
			
			set_event_mark($played_note_id,$MARK_1)
			
			set_event_par($played_note_id,$EVENT_PAR_3,2)
			
			inc($count)
		
		end while
	
	end if	
	
	{Solo Djembe Single Hits}
	if (in_range($EVENT_NOTE,$SOLO_DJEMBE_RANGE_MIN,$SOLO_DJEMBE_RANGE_MIN+5)) 
		
		inc($mute_count_solo_djembe)
		
		$played_instrument := $SOLO_DJEMBE_GRP_START + $solo_djembe_menu
		
		$played_note := %solo_note_mapping[$EVENT_NOTE-$SOLO_DJEMBE_RANGE_MIN]
		
		{randomize sample}
		if ($humanize_sld > 10)
			$played_note := $played_note + random(0,2)
		end if
		
		$played_velocity := $EVENT_VELOCITY
		
		$played_note_id := play_note($played_note,$played_velocity,0,-1)
		set_event_par($played_note_id,$EVENT_PAR_1,$played_instrument)
		set_event_par($played_note_id,$EVENT_PAR_2,1)
		set_event_par($played_note_id,$EVENT_PAR_3,2)
	end if
	
	{Solo Djembe Flams}
	if (in_range($EVENT_NOTE,$SOLO_DJEMBE_RANGE_MAX-5,$SOLO_DJEMBE_RANGE_MAX))
		
		inc($mute_count_solo_djembe)
		
		$played_instrument := $SOLO_DJEMBE_GRP_START + $solo_djembe_menu
		
		{play first note}
		$played_note := %solo_note_mapping[$EVENT_NOTE - 66]
		
		{randomize sample}
		if ($humanize_sld > 10)
			$played_note := $played_note + random(0,2)
		end if
		
		$played_velocity := $EVENT_VELOCITY - 30
		
		if ($played_velocity < 1)
			$played_velocity := 1
		end if
		
		$played_note_id := play_note($played_note,$played_velocity,0,-1)
		set_event_mark($played_note_id,$MARK_2)
		set_event_par($played_note_id,$EVENT_PAR_0,0)
		set_event_par($played_note_id,$EVENT_PAR_1,$played_instrument)
		set_event_par($played_note_id,$EVENT_PAR_2,1)
		set_event_par($played_note_id,$EVENT_PAR_3,2)
		
		
		{play second note}
		$played_note := %solo_flam_mapping[$EVENT_NOTE - 66]
		
		{randomize sample}
		if ($humanize_sld > 10)
			$played_note := $played_note + random(0,2)
		end if
		
		$played_velocity := $EVENT_VELOCITY
		
		
		{get wait time}
		$wait_time := random($FLAM_TIME_MIN * 1000,$FLAM_TIME_MAX * 1000)
		
		$played_note_id := play_note($played_note,$played_velocity,0,-1)
		set_event_mark($played_note_id,$MARK_2)
		set_event_par($played_note_id,$EVENT_PAR_0,$wait_time)
		set_event_par($played_note_id,$EVENT_PAR_1,$played_instrument)
		set_event_par($played_note_id,$EVENT_PAR_2,1)
		set_event_par($played_note_id,$EVENT_PAR_3,2)
		
	end if
	
	
	
	{Solo Djembe Phrases}
	if (in_range($EVENT_NOTE,$PHRASE_RANGE_MIN,$PHRASE_RANGE_MAX))
		
		inc($phrase_key_counter)
		
		if ($phrase_running = 0)
				$played_phrase := $EVENT_NOTE - $PHRASE_RANGE_MIN
			end if
		
		if ($seq_running = 0 and $phrase_running = 0)
			
			$sync_position := 0
			$step_counter := 0
			$tick_counter := -1			
		
		end if
		
		if ($phrase_running = 0)
		
			$phrase_counter := 0
			$phrase_hit_counter := random(0,1)
			
			$phrase_velocity := $EVENT_VELOCITY
			$original_velocity_phrase := $EVENT_VELOCITY
			
			$phrase_first := 1
			$phrase_running := 1
			
			$new_id := play_note(1,1,0,10)
			set_event_par($new_id,$EVENT_PAR_2,2)
			
			if ($seq_running = 1) {if pattern sequencer is running, play first phrase hit}
				call tick_received_phrase
			end if
		end if
	end if
	
end on

{function } {}

{ function on_release }

on release
	
	
	if (get_event_par($EVENT_ID,$EVENT_PAR_SOURCE) = -1) {if from outside}
		
		set_key_pressed($EVENT_NOTE,0)
		
		{Preset Keys}
		ignore_event($EVENT_ID)
		
		if (in_range($EVENT_NOTE,$PRESET_KEY_MIN,$PRESET_KEY_MAX))
			
			dec($preset_key_counter)
			if ($trigger_notes = 1 and $seq_running = 1 and $preset_key_counter = 0 and $latch_notes = 0)
				call stop_sequencer
			end if
			
		end if
		
		{Mute Keys}
		
		{Dununba}
		if ($EVENT_NOTE = 72 or $EVENT_NOTE = 74)
			dec($mute_count_dununba)
			if ($mute_count_dununba = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1) 
			end if
		end if
		
		{Sangba}
		if ($EVENT_NOTE = 76 or $EVENT_NOTE = 77)
			dec($mute_count_sangba)
			if ($mute_count_sangba = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1)
			end if
		end if
		
		{Kenkeni}
		if ($EVENT_NOTE = 79 or $EVENT_NOTE = 81)
			dec($mute_count_kenkeni)
			if ($mute_count_kenkeni = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1)
			end if
		end if
		
		{Bell Low}
		if ($EVENT_NOTE = 78)
			dec($mute_count_bell_low)
			if ($mute_count_bell_low = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1)
			end if
		end if
		
		{Bell Mid}
		if ($EVENT_NOTE = 80)
			dec($mute_count_bell_mid)
			if ($mute_count_bell_mid = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1)
			end if
		end if
		
		{Bell Hi}
		if ($EVENT_NOTE = 82)
			dec($mute_count_bell_high)
			if ($mute_count_bell_high = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1)
			end if
		end if
		
		{Djembe 2}
		if (in_range($EVENT_NOTE,$DJEMBE_RANGE_MIN,$DJEMBE_RANGE_MIN+5) or in_range($EVENT_NOTE,96,101))
			dec($mute_count_djembe_2)
			if ($mute_count_djembe_2 = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1)
			end if
		end if
		
		{Djembe 1}
		if (in_range($EVENT_NOTE,$DJEMBE_RANGE_MAX-5,$DJEMBE_RANGE_MAX) or in_range($EVENT_NOTE,102,107))
			dec($mute_count_djembe_1)
			if ($mute_count_djembe_1 = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1)
			end if
		end if
		
		{Ensemble Hits}
		if ($EVENT_NOTE = 73 or $EVENT_NOTE = 75)
			set_event_par(by_marks($MARK_1),$EVENT_PAR_3,1) 
		end if
		
		{Single Hits}
		if (in_range($EVENT_NOTE,$SOLO_DJEMBE_RANGE_MIN,$SOLO_DJEMBE_RANGE_MIN+5))
			dec($mute_count_solo_djembe)
			if ($mute_count_solo_djembe = 0)
				set_event_par($played_note_id,$EVENT_PAR_3,1) {means, event from seq should can be played}
			end if
		end if
		
		{Flams}
		if (in_range($EVENT_NOTE,$SOLO_DJEMBE_RANGE_MAX-5,$SOLO_DJEMBE_RANGE_MAX))
			dec($mute_count_solo_djembe)
			if ($mute_count_solo_djembe = 0)
				set_event_par(by_marks($MARK_2),$EVENT_PAR_3,1) {means, event from seq should can be played}
			end if
		end if
		
		
		{Phrases}
		if (in_range($EVENT_NOTE,$PHRASE_RANGE_MIN,$PHRASE_RANGE_MAX))
			
			dec($phrase_key_counter)
			if ($phrase_running = 1 and $phrase_key_counter = 0)
				$new_id := play_note(0,1,0,1000)
				$phrase_running := 0
				set_event_par($new_id,$EVENT_PAR_2,2)
			end if
		end if
		
		
		
		
		
		{Solo Keys}
		
		{if ($EVENT_NOTE = 49 or $EVENT_NOTE = 51 or $EVENT_NOTE = 54 or $EVENT_NOTE = 56 or $EVENT_NOTE = 58)
			
			dec($solo_key_counter)
			
			select ($EVENT_NOTE)
				case 49
					%solo_state[0] := 0
				case 51
					%solo_state[1] := 0
				case 54
					%solo_state[2] := 0
				case 56
					%solo_state[3] := 0
				case 58
					%solo_state[4] := 0
			end select
		end if}
		
	end if
	
end on

{function } {}

{ function ui_callbacks_cell }
{START CELL UI CALLBACKS}
{TRACK 1}
on ui_control ($track_1_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 0
	call cell_click
end on
on ui_control ($track_1_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 1
	call cell_click
end on
on ui_control ($track_1_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 2
	call cell_click
end on
on ui_control ($track_1_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 3
	call cell_click
end on
on ui_control ($track_1_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 4
	call cell_click
end on
on ui_control ($track_1_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 5
	call cell_click
end on
on ui_control ($track_1_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 6
	call cell_click
end on
on ui_control ($track_1_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 7
	call cell_click
end on
on ui_control ($track_1_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 8
	call cell_click
end on
on ui_control ($track_1_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 9
	call cell_click
end on
on ui_control ($track_1_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 10
	call cell_click
end on
on ui_control ($track_1_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 11
	call cell_click
end on
on ui_control ($track_1_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 12
	call cell_click
end on
on ui_control ($track_1_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 13
	call cell_click
end on
on ui_control ($track_1_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 14
	call cell_click
end on
on ui_control ($track_1_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_1_idx + 15
	call cell_click
end on

{TRACK 2}
on ui_control ($track_2_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 0
	call cell_click
end on
on ui_control ($track_2_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 1
	call cell_click
end on
on ui_control ($track_2_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 2
	call cell_click
end on
on ui_control ($track_2_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 3
	call cell_click
end on
on ui_control ($track_2_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 4
	call cell_click
end on
on ui_control ($track_2_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 5
	call cell_click
end on
on ui_control ($track_2_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 6
	call cell_click
end on
on ui_control ($track_2_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 7
	call cell_click
end on
on ui_control ($track_2_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 8
	call cell_click
end on
on ui_control ($track_2_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 9
	call cell_click
end on
on ui_control ($track_2_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 10
	call cell_click
end on
on ui_control ($track_2_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 11
	call cell_click
end on
on ui_control ($track_2_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 12
	call cell_click
end on
on ui_control ($track_2_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 13
	call cell_click
end on
on ui_control ($track_2_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 14
	call cell_click
end on
on ui_control ($track_2_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_2_idx + 15
	call cell_click
end on

{TRACK 3}
on ui_control ($track_3_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 0
	call cell_click
end on
on ui_control ($track_3_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 1
	call cell_click
end on
on ui_control ($track_3_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 2
	call cell_click
end on
on ui_control ($track_3_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 3
	call cell_click
end on
on ui_control ($track_3_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 4
	call cell_click
end on
on ui_control ($track_3_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 5
	call cell_click
end on
on ui_control ($track_3_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 6
	call cell_click
end on
on ui_control ($track_3_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 7
	call cell_click
end on
on ui_control ($track_3_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 8
	call cell_click
end on
on ui_control ($track_3_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 9
	call cell_click
end on
on ui_control ($track_3_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 10
	call cell_click
end on
on ui_control ($track_3_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 11
	call cell_click
end on
on ui_control ($track_3_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 12
	call cell_click
end on
on ui_control ($track_3_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 13
	call cell_click
end on
on ui_control ($track_3_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 14
	call cell_click
end on
on ui_control ($track_3_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_3_idx + 15
	call cell_click
end on

{TRACK 4}
on ui_control ($track_4_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 0
	call cell_click
end on
on ui_control ($track_4_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 1
	call cell_click
end on
on ui_control ($track_4_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 2
	call cell_click
end on
on ui_control ($track_4_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 3
	call cell_click
end on
on ui_control ($track_4_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 4
	call cell_click
end on
on ui_control ($track_4_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 5
	call cell_click
end on
on ui_control ($track_4_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 6
	call cell_click
end on
on ui_control ($track_4_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 7
	call cell_click
end on
on ui_control ($track_4_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 8
	call cell_click
end on
on ui_control ($track_4_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 9
	call cell_click
end on
on ui_control ($track_4_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 10
	call cell_click
end on
on ui_control ($track_4_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 11
	call cell_click
end on
on ui_control ($track_4_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 12
	call cell_click
end on
on ui_control ($track_4_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 13
	call cell_click
end on
on ui_control ($track_4_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 14
	call cell_click
end on
on ui_control ($track_4_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_4_idx + 15
	call cell_click
end on

{TRACK 5}
on ui_control ($track_5_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 0
	call cell_click
end on
on ui_control ($track_5_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 1
	call cell_click
end on
on ui_control ($track_5_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 2
	call cell_click
end on
on ui_control ($track_5_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 3
	call cell_click
end on
on ui_control ($track_5_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 4
	call cell_click
end on
on ui_control ($track_5_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 5
	call cell_click
end on
on ui_control ($track_5_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 6
	call cell_click
end on
on ui_control ($track_5_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 7
	call cell_click
end on
on ui_control ($track_5_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 8
	call cell_click
end on
on ui_control ($track_5_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 9
	call cell_click
end on
on ui_control ($track_5_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 10
	call cell_click
end on
on ui_control ($track_5_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 11
	call cell_click
end on
on ui_control ($track_5_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 12
	call cell_click
end on
on ui_control ($track_5_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 13
	call cell_click
end on
on ui_control ($track_5_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 14
	call cell_click
end on
on ui_control ($track_5_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_5_idx + 15
	call cell_click
end on

{TRACK 6}
on ui_control ($track_6_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 0
	call cell_click
end on
on ui_control ($track_6_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 1
	call cell_click
end on
on ui_control ($track_6_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 2
	call cell_click
end on
on ui_control ($track_6_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 3
	call cell_click
end on
on ui_control ($track_6_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 4
	call cell_click
end on
on ui_control ($track_6_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 5
	call cell_click
end on
on ui_control ($track_6_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 6
	call cell_click
end on
on ui_control ($track_6_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 7
	call cell_click
end on
on ui_control ($track_6_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 8
	call cell_click
end on
on ui_control ($track_6_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 9
	call cell_click
end on
on ui_control ($track_6_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 10
	call cell_click
end on
on ui_control ($track_6_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 11
	call cell_click
end on
on ui_control ($track_6_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 12
	call cell_click
end on
on ui_control ($track_6_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 13
	call cell_click
end on
on ui_control ($track_6_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 14
	call cell_click
end on
on ui_control ($track_6_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_6_idx + 15
	call cell_click
end on

{TRACK 7}
on ui_control ($track_7_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 0
	call cell_click
end on
on ui_control ($track_7_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 1
	call cell_click
end on
on ui_control ($track_7_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 2
	call cell_click
end on
on ui_control ($track_7_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 3
	call cell_click
end on
on ui_control ($track_7_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 4
	call cell_click
end on
on ui_control ($track_7_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 5
	call cell_click
end on
on ui_control ($track_7_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 6
	call cell_click
end on
on ui_control ($track_7_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 7
	call cell_click
end on
on ui_control ($track_7_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 8
	call cell_click
end on
on ui_control ($track_7_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 9
	call cell_click
end on
on ui_control ($track_7_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 10
	call cell_click
end on
on ui_control ($track_7_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 11
	call cell_click
end on
on ui_control ($track_7_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 12
	call cell_click
end on
on ui_control ($track_7_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 13
	call cell_click
end on
on ui_control ($track_7_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 14
	call cell_click
end on
on ui_control ($track_7_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_7_idx + 15
	call cell_click
end on

{TRACK 8}
on ui_control ($track_8_step0_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 0
	call cell_click
end on  
on ui_control ($track_8_step1_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 1
	call cell_click
end on
on ui_control ($track_8_step2_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 2
	call cell_click
end on
on ui_control ($track_8_step3_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 3
	call cell_click
end on
on ui_control ($track_8_step4_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 4
	call cell_click
end on
on ui_control ($track_8_step5_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 5
	call cell_click
end on
on ui_control ($track_8_step6_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 6
	call cell_click
end on
on ui_control ($track_8_step7_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 7
	call cell_click
end on
on ui_control ($track_8_step8_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 8
	call cell_click
end on
on ui_control ($track_8_step9_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 9
	call cell_click
end on
on ui_control ($track_8_step10_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 10
	call cell_click
end on
on ui_control ($track_8_step11_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 11
	call cell_click
end on
on ui_control ($track_8_step12_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 12
	call cell_click
end on
on ui_control ($track_8_step13_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 13
	call cell_click
end on
on ui_control ($track_8_step14_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 14
	call cell_click
end on
on ui_control ($track_8_step15_btn)
	$cell_number := $MAX_NUM_OF_STEPS* $track_8_idx + 15
	call cell_click
end on
{END CELL UI CALLBACKS}
{function }  {}

{ function persistence_changed }

on persistence_changed
	
	{stop playback}
	
	{stop playback if triggered from midi note}
	if ($trigger_notes = 1 and $seq_running = 1 and $preset_key_counter > 0 and $latch_notes = 0)
		$preset_key_counter := 0
		call stop_sequencer
	end if
	
	{stop phrases}
	$phrase_running := 0
	$phrase_first := 0
	$phrase_key_counter := 0
	
	
	{tempo}
	
	$tempo_drag_course := $tempo_vedit/100
	$tempo_drag_fine := $tempo_vedit - ($tempo_drag_course*100)
	
	if ($sync_btn = 1) {host tempo}
		
		%tempo_check[0] := 0
		hide_part ($dimmed_arrows, $HIDE_PART_NOTHING)
		$gui_count := 0
		while($gui_count < 4)
			set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			inc($gui_count)
		end while
	
	else {own tempo}
		
		change_listener_par($NI_SIGNAL_TIMER_MS,60000000 / $tempo_vedit * 1000 / $TICKS_PER_BEAT / 10)
		
		hide_part ($dimmed_arrows, $HIDE_WHOLE_CONTROL)
		$gui_count := 0
		while($gui_count < 4)
			set_control_par(%tempo_control_ids[$gui_count],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
			inc($gui_count)
		end while
		if($tempo_drag_course > 99)
			set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_course/100)
			set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)	
		else
			set_control_par(get_ui_id($tempo_unit1),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)	
		end if
		set_control_par(get_ui_id($tempo_unit2),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course/10)-(($tempo_drag_course/100)*10))
		set_control_par(get_ui_id($tempo_unit3),$CONTROL_PAR_PICTURE_STATE,($tempo_drag_course)-(($tempo_drag_course/10)*10))
		set_control_par(get_ui_id($tempo_unit4),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine/10)
		set_control_par(get_ui_id($tempo_unit5),$CONTROL_PAR_PICTURE_STATE,$tempo_drag_fine mod 10)
	
	end if
	
	
	{inst pics}

	$count := 0
	while($count < 6)
		if ($count < 3)
			set_control_par(%drum_picture_id[$count],$CONTROL_PAR_PICTURE_STATE,%djembe_reorder[get_control_par(%inst_properties_ids[%menu_id_reorder[$count]],$CONTROL_PAR_VALUE)])
		else
			set_control_par(%drum_picture_id[$count],$CONTROL_PAR_PICTURE_STATE,%dunun_reorder[get_control_par(%inst_properties_ids[%menu_id_reorder[$count]],$CONTROL_PAR_VALUE)])
		end if
		inc($count)
	end while
	
	pgs_set_key_val(PIC_STATE,3,%djembe_reorder[$solo_djembe_menu])
	if($djembe_1_menu = 6)
		pgs_set_key_val(PIC_STATE,2,0)
	else
		pgs_set_key_val(PIC_STATE,2,1)
	end if
	
	if($djembe_2_menu = 6)
		pgs_set_key_val(PIC_STATE,1,0)
	else
		pgs_set_key_val(PIC_STATE,1,1)
	end if
	
	pgs_set_key_val(PIC_STATE,0,%dunun_reorder[$dununba_menu])
	
	
	{various}
	
	call update_beat_grid
	
	call change_preset
	
	call hide_sequencer
	call hide_instrument_properties
	
	if ($instr_loaded = 0 and $edit_seq_btn = 1)
		call show_sequencer
	end if
		
	if ($instr_loaded = 0 and $edit_seq_btn = 0 and $selected_instrument > 0)
		call show_instrument_properties
	end if
	
	$base_velocity_1 := $intensity_sld
	$base_velocity_2 := $intensity_sld
	$base_velocity_3 := $intensity_sld
	$base_velocity_4 := $intensity_sld
	$base_velocity_5 := $intensity_sld
	$base_velocity_6 := $intensity_sld
	$base_velocity_7 := $intensity_sld
	$base_velocity_8 := $intensity_sld
	
	call update_midi_file
	
	{parameter readout}
	
	set_control_par_str(get_ui_id($preset_knob),$CONTROL_PAR_LABEL,$preset_knob+1)
	set_control_par_str(get_ui_id($swing_sld),$CONTROL_PAR_LABEL,$swing_sld & " %")
	set_control_par_str(get_ui_id($humanize_sld),$CONTROL_PAR_LABEL,$humanize_sld & " %")
	set_control_par_str(get_ui_id($intensity_sld),$CONTROL_PAR_LABEL,(($intensity_sld - 1) * 100 / (127 - 1)) & " %")
	set_control_par_str(get_ui_id($reverb_sld),$CONTROL_PAR_LABEL,$reverb_sld & " %")
	
	$instr_loaded := 0
	
end on

{function } {}

{END OF SCRIPT}
