on init
  make_perfview
  set_ui_height_px(306)
  set_control_par_str($INST_ICON_ID,$CONTROL_PAR_PICTURE,"blank_icon")

  declare $count

  declare $keyswitch7 := 0 { Sustains Range }
  declare $keyswitch6 := 2 { Slides Range }
  declare $keyswitch5 := 4 { Ghost Range }
  declare $keyswitch1 := 5 { Range 1 - Open string-Fret 4 }
  declare $keyswitch2 := 7 { Range 2 - Fret 4-11 }
  declare $keyswitch3 := 9 { Range 3 - Fret 12-16 }
  declare $keyswitch4 := 11 { Range 4 - Fret 17-20 }

  set_key_color($keyswitch1, $KEY_COLOR_GREEN)
  set_key_color($keyswitch2, $KEY_COLOR_GREEN)
  set_key_color($keyswitch3, $KEY_COLOR_GREEN)
  set_key_color($keyswitch4, $KEY_COLOR_GREEN)
  set_key_color($keyswitch5, $KEY_COLOR_RED)
  set_key_color($keyswitch6, $KEY_COLOR_RED)
  set_key_color($keyswitch7, $KEY_COLOR_RED)

  declare ui_label $articulation_label (2,2)
  set_text($articulation_label, "Sustain")
  set_control_par_str(get_ui_id($articulation_label),$CONTROL_PAR_PICTURE, "active-box")
  set_control_par (get_ui_id($articulation_label), $CONTROL_PAR_WIDTH, 101)
  set_control_par(get_ui_id($articulation_label), $CONTROL_PAR_TEXT_ALIGNMENT, 1)
  set_control_par(get_ui_id($articulation_label), $CONTROL_PAR_FONT_TYPE, 1)
  set_control_par(get_ui_id($articulation_label), $CONTROL_PAR_TEXTPOS_Y, 3)
  move_control_px($articulation_label, 16, 262)

  declare $range_state := 1
  declare $current_range := 1
  declare $sustain_state := 1
  declare $ghost_state := 0
  declare $slide_state := 0
  declare $RR := 1
  declare $slide_rr := 1
  declare $pitch_bend_state := 0
  declare $pitch_bend_stauts := 0

  $count := 23
  while ($count < 64)
    set_key_color($count,$KEY_COLOR_DEFAULT)
    inc($count)
  end while

  { -------- Round Robin Dropdown -------- }
  declare ui_menu $RR_mode
  set_control_par_str(get_ui_id($RR_mode),$CONTROL_PAR_AUTOMATION_NAME,"Round Robin Mode")
  set_control_par_str(get_ui_id($RR_mode),$CONTROL_PAR_PICTURE, "dropdown-red")
  set_control_par(get_ui_id($RR_mode), $CONTROL_PAR_FONT_TYPE, 1)
  set_control_par(get_ui_id($RR_mode), $CONTROL_PAR_TEXTPOS_Y, 3)
  add_menu_item($RR_mode, "Alternating", 0)
  add_menu_item($RR_mode, "Random", 1)
  add_menu_item($RR_mode, "Round Robin 1", 2)
  add_menu_item($RR_mode, "Round Robin 2", 3)
  move_control_px($RR_mode, 287,262)
  { -------- /Round Robin Dropdown -------- }

  { -------- Articulation Dropdown -------- }
  { declare ui_menu $articulation
  set_control_par_str(get_ui_id($articulation),$CONTROL_PAR_AUTOMATION_NAME, "Articulation")
  set_control_par_str(get_ui_id($articulation),$CONTROL_PAR_PICTURE, "dropdown-red")
  set_control_par(get_ui_id($articulation), $CONTROL_PAR_FONT_TYPE, 1)
  set_control_par(get_ui_id($articulation), $CONTROL_PAR_TEXTPOS_Y, 3)
  add_menu_item($articulation, "Sustain", 0)
  add_menu_item($articulation, "Slide", 1)
  add_menu_item($articulation, "Ghost", 2)
  move_control_px($articulation, 16, 262) }
  { -------- /Articulation Dropdown -------- }

  { -------- Fret Range Dropdown -------- }
  declare ui_menu $fret_range
  set_control_par_str(get_ui_id($fret_range),$CONTROL_PAR_AUTOMATION_NAME, "fret_range")
  set_control_par_str(get_ui_id($fret_range),$CONTROL_PAR_PICTURE, "dropdown-red")
  set_control_par(get_ui_id($fret_range), $CONTROL_PAR_FONT_TYPE, 1)
  set_control_par(get_ui_id($fret_range), $CONTROL_PAR_TEXTPOS_Y, 3)
  add_menu_item($fret_range, "0-4", 0)
  add_menu_item($fret_range, "5-9", 1)
  add_menu_item($fret_range, "10-14", 2)
  add_menu_item($fret_range, "15-20", 3)
  move_control_px($fret_range, 153, 262)
  { -------- /Fret Range Dropdown -------- }

  { -------- Tone Knob -------- }
  declare ui_slider $tone_knob(341000, 1000000) { 250hz - 20khz }
  set_control_par_str(get_ui_id($tone_knob),$CONTROL_PAR_AUTOMATION_NAME, "Tone")
  set_control_par(get_ui_id($tone_knob), $CONTROL_PAR_DEFAULT_VALUE, 1000000)
  make_persistent($tone_knob)

  set_control_par_str(get_ui_id($tone_knob), $CONTROL_PAR_PICTURE, "knob")
  set_control_par(get_ui_id($tone_knob), $CONTROL_PAR_POS_X, 570)
  set_control_par(get_ui_id($tone_knob), $CONTROL_PAR_POS_Y, 264)
  set_control_par(get_ui_id($tone_knob), $CONTROL_PAR_MOUSE_BEHAVIOUR, -250)
  { -------- /Tone Knob -------- }

  { -------- String Noise Knob -------- }
  declare ui_slider $string_noise_volume(0, 1000000)
  set_control_par_str(get_ui_id($string_noise_volume),$CONTROL_PAR_AUTOMATION_NAME,"String Noise")
  set_control_par(get_ui_id($tone_knob), $CONTROL_PAR_DEFAULT_VALUE, 500000)
  make_persistent($string_noise_volume)

  set_control_par_str(get_ui_id($string_noise_volume), $CONTROL_PAR_PICTURE, "knob")
  set_control_par(get_ui_id($string_noise_volume), $CONTROL_PAR_POS_X, 474)
  set_control_par(get_ui_id($string_noise_volume), $CONTROL_PAR_POS_Y, 264)
  set_control_par(get_ui_id($string_noise_volume), $CONTROL_PAR_MOUSE_BEHAVIOUR, -250)
  { -------- /String Noise Knob -------- }
end on

on controller
  if ($CC_NUM = $VCC_PITCH_BEND)
    select (%CC[$VCC_PITCH_BEND])
      case -8192 to -1
        $pitch_bend_state := 1
        $pitch_bend_stauts := -1
      case 0
        $pitch_bend_state := 0
        $pitch_bend_stauts := 0
      case 1 to 8191
        $pitch_bend_state := 1
        $pitch_bend_stauts := 1
    end select
  end if
end on

on ui_control($tone_knob)
  set_engine_par($ENGINE_PAR_CUTOFF, $tone_knob, -1, 0, 1)
end on

on ui_control($string_noise_volume)
  set_engine_par($ENGINE_PAR_VOLUME, $string_noise_volume, 32, -1, -1)
  set_engine_par($ENGINE_PAR_VOLUME, $string_noise_volume, 33, -1, -1)
  set_engine_par($ENGINE_PAR_VOLUME, $string_noise_volume, 36, -1, -1)
  set_engine_par($ENGINE_PAR_VOLUME, $string_noise_volume, 37, -1, -1)
end on

on note
  disallow_group($ALL_GROUPS)
  $slide_rr := random(1, 4)

  { -------- Round Robin Mode Select -------- }
  { Alternating }
  if ($RR_mode = 0)
    if ($RR = 1)
      $RR := 2
    else
      $RR := 1
    end if
  end if

  { Random }
  if ($RR_mode = 1)
    $RR := random(1, 2)
  end if

  { RR1 }
  if ($RR_mode = 2)
    $RR := 1
  end if

  { RR2 }
  if ($RR_mode = 3)
    $RR := 2
  end if
  { -------- /Round Robin Mode Select -------- }


  { -------- Range State -------- }
  if ($EVENT_NOTE = $keyswitch7)
    set_text($articulation_label, "Sustain")
    if ($range_state = 0)
      $range_state := 1
    end if

    $ghost_state := 0
    $slide_state := 0
  end if
  { -------- /Range State -------- }

  { -------- Ghost State -------- }
  if ($EVENT_NOTE = $keyswitch5)
    set_text($articulation_label, "Ghost")
    if ($ghost_state = 0)
      $ghost_state := 1
    end if

    $slide_state := 0
    $range_state := 0
  end if
  { -------- /Ghost State -------- }

  { -------- Slide State -------- }
  if ($EVENT_NOTE = $keyswitch6)
    set_text($articulation_label, "Slide")
    if ($slide_state = 0)
      $slide_state := 1
    end if

    $ghost_state := 0
    $range_state := 0
  end if
  { -------- /Slide State -------- }

  { -------- Range Selectors -------- }
  if ($EVENT_NOTE = $keyswitch1)
    $current_range := 1
  end if

  if ($EVENT_NOTE = $keyswitch2)
    $current_range := 2
  end if

  if ($EVENT_NOTE = $keyswitch3)
    $current_range := 3
  end if

  if ($EVENT_NOTE = $keyswitch4)
    $current_range := 4
  end if
  { -------- /Range Selectors -------- }


  { -------- Set Active Key Colors -------- }
  $count := 12
  while ($count < 128)
    set_key_color($count,$KEY_COLOR_INACTIVE)
    inc($count)
  end while
  
  if ($range_state = 1)
    $count := 23
    while ($count < 64)
      set_key_color($count,$KEY_COLOR_DEFAULT)
      inc($count)
    end while
  end if

  if ($ghost_state = 1)
    $count := 23
    while ($count < 64)
      set_key_color($count,$KEY_COLOR_DEFAULT)
      inc($count)
    end while
  end if

  if ($slide_state = 1)
    if ($current_range = 4)
      $count := 38
      while ($count < 58)
        set_key_color($count,$KEY_COLOR_DEFAULT)
        inc($count)
      end while
    end if
    if ($current_range = 3)
      $count := 31
      while ($count < 75)
        set_key_color($count,$KEY_COLOR_DEFAULT)
        inc($count)
      end while

      set_key_color(41,$KEY_COLOR_INACTIVE)
      set_key_color(42,$KEY_COLOR_INACTIVE)
      set_key_color(43,$KEY_COLOR_INACTIVE)
      set_key_color(44,$KEY_COLOR_INACTIVE)
      set_key_color(45,$KEY_COLOR_INACTIVE)
      set_key_color(46,$KEY_COLOR_INACTIVE)
      set_key_color(47,$KEY_COLOR_INACTIVE)
      set_key_color(58,$KEY_COLOR_INACTIVE)
      set_key_color(59,$KEY_COLOR_INACTIVE)
      set_key_color(60,$KEY_COLOR_INACTIVE)
      set_key_color(61,$KEY_COLOR_INACTIVE)
      set_key_color(62,$KEY_COLOR_INACTIVE)
      set_key_color(63,$KEY_COLOR_INACTIVE)
      set_key_color(64,$KEY_COLOR_INACTIVE)

    end if
    if ($current_range = 2)
      $count := 26
      while ($count < 47)
        set_key_color($count,$KEY_COLOR_DEFAULT)
        inc($count)
      end while
    end if
    if ($current_range = 1)
      $count := 31
      while ($count < 94)
        set_key_color($count,$KEY_COLOR_DEFAULT)
        inc($count)
      end while

      set_key_color(23,$KEY_COLOR_INACTIVE)
      set_key_color(24,$KEY_COLOR_INACTIVE)
      set_key_color(25,$KEY_COLOR_INACTIVE)
      set_key_color(26,$KEY_COLOR_INACTIVE)
      set_key_color(27,$KEY_COLOR_INACTIVE)
      set_key_color(28,$KEY_COLOR_INACTIVE)
      set_key_color(29,$KEY_COLOR_INACTIVE)
      set_key_color(30,$KEY_COLOR_INACTIVE)
      set_key_color(44,$KEY_COLOR_INACTIVE)
      set_key_color(45,$KEY_COLOR_INACTIVE)
      set_key_color(46,$KEY_COLOR_INACTIVE)
      set_key_color(47,$KEY_COLOR_INACTIVE)
      set_key_color(60,$KEY_COLOR_INACTIVE)
      set_key_color(61,$KEY_COLOR_INACTIVE)
      set_key_color(62,$KEY_COLOR_INACTIVE)
      set_key_color(63,$KEY_COLOR_INACTIVE)
      set_key_color(64,$KEY_COLOR_INACTIVE)
      set_key_color(77,$KEY_COLOR_INACTIVE)
      set_key_color(78,$KEY_COLOR_INACTIVE)
      set_key_color(79,$KEY_COLOR_INACTIVE)
      set_key_color(80,$KEY_COLOR_INACTIVE)
      set_key_color(81,$KEY_COLOR_INACTIVE)
    end if
  end if

  { -------- /Set Active Key Colors -------- }


  { message("Range State: >> " & $range_state & " ----- Slide State: >> " & $slide_state & " ----- Ghost State: >> " & $ghost_state & " ----- Round Robin: >> " & $RR & " ----- Slide Round Robin: >> " & $slide_rr & " ----- Current Range: >> " & $current_range) }
  message("Range State: >> " & $range_state & " ----- Slide State: >> " & $slide_state & " ----- Ghost State: >> " & $ghost_state & " ----- Round Robin: >> " & $RR & " ----- Slide Round Robin: >> " & $slide_rr & " ------------- $EVENT_NOTE: >> " & $EVENT_NOTE)

  if ($ghost_state = 1)
    allow_group(find_group("Ghost RR" & $RR))
    exit
  end if

  if ($slide_state = 1)
    if ($pitch_bend_state = 1)
      if ($pitch_bend_stauts = -1)
        allow_group(find_group("Slide Down RR" & $slide_rr))
      end if

      if ($pitch_bend_stauts = 1)
        allow_group(find_group("Slide Up RR" & $slide_rr))
      end if

      exit
    end if

    if ($current_range = 3)
      allow_group(find_group("Slide Down RR" & $slide_rr))
    end if
    if ($current_range = 2)
      allow_group(find_group("Slide Up RR" & $slide_rr))
    end if
    if ($current_range = 1)
      allow_group(find_group("E String Slide Up Tonal"))
      allow_group(find_group("A String Slide Up Tonal"))
      allow_group(find_group("D String Slide Up Tonal"))
      allow_group(find_group("G String Slide Up Tonal"))
    end if
    if ($current_range = 4)
      allow_group(find_group("Slide UpDown RR" & $slide_rr))
    end if

    exit
  end if

  if ($range_state = 1)
    { Note Range 1 }
    if ($current_range = 1)
        allow_group(find_group("E String Range 1 RR" & $RR))
        allow_group(find_group("A String Range 1 RR" & $RR))
        allow_group(find_group("D String Range 1 RR" & $RR))
        allow_group(find_group("G String Range 1 RR" & $RR))
        allow_group(find_group("G String Range 2 RR" & $RR))
        allow_group(find_group("G String Range 3 RR" & $RR))
        allow_group(find_group("G String Range 4 RR" & $RR))
        exit
    end if

    { Note Range 2 }
    if ($current_range = 2)
        allow_group(find_group("E String Range 1 RR" & $RR))
        allow_group(find_group("E String Range 2 RR" & $RR))
        allow_group(find_group("A String Range 2 RR" & $RR))
        allow_group(find_group("D String Range 2 RR" & $RR))
        allow_group(find_group("G String Range 2 RR" & $RR))
        allow_group(find_group("G String Range 3 RR" & $RR))
        allow_group(find_group("G String Range 4 RR" & $RR))
        exit
    end if

    { Note Range 3 }
    if ($current_range = 3)
        allow_group(find_group("E String Range 1 RR" & $RR))
        allow_group(find_group("E String Range 2 RR" & $RR))
        allow_group(find_group("E String Range 3 RR" & $RR))
        allow_group(find_group("A String Range 3 RR" & $RR))
        allow_group(find_group("D String Range 3 RR" & $RR))
        allow_group(find_group("G String Range 3 RR" & $RR))
        allow_group(find_group("G String Range 4 RR" & $RR))
        exit
    end if

    { Note Range 4 }
    if ($current_range = 4)
        allow_group(find_group("E String Range 1 RR" & $RR))
        allow_group(find_group("E String Range 2 RR" & $RR))
        allow_group(find_group("E String Range 3 RR" & $RR))
        allow_group(find_group("E String Range 4 RR" & $RR))
        allow_group(find_group("A String Range 4 RR" & $RR))
        allow_group(find_group("D String Range 4 RR" & $RR))
        allow_group(find_group("G String Range 4 RR" & $RR))
        exit
    end if
  end if

  { Note Range 5 }
  if ($current_range = 5)
    allow_group(32)
    exit
  end if

end on

on release
  if ($ghost_state = 0)
  if ($slide_state = 0)
    if (get_event_par_arr($EVENT_ID,$EVENT_PAR_ALLOW_GROUP,$ALL_GROUPS) = 1)
      disallow_group($ALL_GROUPS)
      allow_group(find_group("Release RR" & random(1, 2)))
      allow_group(find_group("String Noise RR" & random(1, 2)))
      play_note ($EVENT_NOTE,$EVENT_VELOCITY,0,0)
    end if
  end if
  end if

end on
